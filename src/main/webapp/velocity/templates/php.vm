#set($layout="indexlayout.vm")
{"results":{"lang":"php","period":["2014-07-19","2014-07-18","2014-07-17","2014-07-13","2014-07-12","2014-07-11","2014-07-10","2014-07-09","2014-07-08","2014-07-07","2014-07-06","2014-07-05","2014-07-04","2014-07-03","2014-07-02","2014-07-01","2014-06-30","2014-06-29","2014-06-28","2014-06-27","2014-06-26","2014-06-25","2014-06-24","2014-06-23","2014-06-22","2014-06-21","2014-06-20","2014-06-19","2014-06-18","2014-06-17","2014-06-16","2014-06-15","2014-06-14","2014-06-13","2014-06-12","2014-06-11","2014-06-10","2014-06-09","2014-06-08","2014-06-07","2014-06-04","2014-06-03","2014-06-02","2014-06-01","2014-05-31","2014-05-30","2014-05-29","2014-05-28","2014-05-27","2014-05-26","2014-05-25","2014-05-24","2014-05-23","2014-05-22","2014-05-21","2014-05-20","2014-05-19","2014-05-18","2014-05-17","2014-05-16","2014-05-15","2014-05-14","2014-05-13","2014-05-12","2014-05-11","2014-05-10","2014-05-09","2014-05-08","2014-05-07","2014-05-06","2014-05-05","2014-05-04","2014-05-03","2014-05-02","2014-05-01","2014-04-30","2014-04-29","2014-04-28","2014-04-27","2014-04-26","2014-04-25","2014-04-24","2014-04-23","2014-04-22","2014-04-21","2014-04-20","2014-04-19","2014-04-18","2014-04-17","2014-04-16","2014-04-15","2014-04-14","2014-04-13","2014-04-12","2014-04-11","2014-04-10","2014-04-09","2014-04-08","2014-04-07","2014-04-06","2014-04-05","2014-04-04","2014-04-03","2014-04-02","2014-04-01","2014-03-31","2014-03-30","2014-03-29","2014-03-28","2014-03-27","2014-03-26","2014-03-25","2014-03-24","2014-03-23","2014-03-22","2014-03-21","2014-03-20","2014-03-19","2014-03-18","2014-03-17","2014-03-16","2014-03-15","2014-03-14","2014-03-13","2014-03-12","2014-03-11","2014-03-10","2014-03-09","2014-03-08","2014-03-07","2014-03-06","2014-03-05","2014-03-04","2014-03-03","2014-03-01","2014-02-28","2014-02-26","2014-02-24","2014-02-22","2014-02-21","2014-02-20","2014-02-18","2014-02-17","2014-02-16","2014-02-14","2014-02-13","2014-02-12","2014-02-11","2014-02-10","2014-02-09","2014-02-08","2014-02-07","2014-02-06","2014-02-05","2014-02-04","2014-02-03","2014-02-02","2014-02-01","2014-01-31","2014-01-30","2014-01-29","2014-01-28","2014-01-27","2014-01-26","2014-01-25","2014-01-24","2014-01-23","2014-01-22","2014-01-21","2014-01-20","2014-01-19","2014-01-18","2014-01-17","2014-01-16","2014-01-15","2014-01-14","2014-01-13","2014-01-12","2014-01-11","2014-01-10","2014-01-09","2014-01-08","2014-01-07","2014-01-06","2014-01-05","2014-01-04","2014-01-03","2014-01-02","2014-01-01","2013-12-31","2013-12-30","2013-12-29","2013-12-28","2013-12-27","2013-12-26","2013-12-25","2013-12-24","2013-12-23","2013-12-22","2013-12-21","2013-12-20","2013-12-19","2013-12-18","2013-12-17","2013-12-16","2013-12-15","2013-12-14","2013-12-13","2013-12-12","2013-12-11","2013-12-10","2013-12-09","2013-12-08","2013-12-07","2013-12-06","2013-12-05","2013-12-04","2013-12-03"],"raw":[{"lang":"php","file":"2014-07-19","convention":{"lang":"php","indent":{"tab":73493114,"space":177583550,"commits":1077600,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}],"total":251076664},"classBrace":{"newline":413307,"sameline":316529,"commits":120734,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":729836},"controlBrace":{"sameline":8723854,"newline":4204091,"commits":526519,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}],"total":12927945},"methodBrace":{"sameline":944357,"newline":525072,"commits":117670,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":1469429},"spaceAroundControl":{"space":6109971,"nospace":661433,"commits":396307,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}],"total":6771404},"spaceInsideControl":{"space":1823067,"nospace":9125423,"commits":532584,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}],"total":10948490},"spaceAroundMethod":{"space":28671,"nospace":140570,"commits":27427,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":169241},"spaceInsideMethod":{"space":152606,"nospace":816619,"commits":95149,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":969225},"className":{"camel":14432,"pascal":404166,"capssnake":1389,"snakepascal":72813,"snake":33069,"uppersnake":1594,"commits":107114,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":527463},"constName":{"camel":3933,"pascal":3380,"capssnake":474127,"snakepascal":270,"snake":5127,"commits":54382,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}],"total":486837},"functionName":{"camel":3695311,"pascal":105237,"capssnake":6315,"snakepascal":3615,"snake":1172516,"commits":333255,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":4982994},"methodDeclare":{"staticlate":565461,"staticfirst":35786,"abstractlate":10705,"abstractfirst":46439,"commits":82263,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}],"total":658391},"linelength":{"char80":198498457,"char120":15618580,"char150":5858117,"commits":1142324,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}],"total":219975154}}},{"lang":"php","file":"2014-07-18","convention":{"lang":"php","indent":{"tab":327674,"space":737975,"commits":3916,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1488,"sameline":1102,"commits":442,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42106,"newline":21018,"commits":1897,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3906,"newline":5158,"commits":468,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":28899,"nospace":1778,"commits":1512,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7986,"nospace":45780,"commits":1925,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":106,"nospace":870,"commits":128,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":878,"nospace":5501,"commits":372,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":158,"pascal":1390,"capssnake":6,"snakepascal":351,"snake":74,"uppersnake":0,"commits":359,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":0,"capssnake":1737,"snakepascal":0,"snake":45,"commits":163,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9520,"pascal":1876,"capssnake":64,"snakepascal":18,"snake":4429,"commits":1212,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2012,"staticfirst":138,"abstractlate":10,"abstractfirst":216,"commits":248,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":814224,"char120":65215,"char150":21330,"commits":4171,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-17","convention":{"lang":"php","indent":{"tab":161122,"space":426048,"commits":2937,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":762,"sameline":593,"commits":273,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18274,"newline":10016,"commits":1516,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2727,"newline":914,"commits":325,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13465,"nospace":1271,"commits":1172,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7696,"nospace":16170,"commits":1524,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":77,"nospace":203,"commits":77,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":724,"nospace":1786,"commits":294,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":16,"pascal":1050,"capssnake":0,"snakepascal":67,"snake":72,"uppersnake":1,"commits":233,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":11,"pascal":1,"capssnake":1118,"snakepascal":0,"snake":1,"commits":128,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6933,"pascal":223,"capssnake":3,"snakepascal":8,"snake":3035,"commits":887,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":978,"staticfirst":62,"abstractlate":10,"abstractfirst":143,"commits":214,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":483608,"char120":38892,"char150":14338,"commits":3105,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-13","convention":{"lang":"php","indent":{"tab":504830,"space":960593,"commits":4597,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2616,"sameline":1689,"commits":511,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42299,"newline":18992,"commits":2120,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3149,"newline":3083,"commits":443,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":30298,"nospace":2835,"commits":1611,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6722,"nospace":45251,"commits":2119,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":35,"nospace":616,"commits":116,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":538,"nospace":3539,"commits":372,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":27,"pascal":1971,"capssnake":6,"snakepascal":696,"snake":183,"uppersnake":0,"commits":453,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":1,"capssnake":1850,"snakepascal":1,"snake":22,"commits":233,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23103,"pascal":344,"capssnake":36,"snakepascal":5,"snake":6570,"commits":1433,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2774,"staticfirst":89,"abstractlate":25,"abstractfirst":248,"commits":407,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1055411,"char120":81655,"char150":27504,"commits":4894,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-12","convention":{"lang":"php","indent":{"tab":420374,"space":941864,"commits":5502,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1808,"sameline":1361,"commits":589,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57079,"newline":21567,"commits":2552,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6363,"newline":1563,"commits":635,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33267,"nospace":3691,"commits":1849,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12724,"nospace":54554,"commits":2581,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":55,"nospace":1007,"commits":152,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1071,"nospace":4014,"commits":506,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":38,"pascal":2025,"capssnake":2,"snakepascal":246,"snake":139,"uppersnake":33,"commits":552,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":4,"capssnake":2026,"snakepascal":0,"snake":9,"commits":243,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16465,"pascal":983,"capssnake":57,"snakepascal":11,"snake":5805,"commits":1665,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3565,"staticfirst":64,"abstractlate":33,"abstractfirst":263,"commits":422,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1054226,"char120":91448,"char150":41292,"commits":5886,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-11","convention":{"lang":"php","indent":{"tab":384023,"space":682533,"commits":3188,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1719,"sameline":1004,"commits":358,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":26589,"newline":14897,"commits":1557,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2175,"newline":1812,"commits":367,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19066,"nospace":1765,"commits":1196,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6134,"nospace":30019,"commits":1568,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":21,"nospace":366,"commits":94,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":923,"nospace":1696,"commits":299,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":104,"pascal":1984,"capssnake":3,"snakepascal":69,"snake":93,"uppersnake":1,"commits":323,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":0,"capssnake":1015,"snakepascal":0,"snake":12,"commits":164,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20056,"pascal":69,"capssnake":0,"snakepascal":2,"snake":3297,"commits":1029,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2326,"staticfirst":148,"abstractlate":27,"abstractfirst":129,"commits":222,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":775481,"char120":57939,"char150":20470,"commits":3351,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-10","convention":{"lang":"php","indent":{"tab":211349,"space":506670,"commits":4301,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":903,"sameline":573,"commits":397,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":26768,"newline":11922,"commits":2070,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2202,"newline":1034,"commits":467,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19131,"nospace":1702,"commits":1653,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2937,"nospace":31301,"commits":2096,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":53,"nospace":339,"commits":87,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":244,"nospace":1868,"commits":358,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":25,"pascal":969,"capssnake":2,"snakepascal":68,"snake":66,"uppersnake":3,"commits":360,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":20,"pascal":0,"capssnake":1894,"snakepascal":0,"snake":18,"commits":192,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9823,"pascal":291,"capssnake":73,"snakepascal":8,"snake":2498,"commits":1285,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2251,"staticfirst":96,"abstractlate":25,"abstractfirst":36,"commits":365,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":534583,"char120":53975,"char150":19227,"commits":4565,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-09","convention":{"lang":"php","indent":{"tab":292609,"space":628077,"commits":3458,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1413,"sameline":1668,"commits":358,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":27777,"newline":18302,"commits":1755,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5396,"newline":2324,"commits":386,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19517,"nospace":3196,"commits":1353,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":14323,"nospace":27466,"commits":1762,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":36,"nospace":576,"commits":100,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1276,"nospace":3287,"commits":314,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":33,"pascal":1215,"capssnake":11,"snakepascal":298,"snake":92,"uppersnake":1,"commits":338,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":21,"capssnake":1093,"snakepascal":0,"snake":7,"commits":180,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13187,"pascal":543,"capssnake":14,"snakepascal":0,"snake":5370,"commits":1047,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1302,"staticfirst":75,"abstractlate":20,"abstractfirst":140,"commits":267,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":709544,"char120":52305,"char150":20058,"commits":3634,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-08","convention":{"lang":"php","indent":{"tab":196101,"space":568944,"commits":2507,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1463,"sameline":2179,"commits":282,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":32249,"newline":8913,"commits":1252,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3869,"newline":1063,"commits":282,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23821,"nospace":1222,"commits":953,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2916,"nospace":31459,"commits":1266,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":19,"nospace":341,"commits":61,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":138,"nospace":3174,"commits":229,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":45,"pascal":1459,"capssnake":30,"snakepascal":751,"snake":59,"uppersnake":30,"commits":245,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":29,"capssnake":1199,"snakepascal":0,"snake":26,"commits":149,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12754,"pascal":364,"capssnake":70,"snakepascal":2,"snake":4996,"commits":781,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2291,"staticfirst":100,"abstractlate":9,"abstractfirst":270,"commits":214,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":615571,"char120":49607,"char150":17281,"commits":2636,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-07","convention":{"lang":"php","indent":{"tab":128026,"space":360552,"commits":2274,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1489,"sameline":319,"commits":244,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":16775,"newline":7396,"commits":1139,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1319,"newline":555,"commits":251,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11335,"nospace":1231,"commits":823,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1920,"nospace":18485,"commits":1149,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":5,"nospace":203,"commits":38,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":76,"nospace":1315,"commits":211,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":27,"pascal":989,"capssnake":0,"snakepascal":250,"snake":45,"uppersnake":0,"commits":203,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":1,"capssnake":1176,"snakepascal":0,"snake":12,"commits":123,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9114,"pascal":95,"capssnake":32,"snakepascal":0,"snake":1391,"commits":649,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1407,"staticfirst":84,"abstractlate":4,"abstractfirst":53,"commits":174,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":389722,"char120":32922,"char150":11072,"commits":2414,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-06","convention":{"lang":"php","indent":{"tab":401619,"space":1032803,"commits":5797,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2830,"sameline":1689,"commits":706,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46114,"newline":23307,"commits":2819,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2519,"newline":7776,"commits":663,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":32396,"nospace":4308,"commits":2084,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6261,"nospace":52041,"commits":2808,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":34,"nospace":408,"commits":161,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":518,"nospace":5531,"commits":540,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":46,"pascal":2171,"capssnake":14,"snakepascal":233,"snake":192,"uppersnake":4,"commits":610,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":7,"capssnake":2278,"snakepascal":0,"snake":24,"commits":299,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20308,"pascal":540,"capssnake":37,"snakepascal":7,"snake":5745,"commits":1922,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2785,"staticfirst":103,"abstractlate":33,"abstractfirst":304,"commits":412,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1153656,"char120":85803,"char150":29861,"commits":6108,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-05","convention":{"lang":"php","indent":{"tab":257943,"space":605359,"commits":2805,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1280,"sameline":1421,"commits":376,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":33562,"newline":19459,"commits":1394,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5734,"newline":1618,"commits":365,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":21345,"nospace":2301,"commits":1076,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9707,"nospace":35357,"commits":1417,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":169,"nospace":601,"commits":106,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":761,"nospace":3682,"commits":262,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":21,"pascal":1463,"capssnake":3,"snakepascal":97,"snake":93,"uppersnake":0,"commits":335,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":0,"capssnake":1339,"snakepascal":0,"snake":10,"commits":172,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10231,"pascal":616,"capssnake":9,"snakepascal":26,"snake":5465,"commits":927,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1254,"staticfirst":140,"abstractlate":4,"abstractfirst":164,"commits":219,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":719342,"char120":48450,"char150":19199,"commits":2982,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-04","convention":{"lang":"php","indent":{"tab":175594,"space":337218,"commits":2370,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":564,"sameline":391,"commits":246,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":15804,"newline":6191,"commits":1237,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1302,"newline":577,"commits":258,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":12615,"nospace":836,"commits":913,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3398,"nospace":15572,"commits":1230,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":387,"nospace":149,"commits":42,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":267,"nospace":1323,"commits":224,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":21,"pascal":571,"capssnake":3,"snakepascal":27,"snake":38,"uppersnake":36,"commits":199,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":10,"capssnake":825,"snakepascal":0,"snake":19,"commits":122,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":3851,"pascal":88,"capssnake":30,"snakepascal":2,"snake":1435,"commits":684,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":990,"staticfirst":37,"abstractlate":5,"abstractfirst":36,"commits":180,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":344305,"char120":36010,"char150":11932,"commits":2459,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-03","convention":{"lang":"php","indent":{"tab":203936,"space":591010,"commits":3947,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1282,"sameline":932,"commits":407,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":35622,"newline":13051,"commits":1999,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3023,"newline":1229,"commits":448,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26793,"nospace":3512,"commits":1599,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6975,"nospace":35879,"commits":1997,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":99,"nospace":514,"commits":103,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":398,"nospace":2393,"commits":363,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":18,"pascal":1066,"capssnake":4,"snakepascal":359,"snake":133,"uppersnake":5,"commits":365,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":0,"capssnake":1021,"snakepascal":0,"snake":47,"commits":214,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12066,"pascal":462,"capssnake":1,"snakepascal":3,"snake":3407,"commits":1227,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1691,"staticfirst":84,"abstractlate":28,"abstractfirst":382,"commits":314,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":640280,"char120":55490,"char150":21592,"commits":4163,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-02","convention":{"lang":"php","indent":{"tab":105143,"space":301510,"commits":2753,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":783,"sameline":383,"commits":250,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":15420,"newline":7601,"commits":1368,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1336,"newline":1018,"commits":289,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11608,"nospace":1171,"commits":1045,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1855,"nospace":17451,"commits":1414,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":45,"nospace":247,"commits":49,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":166,"nospace":1451,"commits":212,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":12,"pascal":718,"capssnake":1,"snakepascal":104,"snake":57,"uppersnake":1,"commits":224,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":0,"capssnake":460,"snakepascal":0,"snake":0,"commits":123,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5401,"pascal":272,"capssnake":8,"snakepascal":6,"snake":1660,"commits":770,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":955,"staticfirst":31,"abstractlate":1,"abstractfirst":50,"commits":204,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":333063,"char120":28350,"char150":11516,"commits":2917,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-07-01","convention":{"lang":"php","indent":{"tab":101121,"space":320844,"commits":1917,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":917,"sameline":305,"commits":180,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":17753,"newline":8559,"commits":883,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2302,"newline":1302,"commits":210,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":12550,"nospace":1264,"commits":719,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4640,"nospace":17288,"commits":903,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":12,"nospace":182,"commits":46,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":347,"nospace":2059,"commits":174,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":16,"pascal":563,"capssnake":3,"snakepascal":246,"snake":17,"uppersnake":2,"commits":160,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":716,"snakepascal":0,"snake":14,"commits":83,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5815,"pascal":150,"capssnake":0,"snakepascal":31,"snake":2427,"commits":518,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":979,"staticfirst":40,"abstractlate":10,"abstractfirst":76,"commits":142,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":358626,"char120":29030,"char150":9657,"commits":2024,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-30","convention":{"lang":"php","indent":{"tab":269127,"space":704128,"commits":3509,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2251,"sameline":1372,"commits":359,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":29421,"newline":16760,"commits":1780,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2547,"newline":1636,"commits":393,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19696,"nospace":1852,"commits":1319,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5372,"nospace":34016,"commits":1775,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":28,"nospace":385,"commits":83,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":600,"nospace":2085,"commits":325,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":32,"pascal":2307,"capssnake":4,"snakepascal":354,"snake":57,"uppersnake":2,"commits":315,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":11,"capssnake":1878,"snakepascal":0,"snake":0,"commits":192,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16968,"pascal":701,"capssnake":8,"snakepascal":2,"snake":3702,"commits":1017,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2192,"staticfirst":19,"abstractlate":19,"abstractfirst":166,"commits":271,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":770669,"char120":54835,"char150":25819,"commits":3716,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-29","convention":{"lang":"php","indent":{"tab":364128,"space":939931,"commits":6069,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1995,"sameline":1137,"commits":662,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47197,"newline":20735,"commits":2949,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2894,"newline":2474,"commits":641,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34061,"nospace":3063,"commits":2111,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3841,"nospace":54707,"commits":2957,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":162,"nospace":534,"commits":138,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":426,"nospace":3055,"commits":511,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":67,"pascal":2123,"capssnake":1,"snakepascal":141,"snake":209,"uppersnake":11,"commits":578,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":9,"pascal":13,"capssnake":2534,"snakepascal":11,"snake":21,"commits":311,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21090,"pascal":303,"capssnake":75,"snakepascal":7,"snake":4481,"commits":1880,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2499,"staticfirst":97,"abstractlate":35,"abstractfirst":293,"commits":439,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1051777,"char120":80834,"char150":28966,"commits":6388,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-28","convention":{"lang":"php","indent":{"tab":374193,"space":1012005,"commits":5638,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2412,"sameline":1768,"commits":657,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47826,"newline":23805,"commits":2658,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5540,"newline":3551,"commits":672,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34091,"nospace":2696,"commits":1884,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6816,"nospace":54005,"commits":2691,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":44,"nospace":538,"commits":141,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":665,"nospace":5028,"commits":553,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":71,"pascal":2521,"capssnake":8,"snakepascal":172,"snake":153,"uppersnake":4,"commits":618,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":13,"capssnake":2037,"snakepascal":11,"snake":1,"commits":302,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20420,"pascal":635,"capssnake":4,"snakepascal":21,"snake":5984,"commits":1717,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2468,"staticfirst":103,"abstractlate":68,"abstractfirst":210,"commits":407,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1144703,"char120":80820,"char150":34388,"commits":5973,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-27","convention":{"lang":"php","indent":{"tab":350376,"space":968145,"commits":4759,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2709,"sameline":1137,"commits":511,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57734,"newline":12529,"commits":2305,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3510,"newline":2638,"commits":548,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":41354,"nospace":3088,"commits":1728,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7561,"nospace":51085,"commits":2313,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":105,"nospace":665,"commits":138,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":659,"nospace":3730,"commits":447,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":21,"pascal":1813,"capssnake":0,"snakepascal":986,"snake":228,"uppersnake":11,"commits":446,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":0,"capssnake":1982,"snakepascal":0,"snake":0,"commits":293,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23826,"pascal":325,"capssnake":1,"snakepascal":5,"snake":6339,"commits":1478,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4135,"staticfirst":136,"abstractlate":38,"abstractfirst":290,"commits":341,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1028385,"char120":92757,"char150":34064,"commits":5063,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-26","convention":{"lang":"php","indent":{"tab":134312,"space":367903,"commits":3029,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":529,"sameline":645,"commits":317,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18728,"newline":6313,"commits":1552,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1071,"newline":1026,"commits":281,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":14493,"nospace":1279,"commits":1202,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3929,"nospace":18015,"commits":1550,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":9,"nospace":175,"commits":52,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":239,"nospace":1164,"commits":239,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":832,"capssnake":1,"snakepascal":37,"snake":148,"uppersnake":0,"commits":261,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":15,"capssnake":665,"snakepascal":0,"snake":24,"commits":136,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6024,"pascal":62,"capssnake":0,"snakepascal":1,"snake":3293,"commits":924,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1298,"staticfirst":20,"abstractlate":4,"abstractfirst":38,"commits":249,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":407349,"char120":32905,"char150":12774,"commits":3213,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-25","convention":{"lang":"php","indent":{"tab":272602,"space":751208,"commits":4823,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2128,"sameline":802,"commits":575,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":33639,"newline":14685,"commits":2423,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2359,"newline":1547,"commits":531,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":24931,"nospace":1473,"commits":1825,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5215,"nospace":36051,"commits":2437,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":44,"nospace":318,"commits":120,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":500,"nospace":2182,"commits":426,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":17,"pascal":1950,"capssnake":10,"snakepascal":233,"snake":90,"uppersnake":0,"commits":491,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":1,"capssnake":1542,"snakepascal":0,"snake":225,"commits":255,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18143,"pascal":220,"capssnake":3,"snakepascal":1,"snake":3619,"commits":1533,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2802,"staticfirst":79,"abstractlate":19,"abstractfirst":184,"commits":430,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":841547,"char120":65211,"char150":22975,"commits":5075,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-24","convention":{"lang":"php","indent":{"tab":202009,"space":548321,"commits":3450,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1507,"sameline":1819,"commits":390,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28535,"newline":8104,"commits":1702,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2112,"newline":879,"commits":377,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20985,"nospace":1736,"commits":1333,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2596,"nospace":27592,"commits":1754,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":78,"nospace":356,"commits":81,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":281,"nospace":1765,"commits":319,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":1158,"capssnake":8,"snakepascal":161,"snake":134,"uppersnake":2,"commits":317,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":18,"pascal":6,"capssnake":1641,"snakepascal":3,"snake":12,"commits":232,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10889,"pascal":127,"capssnake":32,"snakepascal":14,"snake":2895,"commits":1103,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1718,"staticfirst":60,"abstractlate":25,"abstractfirst":143,"commits":289,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":628382,"char120":46917,"char150":21319,"commits":3679,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-23","convention":{"lang":"php","indent":{"tab":141538,"space":553944,"commits":2824,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1380,"sameline":692,"commits":332,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":25858,"newline":12439,"commits":1400,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2096,"newline":1475,"commits":313,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19790,"nospace":1144,"commits":1010,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3083,"nospace":27895,"commits":1432,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":66,"nospace":214,"commits":53,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":248,"nospace":2329,"commits":251,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":1839,"capssnake":1,"snakepascal":73,"snake":101,"uppersnake":4,"commits":312,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":0,"capssnake":1642,"snakepascal":0,"snake":1,"commits":171,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":11977,"pascal":229,"capssnake":0,"snakepascal":12,"snake":3136,"commits":932,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2386,"staticfirst":67,"abstractlate":21,"abstractfirst":73,"commits":242,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":606517,"char120":49319,"char150":17132,"commits":2980,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-22","convention":{"lang":"php","indent":{"tab":413516,"space":1007719,"commits":5927,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2436,"sameline":1395,"commits":671,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42973,"newline":22977,"commits":2803,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3171,"newline":4761,"commits":615,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26605,"nospace":3226,"commits":1986,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3206,"nospace":51926,"commits":2818,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":78,"nospace":753,"commits":152,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":261,"nospace":5307,"commits":509,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":70,"pascal":2196,"capssnake":6,"snakepascal":417,"snake":249,"uppersnake":22,"commits":638,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":7,"capssnake":2081,"snakepascal":0,"snake":110,"commits":292,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20442,"pascal":340,"capssnake":32,"snakepascal":11,"snake":6564,"commits":1896,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2738,"staticfirst":236,"abstractlate":85,"abstractfirst":117,"commits":458,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1117950,"char120":79002,"char150":25623,"commits":6277,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-21","convention":{"lang":"php","indent":{"tab":302815,"space":892252,"commits":5531,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2446,"sameline":1190,"commits":619,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41615,"newline":17636,"commits":2754,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5006,"newline":2387,"commits":575,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":29491,"nospace":3234,"commits":1993,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6980,"nospace":44546,"commits":2786,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":43,"nospace":587,"commits":131,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":657,"nospace":4062,"commits":448,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":35,"pascal":1996,"capssnake":4,"snakepascal":941,"snake":77,"uppersnake":7,"commits":557,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":0,"capssnake":2272,"snakepascal":3,"snake":24,"commits":306,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18120,"pascal":789,"capssnake":66,"snakepascal":12,"snake":4862,"commits":1689,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2838,"staticfirst":108,"abstractlate":24,"abstractfirst":172,"commits":387,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1011095,"char120":74603,"char150":29240,"commits":5861,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-20","convention":{"lang":"php","indent":{"tab":137629,"space":345668,"commits":2460,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":954,"sameline":565,"commits":292,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":16354,"newline":7186,"commits":1242,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1418,"newline":389,"commits":288,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11937,"nospace":984,"commits":943,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3721,"nospace":15533,"commits":1259,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":17,"nospace":300,"commits":66,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":253,"nospace":948,"commits":224,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":12,"pascal":984,"capssnake":0,"snakepascal":65,"snake":93,"uppersnake":7,"commits":252,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":1,"capssnake":758,"snakepascal":0,"snake":2,"commits":106,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6885,"pascal":202,"capssnake":0,"snakepascal":5,"snake":2280,"commits":826,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1125,"staticfirst":33,"abstractlate":21,"abstractfirst":71,"commits":205,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":379303,"char120":35693,"char150":13682,"commits":2599,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-19","convention":{"lang":"php","indent":{"tab":135715,"space":535974,"commits":4548,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1213,"sameline":770,"commits":529,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":30636,"newline":7989,"commits":2216,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1669,"newline":889,"commits":468,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20902,"nospace":3581,"commits":1712,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2818,"nospace":29586,"commits":2230,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":30,"nospace":504,"commits":99,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":280,"nospace":1573,"commits":400,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":42,"pascal":959,"capssnake":3,"snakepascal":280,"snake":175,"uppersnake":6,"commits":451,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":13,"pascal":27,"capssnake":1203,"snakepascal":0,"snake":20,"commits":194,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10156,"pascal":270,"capssnake":33,"snakepascal":3,"snake":3782,"commits":1468,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2012,"staticfirst":55,"abstractlate":10,"abstractfirst":148,"commits":362,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":617666,"char120":56826,"char150":22761,"commits":4853,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-18","convention":{"lang":"php","indent":{"tab":203381,"space":468773,"commits":4237,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1622,"sameline":531,"commits":381,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":19255,"newline":10144,"commits":2115,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1321,"newline":1346,"commits":400,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":12964,"nospace":1795,"commits":1565,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3933,"nospace":21397,"commits":2123,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":44,"nospace":322,"commits":81,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":355,"nospace":1573,"commits":306,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":10,"pascal":977,"capssnake":2,"snakepascal":157,"snake":38,"uppersnake":21,"commits":326,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":6,"capssnake":1542,"snakepascal":0,"snake":0,"commits":165,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12184,"pascal":120,"capssnake":1,"snakepascal":5,"snake":2840,"commits":1274,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1582,"staticfirst":20,"abstractlate":264,"abstractfirst":97,"commits":294,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":536070,"char120":42224,"char150":12536,"commits":4431,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-17","convention":{"lang":"php","indent":{"tab":117638,"space":260003,"commits":2708,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":470,"sameline":656,"commits":237,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":13174,"newline":4788,"commits":1306,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1255,"newline":369,"commits":272,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":9343,"nospace":767,"commits":1009,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4271,"nospace":11345,"commits":1318,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":8,"nospace":87,"commits":38,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":193,"nospace":812,"commits":215,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":9,"pascal":573,"capssnake":0,"snakepascal":61,"snake":108,"uppersnake":1,"commits":216,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":1,"capssnake":1571,"snakepascal":0,"snake":0,"commits":131,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5535,"pascal":63,"capssnake":4,"snakepascal":2,"snake":1756,"commits":826,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":785,"staticfirst":50,"abstractlate":7,"abstractfirst":77,"commits":188,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":280837,"char120":26333,"char150":11113,"commits":2872,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-16","convention":{"lang":"php","indent":{"tab":128500,"space":320579,"commits":2560,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":739,"sameline":282,"commits":261,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":15786,"newline":5101,"commits":1299,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1046,"newline":564,"commits":227,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11547,"nospace":1193,"commits":1002,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3501,"nospace":14922,"commits":1311,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":15,"nospace":119,"commits":46,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":441,"nospace":583,"commits":178,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":531,"capssnake":1,"snakepascal":175,"snake":95,"uppersnake":0,"commits":239,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":18,"capssnake":774,"snakepascal":0,"snake":20,"commits":104,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6981,"pascal":92,"capssnake":1,"snakepascal":2,"snake":1851,"commits":746,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1059,"staticfirst":43,"abstractlate":21,"abstractfirst":83,"commits":207,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":362561,"char120":29041,"char150":12311,"commits":2705,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-15","convention":{"lang":"php","indent":{"tab":315621,"space":823357,"commits":5047,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2544,"sameline":1507,"commits":575,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42989,"newline":14749,"commits":2377,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3878,"newline":1916,"commits":515,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23689,"nospace":8647,"commits":1801,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9268,"nospace":39541,"commits":2416,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":51,"nospace":1579,"commits":122,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":748,"nospace":3017,"commits":434,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":71,"pascal":2082,"capssnake":19,"snakepascal":520,"snake":89,"uppersnake":8,"commits":549,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":17,"capssnake":1723,"snakepascal":0,"snake":5,"commits":265,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24045,"pascal":957,"capssnake":6,"snakepascal":3,"snake":4652,"commits":1597,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3033,"staticfirst":145,"abstractlate":25,"abstractfirst":197,"commits":428,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":924216,"char120":71474,"char150":27500,"commits":5347,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-14","convention":{"lang":"php","indent":{"tab":404805,"space":892329,"commits":5695,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2627,"sameline":1207,"commits":657,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":33859,"newline":17283,"commits":2666,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4273,"newline":2086,"commits":652,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":24020,"nospace":3287,"commits":1906,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6454,"nospace":38073,"commits":2693,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":33,"nospace":493,"commits":160,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":595,"nospace":3250,"commits":497,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":251,"pascal":2323,"capssnake":1,"snakepascal":242,"snake":157,"uppersnake":5,"commits":593,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":31,"capssnake":2234,"snakepascal":0,"snake":22,"commits":256,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23668,"pascal":262,"capssnake":65,"snakepascal":5,"snake":5688,"commits":1844,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3565,"staticfirst":306,"abstractlate":15,"abstractfirst":243,"commits":390,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1015046,"char120":74552,"char150":26216,"commits":6094,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-13","convention":{"lang":"php","indent":{"tab":123861,"space":521676,"commits":2304,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1598,"sameline":1109,"commits":265,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":23494,"newline":7042,"commits":1178,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1865,"newline":564,"commits":270,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":17205,"nospace":2018,"commits":897,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2296,"nospace":24997,"commits":1178,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":73,"nospace":402,"commits":74,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":432,"nospace":1292,"commits":198,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":54,"pascal":1836,"capssnake":2,"snakepascal":57,"snake":31,"uppersnake":4,"commits":221,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":10,"capssnake":1094,"snakepascal":0,"snake":3,"commits":138,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14286,"pascal":92,"capssnake":2,"snakepascal":5,"snake":2389,"commits":724,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1279,"staticfirst":148,"abstractlate":14,"abstractfirst":136,"commits":192,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":591265,"char120":38949,"char150":11531,"commits":2419,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-12","convention":{"lang":"php","indent":{"tab":235837,"space":605083,"commits":4063,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1196,"sameline":746,"commits":445,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":30694,"newline":15300,"commits":1962,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2649,"newline":1890,"commits":399,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23439,"nospace":1286,"commits":1511,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6562,"nospace":29170,"commits":1976,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":30,"nospace":289,"commits":52,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":506,"nospace":2566,"commits":343,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":13,"pascal":1026,"capssnake":3,"snakepascal":117,"snake":75,"uppersnake":12,"commits":380,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":22,"pascal":0,"capssnake":1928,"snakepascal":0,"snake":37,"commits":182,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10193,"pascal":142,"capssnake":106,"snakepascal":23,"snake":3422,"commits":1221,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2681,"staticfirst":57,"abstractlate":17,"abstractfirst":71,"commits":357,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":638536,"char120":65261,"char150":21931,"commits":4285,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-11","convention":{"lang":"php","indent":{"tab":145547,"space":328683,"commits":2114,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":748,"sameline":386,"commits":250,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":14183,"newline":6468,"commits":986,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1084,"newline":1290,"commits":202,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":10295,"nospace":1024,"commits":732,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1675,"nospace":15795,"commits":1007,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":9,"nospace":147,"commits":38,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":190,"nospace":1474,"commits":174,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":17,"pascal":559,"capssnake":2,"snakepascal":168,"snake":66,"uppersnake":0,"commits":194,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":0,"capssnake":746,"snakepascal":4,"snake":0,"commits":100,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6044,"pascal":89,"capssnake":0,"snakepascal":1,"snake":2425,"commits":650,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1049,"staticfirst":61,"abstractlate":12,"abstractfirst":76,"commits":171,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":396719,"char120":35405,"char150":10806,"commits":2242,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-10","convention":{"lang":"php","indent":{"tab":157921,"space":380297,"commits":2726,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":989,"sameline":945,"commits":283,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18461,"newline":8259,"commits":1322,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1440,"newline":391,"commits":254,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":14273,"nospace":905,"commits":965,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4433,"nospace":19970,"commits":1333,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":68,"nospace":157,"commits":61,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":281,"nospace":849,"commits":210,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":171,"pascal":900,"capssnake":0,"snakepascal":71,"snake":108,"uppersnake":1,"commits":241,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":29,"capssnake":690,"snakepascal":0,"snake":10,"commits":153,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5947,"pascal":210,"capssnake":2,"snakepascal":2,"snake":2636,"commits":750,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":945,"staticfirst":48,"abstractlate":6,"abstractfirst":96,"commits":172,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":421233,"char120":38342,"char150":12182,"commits":2907,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-09","convention":{"lang":"php","indent":{"tab":248503,"space":565999,"commits":3777,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":698,"sameline":915,"commits":348,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":29994,"newline":12755,"commits":1911,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2624,"newline":1418,"commits":392,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23212,"nospace":2519,"commits":1458,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3152,"nospace":33460,"commits":1913,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":72,"nospace":482,"commits":92,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":278,"nospace":2530,"commits":322,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":9,"pascal":1144,"capssnake":4,"snakepascal":68,"snake":155,"uppersnake":0,"commits":292,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":0,"capssnake":1260,"snakepascal":0,"snake":10,"commits":208,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10107,"pascal":271,"capssnake":36,"snakepascal":16,"snake":3206,"commits":1114,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1919,"staticfirst":77,"abstractlate":24,"abstractfirst":88,"commits":261,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":638455,"char120":57389,"char150":21695,"commits":3954,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-08","convention":{"lang":"php","indent":{"tab":458178,"space":974856,"commits":4961,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2845,"sameline":2143,"commits":646,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":37757,"newline":27634,"commits":2367,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5489,"newline":3152,"commits":562,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":24729,"nospace":2660,"commits":1789,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12453,"nospace":45242,"commits":2396,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":69,"nospace":568,"commits":149,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1282,"nospace":4396,"commits":440,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":75,"pascal":2850,"capssnake":6,"snakepascal":296,"snake":196,"uppersnake":5,"commits":577,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":17,"capssnake":1828,"snakepascal":0,"snake":19,"commits":253,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22975,"pascal":324,"capssnake":0,"snakepascal":6,"snake":7236,"commits":1657,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2442,"staticfirst":174,"abstractlate":116,"abstractfirst":187,"commits":367,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1100210,"char120":83891,"char150":25744,"commits":5288,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-07","convention":{"lang":"php","indent":{"tab":274554,"space":748565,"commits":5422,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2149,"sameline":2022,"commits":629,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":31596,"newline":19147,"commits":2637,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2988,"newline":2501,"commits":613,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":22388,"nospace":2540,"commits":1980,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3304,"nospace":39968,"commits":2672,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":132,"nospace":566,"commits":180,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":355,"nospace":3612,"commits":469,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":105,"pascal":2314,"capssnake":8,"snakepascal":505,"snake":55,"uppersnake":2,"commits":559,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":3,"capssnake":1873,"snakepascal":1,"snake":11,"commits":290,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18126,"pascal":333,"capssnake":11,"snakepascal":12,"snake":10304,"commits":1814,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2169,"staticfirst":133,"abstractlate":98,"abstractfirst":202,"commits":419,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":833927,"char120":68495,"char150":25825,"commits":5760,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-04","convention":{"lang":"php","indent":{"tab":42976,"space":163712,"commits":701,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":306,"sameline":319,"commits":88,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":9997,"newline":4004,"commits":380,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1020,"newline":212,"commits":70,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":9085,"nospace":170,"commits":308,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2690,"nospace":10431,"commits":382,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":101,"nospace":58,"commits":15,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":164,"nospace":584,"commits":61,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":0,"pascal":485,"capssnake":1,"snakepascal":58,"snake":18,"uppersnake":0,"commits":78,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":1026,"snakepascal":0,"snake":1,"commits":55,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":2252,"pascal":123,"capssnake":0,"snakepascal":4,"snake":881,"commits":232,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":543,"staticfirst":7,"abstractlate":0,"abstractfirst":7,"commits":60,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":173400,"char120":15675,"char150":8932,"commits":746,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-03","convention":{"lang":"php","indent":{"tab":113926,"space":288566,"commits":1899,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":542,"sameline":501,"commits":214,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":12778,"newline":6444,"commits":880,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1852,"newline":725,"commits":240,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":8916,"nospace":1304,"commits":712,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2509,"nospace":13801,"commits":894,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":6,"nospace":130,"commits":50,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":165,"nospace":1409,"commits":190,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":6,"pascal":796,"capssnake":0,"snakepascal":74,"snake":98,"uppersnake":1,"commits":176,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":64,"pascal":3,"capssnake":1031,"snakepascal":0,"snake":0,"commits":115,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5810,"pascal":132,"capssnake":0,"snakepascal":0,"snake":2287,"commits":583,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":644,"staticfirst":61,"abstractlate":5,"abstractfirst":38,"commits":127,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":337308,"char120":26488,"char150":10397,"commits":2007,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-02","convention":{"lang":"php","indent":{"tab":142113,"space":421291,"commits":2696,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":779,"sameline":761,"commits":279,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":22917,"newline":6671,"commits":1346,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2013,"newline":865,"commits":315,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":17584,"nospace":707,"commits":997,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3903,"nospace":21388,"commits":1341,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":36,"nospace":198,"commits":51,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":232,"nospace":1516,"commits":258,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":49,"pascal":1083,"capssnake":0,"snakepascal":43,"snake":43,"uppersnake":0,"commits":244,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":7,"capssnake":1505,"snakepascal":0,"snake":10,"commits":167,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9428,"pascal":41,"capssnake":34,"snakepascal":8,"snake":1889,"commits":809,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2219,"staticfirst":68,"abstractlate":8,"abstractfirst":143,"commits":228,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":478291,"char120":40921,"char150":18773,"commits":2841,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-06-01","convention":{"lang":"php","indent":{"tab":440281,"space":1021298,"commits":5773,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1943,"sameline":2477,"commits":691,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46065,"newline":21608,"commits":2910,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4467,"newline":5191,"commits":680,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33765,"nospace":3442,"commits":2197,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10417,"nospace":47799,"commits":2955,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":46,"nospace":643,"commits":168,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":824,"nospace":5087,"commits":547,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":74,"pascal":3266,"capssnake":18,"snakepascal":140,"snake":149,"uppersnake":13,"commits":648,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":7,"pascal":36,"capssnake":21621,"snakepascal":0,"snake":11,"commits":359,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20887,"pascal":304,"capssnake":0,"snakepascal":9,"snake":7240,"commits":1818,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2856,"staticfirst":147,"abstractlate":32,"abstractfirst":114,"commits":436,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1169441,"char120":85828,"char150":28628,"commits":6130,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-31","convention":{"lang":"php","indent":{"tab":553021,"space":1142794,"commits":5754,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2221,"sameline":2123,"commits":646,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48414,"newline":29952,"commits":2815,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5129,"newline":2663,"commits":631,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33278,"nospace":3507,"commits":2027,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9811,"nospace":58159,"commits":2866,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":35,"nospace":808,"commits":145,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":499,"nospace":4678,"commits":517,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":41,"pascal":2896,"capssnake":12,"snakepascal":341,"snake":216,"uppersnake":1,"commits":603,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":30,"pascal":14,"capssnake":2905,"snakepascal":0,"snake":34,"commits":276,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23965,"pascal":546,"capssnake":108,"snakepascal":18,"snake":5536,"commits":1726,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3762,"staticfirst":340,"abstractlate":161,"abstractfirst":227,"commits":423,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1266342,"char120":101172,"char150":32642,"commits":6083,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-30","convention":{"lang":"php","indent":{"tab":231233,"space":553137,"commits":3901,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1155,"sameline":965,"commits":456,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":26290,"newline":12037,"commits":1969,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4483,"newline":876,"commits":402,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":18708,"nospace":1798,"commits":1449,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5312,"nospace":28734,"commits":1977,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":216,"nospace":579,"commits":92,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":646,"nospace":2140,"commits":330,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":61,"pascal":1438,"capssnake":2,"snakepascal":153,"snake":50,"uppersnake":1,"commits":383,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":3,"capssnake":968,"snakepascal":1,"snake":11,"commits":182,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12470,"pascal":248,"capssnake":2,"snakepascal":10,"snake":4772,"commits":1292,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1728,"staticfirst":40,"abstractlate":6,"abstractfirst":142,"commits":330,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":620261,"char120":52724,"char150":20502,"commits":4125,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-29","convention":{"lang":"php","indent":{"tab":264967,"space":720706,"commits":4820,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2065,"sameline":830,"commits":502,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":40624,"newline":10208,"commits":2373,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2221,"newline":2331,"commits":525,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27688,"nospace":4221,"commits":1729,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4342,"nospace":39676,"commits":2386,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":21,"nospace":755,"commits":143,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":285,"nospace":2736,"commits":413,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":51,"pascal":1726,"capssnake":1,"snakepascal":195,"snake":110,"uppersnake":1,"commits":476,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":28,"pascal":15,"capssnake":2115,"snakepascal":0,"snake":9,"commits":262,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16122,"pascal":453,"capssnake":34,"snakepascal":13,"snake":2918,"commits":1515,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2152,"staticfirst":119,"abstractlate":25,"abstractfirst":123,"commits":340,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":803956,"char120":69364,"char150":19992,"commits":5150,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-28","convention":{"lang":"php","indent":{"tab":230585,"space":602237,"commits":3307,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1165,"sameline":830,"commits":370,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":32335,"newline":8443,"commits":1653,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2435,"newline":1349,"commits":405,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":22449,"nospace":4531,"commits":1303,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6173,"nospace":29366,"commits":1693,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":53,"nospace":486,"commits":99,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":309,"nospace":2128,"commits":327,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":36,"pascal":1486,"capssnake":4,"snakepascal":292,"snake":165,"uppersnake":2,"commits":342,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":16,"pascal":2,"capssnake":1753,"snakepascal":0,"snake":19,"commits":217,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14727,"pascal":492,"capssnake":32,"snakepascal":10,"snake":2970,"commits":1007,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2307,"staticfirst":143,"abstractlate":21,"abstractfirst":104,"commits":299,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":682661,"char120":58967,"char150":20618,"commits":3535,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-27","convention":{"lang":"php","indent":{"tab":186057,"space":494927,"commits":2799,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1030,"sameline":1067,"commits":295,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28800,"newline":11595,"commits":1442,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2558,"newline":1275,"commits":382,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20889,"nospace":1533,"commits":1106,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8642,"nospace":26200,"commits":1443,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":119,"nospace":271,"commits":68,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":427,"nospace":2134,"commits":303,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":35,"pascal":1021,"capssnake":1,"snakepascal":162,"snake":67,"uppersnake":2,"commits":281,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":3,"capssnake":1364,"snakepascal":1,"snake":24,"commits":177,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":11283,"pascal":134,"capssnake":0,"snakepascal":15,"snake":1780,"commits":884,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1863,"staticfirst":405,"abstractlate":63,"abstractfirst":86,"commits":288,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":571270,"char120":42133,"char150":15541,"commits":2964,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-26","convention":{"lang":"php","indent":{"tab":214023,"space":561222,"commits":4378,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1090,"sameline":843,"commits":495,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":27706,"newline":14885,"commits":2124,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2799,"newline":1352,"commits":484,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":21040,"nospace":2112,"commits":1613,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6504,"nospace":26756,"commits":2147,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":43,"nospace":497,"commits":106,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":794,"nospace":2032,"commits":392,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":44,"pascal":1254,"capssnake":2,"snakepascal":68,"snake":239,"uppersnake":9,"commits":438,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":11,"capssnake":1581,"snakepascal":0,"snake":15,"commits":274,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10619,"pascal":239,"capssnake":9,"snakepascal":7,"snake":4066,"commits":1315,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1303,"staticfirst":136,"abstractlate":56,"abstractfirst":233,"commits":326,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":620012,"char120":47842,"char150":18953,"commits":4665,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-25","convention":{"lang":"php","indent":{"tab":351037,"space":893779,"commits":5697,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1741,"sameline":1605,"commits":668,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45504,"newline":25138,"commits":2779,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5660,"newline":3284,"commits":649,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31608,"nospace":4223,"commits":2049,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8543,"nospace":48877,"commits":2830,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":1180,"nospace":1114,"commits":190,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":789,"nospace":5323,"commits":539,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":55,"pascal":1839,"capssnake":4,"snakepascal":290,"snake":147,"uppersnake":8,"commits":593,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":35,"capssnake":2004,"snakepascal":0,"snake":14,"commits":291,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16880,"pascal":449,"capssnake":16,"snakepascal":98,"snake":7034,"commits":1852,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2609,"staticfirst":340,"abstractlate":33,"abstractfirst":276,"commits":438,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":991082,"char120":78651,"char150":32160,"commits":6013,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-24","convention":{"lang":"php","indent":{"tab":361097,"space":934348,"commits":5663,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2068,"sameline":1463,"commits":612,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47090,"newline":18651,"commits":2753,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3966,"newline":2003,"commits":636,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34707,"nospace":3638,"commits":2056,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6667,"nospace":49374,"commits":2825,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":140,"nospace":675,"commits":123,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":733,"nospace":2833,"commits":499,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":37,"pascal":1987,"capssnake":3,"snakepascal":593,"snake":71,"uppersnake":4,"commits":562,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":8,"capssnake":1945,"snakepascal":0,"snake":14,"commits":283,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19634,"pascal":530,"capssnake":37,"snakepascal":4,"snake":4929,"commits":1788,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2620,"staticfirst":122,"abstractlate":21,"abstractfirst":174,"commits":421,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1036792,"char120":84036,"char150":31386,"commits":6003,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-23","convention":{"lang":"php","indent":{"tab":275998,"space":703162,"commits":3488,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2043,"sameline":921,"commits":379,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":36338,"newline":17074,"commits":1608,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2117,"newline":1250,"commits":381,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":29789,"nospace":1189,"commits":1259,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1914,"nospace":46494,"commits":1634,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":237,"nospace":285,"commits":79,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":103,"nospace":2405,"commits":289,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":121,"pascal":1069,"capssnake":5,"snakepascal":255,"snake":106,"uppersnake":2,"commits":337,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":841,"snakepascal":0,"snake":51,"commits":155,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13007,"pascal":453,"capssnake":0,"snakepascal":4,"snake":2463,"commits":1049,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1380,"staticfirst":49,"abstractlate":4,"abstractfirst":84,"commits":243,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":751762,"char120":63612,"char150":23111,"commits":3688,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-22","convention":{"lang":"php","indent":{"tab":264607,"space":587622,"commits":3470,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1902,"sameline":1268,"commits":415,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28263,"newline":8367,"commits":1710,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2358,"newline":1317,"commits":304,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19955,"nospace":2228,"commits":1262,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4273,"nospace":27264,"commits":1724,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":8,"nospace":477,"commits":64,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":636,"nospace":1698,"commits":243,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":43,"pascal":1627,"capssnake":0,"snakepascal":280,"snake":15,"uppersnake":5,"commits":320,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":3,"capssnake":1406,"snakepascal":0,"snake":1,"commits":222,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24740,"pascal":148,"capssnake":2,"snakepascal":8,"snake":1463,"commits":1026,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2167,"staticfirst":104,"abstractlate":33,"abstractfirst":153,"commits":322,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":655933,"char120":48852,"char150":16674,"commits":3674,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-21","convention":{"lang":"php","indent":{"tab":146591,"space":334542,"commits":2531,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":440,"sameline":469,"commits":264,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18197,"newline":7544,"commits":1304,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1904,"newline":941,"commits":274,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11733,"nospace":2257,"commits":990,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3959,"nospace":17800,"commits":1311,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":19,"nospace":559,"commits":76,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":260,"nospace":1509,"commits":211,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":60,"pascal":642,"capssnake":6,"snakepascal":72,"snake":30,"uppersnake":13,"commits":253,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":7,"capssnake":717,"snakepascal":0,"snake":0,"commits":124,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5250,"pascal":285,"capssnake":0,"snakepascal":9,"snake":2157,"commits":803,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1001,"staticfirst":42,"abstractlate":22,"abstractfirst":39,"commits":216,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":377651,"char120":33158,"char150":15224,"commits":2675,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-20","convention":{"lang":"php","indent":{"tab":161016,"space":350494,"commits":1762,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":539,"sameline":593,"commits":182,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18052,"newline":11597,"commits":887,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1047,"newline":3865,"commits":168,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13922,"nospace":533,"commits":723,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2041,"nospace":24009,"commits":895,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":65,"nospace":95,"commits":39,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":411,"nospace":2978,"commits":132,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":69,"pascal":415,"capssnake":6,"snakepascal":24,"snake":15,"uppersnake":2,"commits":154,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":446,"snakepascal":0,"snake":0,"commits":85,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5650,"pascal":1066,"capssnake":2,"snakepascal":3,"snake":2319,"commits":577,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1215,"staticfirst":13,"abstractlate":0,"abstractfirst":58,"commits":202,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":384836,"char120":27651,"char150":9180,"commits":1829,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-19","convention":{"lang":"php","indent":{"tab":254489,"space":782891,"commits":3409,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2001,"sameline":928,"commits":359,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42959,"newline":13465,"commits":1700,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3141,"newline":1752,"commits":392,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33429,"nospace":2375,"commits":1287,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3663,"nospace":46836,"commits":1719,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":166,"nospace":704,"commits":87,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":448,"nospace":3062,"commits":308,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":106,"pascal":1333,"capssnake":2,"snakepascal":347,"snake":156,"uppersnake":15,"commits":317,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":7,"pascal":13,"capssnake":2510,"snakepascal":0,"snake":9,"commits":194,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20551,"pascal":545,"capssnake":32,"snakepascal":10,"snake":4245,"commits":1026,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2658,"staticfirst":92,"abstractlate":113,"abstractfirst":93,"commits":291,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":855549,"char120":73662,"char150":31894,"commits":3618,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-18","convention":{"lang":"php","indent":{"tab":455172,"space":1249993,"commits":6167,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1700,"sameline":2190,"commits":723,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57801,"newline":29517,"commits":3021,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":10080,"newline":6708,"commits":760,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":40821,"nospace":3440,"commits":2181,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12944,"nospace":62909,"commits":3020,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":54,"nospace":1257,"commits":197,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":546,"nospace":10954,"commits":630,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":100,"pascal":2061,"capssnake":15,"snakepascal":556,"snake":141,"uppersnake":3,"commits":657,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":43,"pascal":19,"capssnake":3082,"snakepascal":4,"snake":33,"commits":346,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18267,"pascal":1128,"capssnake":34,"snakepascal":12,"snake":12852,"commits":2097,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2697,"staticfirst":389,"abstractlate":63,"abstractfirst":324,"commits":520,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1417179,"char120":97190,"char150":36272,"commits":6494,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-17","convention":{"lang":"php","indent":{"tab":405751,"space":1240335,"commits":6038,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2982,"sameline":1993,"commits":717,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":58855,"newline":28421,"commits":2963,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6362,"newline":3214,"commits":755,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39556,"nospace":5225,"commits":2208,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12162,"nospace":59759,"commits":3007,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":805,"nospace":1514,"commits":205,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1174,"nospace":5755,"commits":629,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":148,"pascal":3191,"capssnake":1,"snakepascal":462,"snake":164,"uppersnake":30,"commits":683,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":31,"pascal":97,"capssnake":3372,"snakepascal":0,"snake":6,"commits":389,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":29490,"pascal":561,"capssnake":3,"snakepascal":16,"snake":8789,"commits":2018,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3416,"staticfirst":131,"abstractlate":30,"abstractfirst":372,"commits":481,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1397422,"char120":107120,"char150":40409,"commits":6445,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-16","convention":{"lang":"php","indent":{"tab":287598,"space":561337,"commits":3303,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1316,"sameline":740,"commits":323,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28867,"newline":12981,"commits":1612,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3684,"newline":2522,"commits":364,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":21361,"nospace":1315,"commits":1272,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4167,"nospace":31437,"commits":1632,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":16,"nospace":265,"commits":73,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":599,"nospace":3287,"commits":282,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":100,"pascal":1205,"capssnake":6,"snakepascal":71,"snake":320,"uppersnake":9,"commits":291,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":12,"capssnake":1066,"snakepascal":0,"snake":3,"commits":169,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":8623,"pascal":584,"capssnake":0,"snakepascal":7,"snake":3655,"commits":984,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2178,"staticfirst":158,"abstractlate":4,"abstractfirst":95,"commits":254,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":615466,"char120":55242,"char150":23787,"commits":3506,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-15","convention":{"lang":"php","indent":{"tab":115606,"space":343307,"commits":2441,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":883,"sameline":992,"commits":241,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":17418,"newline":6117,"commits":1162,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":850,"newline":1563,"commits":321,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13860,"nospace":810,"commits":872,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1605,"nospace":19122,"commits":1178,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":50,"nospace":114,"commits":53,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":82,"nospace":1597,"commits":257,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":62,"pascal":1027,"capssnake":1,"snakepascal":297,"snake":20,"uppersnake":1,"commits":213,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":26,"pascal":1,"capssnake":759,"snakepascal":15,"snake":10,"commits":128,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10621,"pascal":137,"capssnake":32,"snakepascal":3,"snake":1620,"commits":732,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1249,"staticfirst":82,"abstractlate":13,"abstractfirst":57,"commits":167,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":376135,"char120":29992,"char150":9981,"commits":2689,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-14","convention":{"lang":"php","indent":{"tab":158070,"space":414001,"commits":2869,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":832,"sameline":920,"commits":270,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":22197,"newline":11077,"commits":1469,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2733,"newline":2590,"commits":374,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":14905,"nospace":1714,"commits":1185,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2698,"nospace":22844,"commits":1500,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":19,"nospace":425,"commits":61,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":139,"nospace":3534,"commits":310,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":8,"pascal":1150,"capssnake":8,"snakepascal":192,"snake":110,"uppersnake":5,"commits":267,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":33,"capssnake":920,"snakepascal":0,"snake":10,"commits":133,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10240,"pascal":127,"capssnake":0,"snakepascal":15,"snake":2262,"commits":880,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1217,"staticfirst":49,"abstractlate":15,"abstractfirst":158,"commits":216,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":448791,"char120":31578,"char150":11614,"commits":3027,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-13","convention":{"lang":"php","indent":{"tab":196615,"space":859229,"commits":4137,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1316,"sameline":1631,"commits":512,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48360,"newline":17771,"commits":2073,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3981,"newline":1367,"commits":487,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":42128,"nospace":1254,"commits":1600,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7426,"nospace":54003,"commits":2121,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":537,"nospace":401,"commits":134,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":459,"nospace":3547,"commits":404,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":35,"pascal":1367,"capssnake":8,"snakepascal":365,"snake":73,"uppersnake":2,"commits":452,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":2,"capssnake":1523,"snakepascal":0,"snake":72,"commits":169,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18015,"pascal":1272,"capssnake":1,"snakepascal":12,"snake":3381,"commits":1272,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2085,"staticfirst":146,"abstractlate":45,"abstractfirst":186,"commits":329,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":935757,"char120":68827,"char150":24293,"commits":4352,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-12","convention":{"lang":"php","indent":{"tab":167825,"space":362056,"commits":1955,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":649,"sameline":605,"commits":217,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":19704,"newline":11149,"commits":964,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3554,"newline":808,"commits":246,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":14064,"nospace":1001,"commits":759,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9196,"nospace":17521,"commits":980,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":109,"nospace":256,"commits":60,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":632,"nospace":1897,"commits":212,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":39,"pascal":664,"capssnake":0,"snakepascal":83,"snake":75,"uppersnake":0,"commits":189,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":0,"capssnake":790,"snakepascal":0,"snake":9,"commits":100,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6006,"pascal":168,"capssnake":33,"snakepascal":0,"snake":3267,"commits":587,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1121,"staticfirst":39,"abstractlate":15,"abstractfirst":116,"commits":139,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":406164,"char120":35310,"char150":12426,"commits":2080,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-11","convention":{"lang":"php","indent":{"tab":530718,"space":1099414,"commits":5716,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2276,"sameline":1986,"commits":716,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":60447,"newline":35176,"commits":2742,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":10494,"newline":1867,"commits":627,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39871,"nospace":7689,"commits":2045,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":24263,"nospace":57423,"commits":2766,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":90,"nospace":1509,"commits":170,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1617,"nospace":5599,"commits":525,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":63,"pascal":2004,"capssnake":2,"snakepascal":490,"snake":457,"uppersnake":32,"commits":655,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":125,"pascal":293,"capssnake":4571,"snakepascal":0,"snake":95,"commits":347,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18125,"pascal":704,"capssnake":94,"snakepascal":39,"snake":11213,"commits":1808,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4508,"staticfirst":462,"abstractlate":41,"abstractfirst":376,"commits":486,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1224847,"char120":99684,"char150":42279,"commits":6144,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-10","convention":{"lang":"php","indent":{"tab":371073,"space":839834,"commits":5333,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2027,"sameline":1594,"commits":665,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":39242,"newline":20746,"commits":2546,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3986,"newline":1662,"commits":635,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27319,"nospace":2367,"commits":1854,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5336,"nospace":47472,"commits":2584,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":73,"nospace":549,"commits":130,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":607,"nospace":3277,"commits":527,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":97,"pascal":1556,"capssnake":10,"snakepascal":161,"snake":61,"uppersnake":12,"commits":586,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":17,"capssnake":2475,"snakepascal":8,"snake":10,"commits":305,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19594,"pascal":1442,"capssnake":2,"snakepascal":16,"snake":4290,"commits":1763,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2943,"staticfirst":90,"abstractlate":108,"abstractfirst":249,"commits":444,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":923522,"char120":75294,"char150":25672,"commits":5751,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-09","convention":{"lang":"php","indent":{"tab":521844,"space":1012000,"commits":3809,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1888,"sameline":2135,"commits":433,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":51809,"newline":26885,"commits":1899,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7928,"newline":1277,"commits":511,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36237,"nospace":1961,"commits":1450,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16845,"nospace":53124,"commits":1936,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":141,"nospace":747,"commits":121,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1259,"nospace":4502,"commits":405,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":91,"pascal":2498,"capssnake":1,"snakepascal":207,"snake":119,"uppersnake":5,"commits":370,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":34,"pascal":43,"capssnake":3770,"snakepascal":8,"snake":29,"commits":219,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25491,"pascal":564,"capssnake":108,"snakepascal":45,"snake":6999,"commits":1179,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3687,"staticfirst":163,"abstractlate":102,"abstractfirst":328,"commits":293,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1159463,"char120":87142,"char150":38998,"commits":4031,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-08","convention":{"lang":"php","indent":{"tab":288504,"space":574727,"commits":3685,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1016,"sameline":842,"commits":387,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":25754,"newline":13340,"commits":1774,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3537,"newline":2753,"commits":379,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":18767,"nospace":1850,"commits":1300,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6551,"nospace":28620,"commits":1804,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":50,"nospace":701,"commits":86,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":660,"nospace":3250,"commits":316,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":15,"pascal":903,"capssnake":3,"snakepascal":75,"snake":227,"uppersnake":44,"commits":338,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":26,"pascal":4,"capssnake":1064,"snakepascal":0,"snake":72,"commits":167,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9111,"pascal":549,"capssnake":0,"snakepascal":6,"snake":5438,"commits":1023,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2374,"staticfirst":173,"abstractlate":9,"abstractfirst":77,"commits":296,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":636642,"char120":50777,"char150":18394,"commits":3954,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-07","convention":{"lang":"php","indent":{"tab":193730,"space":508682,"commits":3360,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":898,"sameline":1315,"commits":318,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28875,"newline":8326,"commits":1653,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3076,"newline":1268,"commits":337,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20091,"nospace":2012,"commits":1282,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5185,"nospace":25389,"commits":1679,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":27,"nospace":741,"commits":99,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":705,"nospace":2191,"commits":265,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":44,"pascal":1491,"capssnake":11,"snakepascal":69,"snake":121,"uppersnake":0,"commits":292,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":11,"pascal":10,"capssnake":1223,"snakepascal":0,"snake":2,"commits":140,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":7797,"pascal":172,"capssnake":0,"snakepascal":4,"snake":4423,"commits":982,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1612,"staticfirst":81,"abstractlate":13,"abstractfirst":125,"commits":231,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":559360,"char120":49327,"char150":18619,"commits":3554,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-06","convention":{"lang":"php","indent":{"tab":63311,"space":164420,"commits":1832,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":449,"sameline":213,"commits":172,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":8726,"newline":3164,"commits":877,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":904,"newline":594,"commits":176,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":6018,"nospace":894,"commits":701,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":968,"nospace":9625,"commits":920,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":110,"nospace":144,"commits":44,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":90,"nospace":918,"commits":140,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":11,"pascal":483,"capssnake":0,"snakepascal":40,"snake":29,"uppersnake":1,"commits":169,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":441,"snakepascal":0,"snake":0,"commits":83,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":2526,"pascal":213,"capssnake":0,"snakepascal":2,"snake":1663,"commits":503,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":626,"staticfirst":7,"abstractlate":2,"abstractfirst":28,"commits":106,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":175216,"char120":16818,"char150":8750,"commits":1962,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-05","convention":{"lang":"php","indent":{"tab":183867,"space":458179,"commits":3312,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":917,"sameline":870,"commits":389,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":23202,"newline":11198,"commits":1657,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2073,"newline":612,"commits":371,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":15633,"nospace":1606,"commits":1260,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4915,"nospace":23735,"commits":1691,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":23,"nospace":669,"commits":106,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":289,"nospace":1473,"commits":308,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":823,"capssnake":1,"snakepascal":97,"snake":84,"uppersnake":5,"commits":284,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":3,"capssnake":985,"snakepascal":0,"snake":11,"commits":158,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9495,"pascal":230,"capssnake":0,"snakepascal":7,"snake":3076,"commits":1032,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1652,"staticfirst":41,"abstractlate":62,"abstractfirst":131,"commits":257,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":489857,"char120":45592,"char150":17738,"commits":3504,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-04","convention":{"lang":"php","indent":{"tab":428320,"space":905001,"commits":5844,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1373,"sameline":1623,"commits":689,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45559,"newline":23195,"commits":2865,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7720,"newline":2396,"commits":669,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33544,"nospace":3351,"commits":2140,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":14697,"nospace":46032,"commits":2886,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":81,"nospace":840,"commits":109,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":2207,"nospace":4405,"commits":553,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":32,"pascal":1550,"capssnake":22,"snakepascal":125,"snake":335,"uppersnake":13,"commits":588,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":0,"capssnake":2065,"snakepascal":0,"snake":6,"commits":345,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14917,"pascal":430,"capssnake":2,"snakepascal":11,"snake":10127,"commits":1816,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2366,"staticfirst":141,"abstractlate":25,"abstractfirst":177,"commits":451,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1009264,"char120":81457,"char150":35265,"commits":6179,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-03","convention":{"lang":"php","indent":{"tab":352074,"space":903734,"commits":5514,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2158,"sameline":1118,"commits":670,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41507,"newline":22356,"commits":2679,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3943,"newline":3009,"commits":612,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27524,"nospace":3353,"commits":1884,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8329,"nospace":46682,"commits":2714,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":272,"nospace":501,"commits":134,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":825,"nospace":3986,"commits":508,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":66,"pascal":2466,"capssnake":4,"snakepascal":125,"snake":292,"uppersnake":2,"commits":644,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":11,"capssnake":2588,"snakepascal":5,"snake":12,"commits":305,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20015,"pascal":1019,"capssnake":3,"snakepascal":15,"snake":5719,"commits":1809,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2928,"staticfirst":300,"abstractlate":73,"abstractfirst":194,"commits":427,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1041484,"char120":77253,"char150":28349,"commits":5830,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-02","convention":{"lang":"php","indent":{"tab":218557,"space":523570,"commits":3471,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":986,"sameline":587,"commits":439,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":21011,"newline":13078,"commits":1697,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3739,"newline":746,"commits":354,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":15610,"nospace":1343,"commits":1208,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7467,"nospace":22174,"commits":1694,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":141,"nospace":267,"commits":106,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":772,"nospace":1585,"commits":286,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":34,"pascal":952,"capssnake":0,"snakepascal":43,"snake":205,"uppersnake":6,"commits":390,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":8,"capssnake":790,"snakepascal":16,"snake":8,"commits":145,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9732,"pascal":233,"capssnake":1,"snakepascal":14,"snake":6679,"commits":1123,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1956,"staticfirst":158,"abstractlate":86,"abstractfirst":254,"commits":293,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":585662,"char120":50197,"char150":19415,"commits":3661,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-05-01","convention":{"lang":"php","indent":{"tab":286108,"space":789975,"commits":4913,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2238,"sameline":1658,"commits":560,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":34103,"newline":17142,"commits":2348,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5469,"newline":1702,"commits":459,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":24461,"nospace":1329,"commits":1748,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9565,"nospace":34268,"commits":2388,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":107,"nospace":259,"commits":91,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1341,"nospace":3593,"commits":369,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":72,"pascal":2476,"capssnake":4,"snakepascal":299,"snake":248,"uppersnake":2,"commits":465,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":1,"capssnake":2719,"snakepascal":0,"snake":1,"commits":237,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12617,"pascal":665,"capssnake":1,"snakepascal":13,"snake":7546,"commits":1468,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2560,"staticfirst":136,"abstractlate":114,"abstractfirst":183,"commits":416,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":895698,"char120":75338,"char150":21593,"commits":5201,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-30","convention":{"lang":"php","indent":{"tab":224915,"space":554964,"commits":3502,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1148,"sameline":842,"commits":300,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":23194,"newline":10673,"commits":1703,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2655,"newline":2181,"commits":333,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":16628,"nospace":1313,"commits":1322,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7536,"nospace":22085,"commits":1706,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":23,"nospace":256,"commits":71,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1453,"nospace":1815,"commits":286,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":13,"pascal":1224,"capssnake":0,"snakepascal":94,"snake":236,"uppersnake":19,"commits":274,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":0,"capssnake":3703,"snakepascal":0,"snake":1,"commits":154,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":11550,"pascal":185,"capssnake":0,"snakepascal":3,"snake":3491,"commits":983,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1624,"staticfirst":86,"abstractlate":22,"abstractfirst":107,"commits":235,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":632497,"char120":49604,"char150":14027,"commits":3727,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-29","convention":{"lang":"php","indent":{"tab":169975,"space":470767,"commits":4641,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1214,"sameline":1323,"commits":494,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":20806,"newline":9268,"commits":2191,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2012,"newline":1132,"commits":382,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":14556,"nospace":1500,"commits":1719,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6317,"nospace":18699,"commits":2214,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":97,"nospace":314,"commits":67,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":683,"nospace":1287,"commits":297,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":9,"pascal":1120,"capssnake":2,"snakepascal":287,"snake":229,"uppersnake":0,"commits":448,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":0,"capssnake":822,"snakepascal":0,"snake":8,"commits":192,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":11952,"pascal":292,"capssnake":6,"snakepascal":0,"snake":3527,"commits":1392,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1534,"staticfirst":65,"abstractlate":18,"abstractfirst":111,"commits":358,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":522202,"char120":40532,"char150":15482,"commits":4899,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-28","convention":{"lang":"php","indent":{"tab":139831,"space":336028,"commits":3611,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":961,"sameline":560,"commits":341,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":17373,"newline":9121,"commits":1790,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1931,"newline":602,"commits":388,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":10720,"nospace":1906,"commits":1362,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2828,"nospace":19246,"commits":1801,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":17,"nospace":311,"commits":99,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":201,"nospace":1523,"commits":294,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":17,"pascal":995,"capssnake":4,"snakepascal":50,"snake":211,"uppersnake":8,"commits":300,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":8,"capssnake":979,"snakepascal":3,"snake":0,"commits":187,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5639,"pascal":222,"capssnake":2,"snakepascal":2,"snake":1829,"commits":1036,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":951,"staticfirst":413,"abstractlate":8,"abstractfirst":24,"commits":245,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":362952,"char120":32822,"char150":14357,"commits":3870,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-27","convention":{"lang":"php","indent":{"tab":408051,"space":1075702,"commits":6030,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3106,"sameline":1950,"commits":632,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49915,"newline":23652,"commits":3098,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4583,"newline":3877,"commits":735,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37248,"nospace":2320,"commits":2329,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5820,"nospace":58722,"commits":3115,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":77,"nospace":579,"commits":168,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":627,"nospace":4776,"commits":597,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":234,"pascal":2569,"capssnake":9,"snakepascal":219,"snake":234,"uppersnake":3,"commits":555,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":21,"pascal":77,"capssnake":2935,"snakepascal":0,"snake":64,"commits":349,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22066,"pascal":3120,"capssnake":68,"snakepascal":28,"snake":6118,"commits":1877,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3686,"staticfirst":131,"abstractlate":31,"abstractfirst":224,"commits":475,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1226992,"char120":97391,"char150":34287,"commits":6454,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-26","convention":{"lang":"php","indent":{"tab":322509,"space":866333,"commits":5383,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2049,"sameline":1443,"commits":687,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47364,"newline":17875,"commits":2695,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4104,"newline":1877,"commits":611,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33351,"nospace":4416,"commits":1923,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8007,"nospace":45364,"commits":2690,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":72,"nospace":881,"commits":135,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":831,"nospace":3191,"commits":506,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":25,"pascal":2083,"capssnake":5,"snakepascal":403,"snake":97,"uppersnake":1,"commits":612,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":24,"pascal":0,"capssnake":2298,"snakepascal":6,"snake":15,"commits":313,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18876,"pascal":352,"capssnake":3,"snakepascal":1,"snake":4733,"commits":1730,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2931,"staticfirst":387,"abstractlate":27,"abstractfirst":191,"commits":420,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":976220,"char120":69696,"char150":29074,"commits":5796,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-25","convention":{"lang":"php","indent":{"tab":306391,"space":764316,"commits":3761,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2189,"sameline":1103,"commits":450,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41447,"newline":14941,"commits":1877,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6397,"newline":1356,"commits":467,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27045,"nospace":2313,"commits":1423,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9736,"nospace":37912,"commits":1888,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":31,"nospace":595,"commits":104,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1621,"nospace":3808,"commits":389,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":32,"pascal":1669,"capssnake":5,"snakepascal":336,"snake":114,"uppersnake":2,"commits":390,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":14,"capssnake":2058,"snakepascal":0,"snake":5,"commits":217,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13131,"pascal":282,"capssnake":0,"snakepascal":3,"snake":6018,"commits":1249,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1591,"staticfirst":105,"abstractlate":25,"abstractfirst":114,"commits":259,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":856650,"char120":69213,"char150":27162,"commits":3968,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-24","convention":{"lang":"php","indent":{"tab":226324,"space":539413,"commits":3713,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":943,"sameline":1236,"commits":349,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":26823,"newline":17715,"commits":1740,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4323,"newline":2330,"commits":360,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":16192,"nospace":3451,"commits":1366,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9095,"nospace":27029,"commits":1804,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":91,"nospace":945,"commits":77,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":823,"nospace":3084,"commits":292,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":104,"pascal":955,"capssnake":5,"snakepascal":196,"snake":107,"uppersnake":4,"commits":297,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":22,"capssnake":943,"snakepascal":0,"snake":13,"commits":162,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10871,"pascal":383,"capssnake":5,"snakepascal":14,"snake":5258,"commits":1030,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1363,"staticfirst":83,"abstractlate":27,"abstractfirst":72,"commits":265,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":610161,"char120":47236,"char150":19546,"commits":4002,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-23","convention":{"lang":"php","indent":{"tab":187037,"space":459355,"commits":2972,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":995,"sameline":821,"commits":323,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":25186,"newline":9639,"commits":1440,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2328,"newline":1573,"commits":316,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":18371,"nospace":1268,"commits":1133,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3407,"nospace":25262,"commits":1475,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":12,"nospace":129,"commits":63,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":243,"nospace":2291,"commits":269,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":1075,"capssnake":1,"snakepascal":50,"snake":184,"uppersnake":1,"commits":294,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":9,"capssnake":1014,"snakepascal":0,"snake":9,"commits":129,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10109,"pascal":554,"capssnake":36,"snakepascal":3,"snake":2442,"commits":910,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1794,"staticfirst":36,"abstractlate":7,"abstractfirst":122,"commits":267,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":508591,"char120":39692,"char150":12539,"commits":3178,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-22","convention":{"lang":"php","indent":{"tab":224751,"space":501563,"commits":4242,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":963,"sameline":1581,"commits":367,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":25415,"newline":11601,"commits":2292,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3306,"newline":1868,"commits":806,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":18840,"nospace":1774,"commits":1819,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5559,"nospace":26353,"commits":2303,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":26,"nospace":468,"commits":94,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":720,"nospace":2824,"commits":724,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":40,"pascal":1216,"capssnake":4,"snakepascal":344,"snake":237,"uppersnake":3,"commits":307,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":1200,"snakepascal":0,"snake":9,"commits":170,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":9331,"pascal":90,"capssnake":3,"snakepascal":0,"snake":4062,"commits":1523,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1663,"staticfirst":177,"abstractlate":41,"abstractfirst":161,"commits":311,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":552381,"char120":47467,"char150":18671,"commits":4489,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-21","convention":{"lang":"php","indent":{"tab":353623,"space":769192,"commits":4481,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1293,"sameline":1612,"commits":518,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55196,"newline":10875,"commits":2212,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2703,"newline":2301,"commits":468,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":41521,"nospace":2356,"commits":1713,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4453,"nospace":51225,"commits":2260,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":21,"nospace":287,"commits":107,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":441,"nospace":3172,"commits":391,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":47,"pascal":1771,"capssnake":1,"snakepascal":263,"snake":93,"uppersnake":4,"commits":463,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":72,"pascal":35,"capssnake":3236,"snakepascal":0,"snake":41,"commits":247,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":15153,"pascal":504,"capssnake":130,"snakepascal":3,"snake":3526,"commits":1327,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3585,"staticfirst":108,"abstractlate":105,"abstractfirst":175,"commits":369,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":832068,"char120":70744,"char150":32866,"commits":4771,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-20","convention":{"lang":"php","indent":{"tab":275747,"space":859421,"commits":5725,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2412,"sameline":1205,"commits":685,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45789,"newline":14273,"commits":2848,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3444,"newline":4353,"commits":643,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31046,"nospace":5109,"commits":2252,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4472,"nospace":46606,"commits":2925,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":34,"nospace":1167,"commits":172,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":362,"nospace":4905,"commits":523,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":86,"pascal":2103,"capssnake":10,"snakepascal":301,"snake":54,"uppersnake":10,"commits":612,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":24,"pascal":12,"capssnake":2178,"snakepascal":0,"snake":23,"commits":321,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20260,"pascal":489,"capssnake":70,"snakepascal":4,"snake":4248,"commits":1785,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3898,"staticfirst":151,"abstractlate":29,"abstractfirst":125,"commits":388,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":952576,"char120":73790,"char150":32907,"commits":6047,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-19","convention":{"lang":"php","indent":{"tab":636091,"space":1328029,"commits":5736,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2994,"sameline":2056,"commits":773,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55970,"newline":26002,"commits":2762,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5522,"newline":2860,"commits":710,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36545,"nospace":4216,"commits":2085,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12082,"nospace":56413,"commits":2767,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":83,"nospace":900,"commits":164,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1386,"nospace":4421,"commits":593,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":252,"pascal":2755,"capssnake":2,"snakepascal":509,"snake":62,"uppersnake":5,"commits":657,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":16,"pascal":75,"capssnake":4147,"snakepascal":0,"snake":35,"commits":317,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":32551,"pascal":3393,"capssnake":69,"snakepascal":5,"snake":7018,"commits":1929,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":5282,"staticfirst":381,"abstractlate":147,"abstractfirst":349,"commits":469,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1466263,"char120":111802,"char150":43287,"commits":6065,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-18","convention":{"lang":"php","indent":{"tab":241191,"space":795238,"commits":4757,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1844,"sameline":959,"commits":492,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":34585,"newline":12866,"commits":2251,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3041,"newline":1103,"commits":535,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":25776,"nospace":2185,"commits":1776,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5031,"nospace":34647,"commits":2305,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":35,"nospace":283,"commits":107,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":374,"nospace":2322,"commits":410,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":16,"pascal":2647,"capssnake":0,"snakepascal":163,"snake":53,"uppersnake":2,"commits":444,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":76,"capssnake":2677,"snakepascal":0,"snake":17,"commits":244,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16762,"pascal":3015,"capssnake":34,"snakepascal":28,"snake":3871,"commits":1403,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2129,"staticfirst":126,"abstractlate":27,"abstractfirst":226,"commits":360,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":886847,"char120":60187,"char150":27023,"commits":4996,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-17","convention":{"lang":"php","indent":{"tab":82782,"space":258360,"commits":2704,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":580,"sameline":387,"commits":245,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":13510,"newline":4627,"commits":1245,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":956,"newline":358,"commits":280,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":9458,"nospace":1034,"commits":909,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2519,"nospace":12719,"commits":1247,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":10,"nospace":234,"commits":57,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":140,"nospace":674,"commits":233,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":48,"pascal":659,"capssnake":2,"snakepascal":194,"snake":80,"uppersnake":0,"commits":232,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":6,"capssnake":784,"snakepascal":0,"snake":1,"commits":142,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6440,"pascal":76,"capssnake":4,"snakepascal":2,"snake":1076,"commits":756,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":918,"staticfirst":86,"abstractlate":6,"abstractfirst":46,"commits":175,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":290602,"char120":24315,"char150":8648,"commits":2920,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-16","convention":{"lang":"php","indent":{"tab":243439,"space":620736,"commits":3911,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1553,"sameline":1582,"commits":371,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":28088,"newline":14010,"commits":1781,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2772,"newline":2274,"commits":395,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":19987,"nospace":1738,"commits":1378,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5216,"nospace":32789,"commits":1828,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":460,"nospace":474,"commits":86,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":321,"nospace":3471,"commits":341,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":37,"pascal":1625,"capssnake":1,"snakepascal":243,"snake":283,"uppersnake":2,"commits":319,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":20,"pascal":14,"capssnake":1989,"snakepascal":0,"snake":19,"commits":181,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":12463,"pascal":226,"capssnake":0,"snakepascal":3,"snake":4703,"commits":1060,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2040,"staticfirst":195,"abstractlate":33,"abstractfirst":63,"commits":268,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":666365,"char120":55633,"char150":24854,"commits":4180,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-15","convention":{"lang":"php","indent":{"tab":294535,"space":638088,"commits":3613,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1215,"sameline":1605,"commits":343,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":34195,"newline":13903,"commits":1766,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3958,"newline":655,"commits":366,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26546,"nospace":1689,"commits":1362,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9359,"nospace":30733,"commits":1772,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":20,"nospace":276,"commits":76,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":484,"nospace":2653,"commits":279,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":15,"pascal":902,"capssnake":0,"snakepascal":245,"snake":199,"uppersnake":1,"commits":350,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":2,"capssnake":1154,"snakepascal":0,"snake":3,"commits":177,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17382,"pascal":47,"capssnake":1,"snakepascal":13,"snake":5396,"commits":1098,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2160,"staticfirst":84,"abstractlate":57,"abstractfirst":179,"commits":280,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":711764,"char120":48981,"char150":17244,"commits":3814,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-14","convention":{"lang":"php","indent":{"tab":221086,"space":368052,"commits":3182,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":575,"sameline":443,"commits":248,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":21144,"newline":8937,"commits":1589,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2306,"newline":1321,"commits":375,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":15181,"nospace":947,"commits":1275,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2509,"nospace":24494,"commits":1622,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":29,"nospace":262,"commits":74,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":344,"nospace":2021,"commits":303,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":30,"pascal":601,"capssnake":0,"snakepascal":74,"snake":87,"uppersnake":7,"commits":227,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":1,"capssnake":880,"snakepascal":0,"snake":20,"commits":157,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6819,"pascal":116,"capssnake":10,"snakepascal":5,"snake":2177,"commits":890,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":995,"staticfirst":39,"abstractlate":22,"abstractfirst":45,"commits":201,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":401368,"char120":40669,"char150":18277,"commits":3376,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-13","convention":{"lang":"php","indent":{"tab":435986,"space":998518,"commits":5778,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1379,"sameline":1631,"commits":608,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41163,"newline":24080,"commits":2893,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4465,"newline":3743,"commits":601,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":28534,"nospace":3663,"commits":2102,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9133,"nospace":45203,"commits":2896,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":395,"nospace":330,"commits":138,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":627,"nospace":4944,"commits":510,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":62,"pascal":1827,"capssnake":19,"snakepascal":290,"snake":132,"uppersnake":7,"commits":532,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":1,"capssnake":1452,"snakepascal":11,"snake":25,"commits":250,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14037,"pascal":260,"capssnake":3,"snakepascal":13,"snake":7278,"commits":1831,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2745,"staticfirst":146,"abstractlate":35,"abstractfirst":158,"commits":558,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1086824,"char120":83587,"char150":35822,"commits":6087,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-12","convention":{"lang":"php","indent":{"tab":382209,"space":1060562,"commits":6069,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2584,"sameline":2015,"commits":733,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47537,"newline":21652,"commits":2997,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4675,"newline":2277,"commits":640,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35203,"nospace":3671,"commits":2188,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8383,"nospace":50953,"commits":3040,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":116,"nospace":706,"commits":154,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":786,"nospace":3672,"commits":538,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":49,"pascal":3344,"capssnake":11,"snakepascal":367,"snake":173,"uppersnake":11,"commits":614,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":25,"pascal":33,"capssnake":2042,"snakepascal":0,"snake":21,"commits":304,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23155,"pascal":568,"capssnake":5,"snakepascal":6,"snake":7132,"commits":1882,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2867,"staticfirst":370,"abstractlate":51,"abstractfirst":249,"commits":520,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1205099,"char120":87350,"char150":31836,"commits":6458,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-11","convention":{"lang":"php","indent":{"tab":196420,"space":678520,"commits":3909,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1992,"sameline":1054,"commits":441,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":38545,"newline":12377,"commits":1999,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4799,"newline":1910,"commits":478,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":28421,"nospace":1810,"commits":1498,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10632,"nospace":30689,"commits":2014,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":119,"nospace":410,"commits":94,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":546,"nospace":4175,"commits":396,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":21,"pascal":1254,"capssnake":1,"snakepascal":297,"snake":178,"uppersnake":0,"commits":375,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":3,"capssnake":1716,"snakepascal":0,"snake":1,"commits":194,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13686,"pascal":412,"capssnake":4,"snakepascal":7,"snake":5581,"commits":1335,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1916,"staticfirst":191,"abstractlate":13,"abstractfirst":186,"commits":341,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":761693,"char120":50848,"char150":17481,"commits":4097,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-10","convention":{"lang":"php","indent":{"tab":213499,"space":686595,"commits":4534,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2121,"sameline":826,"commits":408,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":34477,"newline":10600,"commits":2227,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3795,"newline":1580,"commits":493,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26930,"nospace":1629,"commits":1813,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7429,"nospace":31239,"commits":2268,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":57,"nospace":213,"commits":70,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":754,"nospace":2786,"commits":434,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":54,"pascal":1085,"capssnake":3,"snakepascal":620,"snake":119,"uppersnake":5,"commits":355,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":13,"pascal":0,"capssnake":1617,"snakepascal":0,"snake":28,"commits":205,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18582,"pascal":154,"capssnake":33,"snakepascal":3,"snake":5006,"commits":1330,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1896,"staticfirst":115,"abstractlate":36,"abstractfirst":382,"commits":295,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":789876,"char120":59185,"char150":21787,"commits":4830,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-09","convention":{"lang":"php","indent":{"tab":259347,"space":610881,"commits":2633,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1605,"sameline":1756,"commits":328,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":25793,"newline":12458,"commits":1342,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2628,"newline":2269,"commits":267,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":17696,"nospace":2021,"commits":991,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5867,"nospace":25515,"commits":1342,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":27,"nospace":602,"commits":76,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":777,"nospace":2505,"commits":211,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":57,"pascal":1443,"capssnake":4,"snakepascal":331,"snake":171,"uppersnake":1,"commits":284,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":7,"capssnake":1111,"snakepascal":10,"snake":58,"commits":164,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22460,"pascal":376,"capssnake":1,"snakepascal":8,"snake":3932,"commits":815,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2251,"staticfirst":118,"abstractlate":73,"abstractfirst":166,"commits":247,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":721340,"char120":46184,"char150":15264,"commits":2781,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-08","convention":{"lang":"php","indent":{"tab":316496,"space":548679,"commits":3109,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":650,"sameline":1115,"commits":269,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":27425,"newline":16264,"commits":1479,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4829,"newline":1167,"commits":308,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13371,"nospace":1866,"commits":1135,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6604,"nospace":23518,"commits":1486,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":40,"nospace":438,"commits":70,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1023,"nospace":2998,"commits":239,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":80,"pascal":755,"capssnake":0,"snakepascal":152,"snake":62,"uppersnake":7,"commits":245,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":0,"capssnake":986,"snakepascal":0,"snake":0,"commits":123,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":5744,"pascal":251,"capssnake":1,"snakepascal":36,"snake":3429,"commits":903,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":860,"staticfirst":99,"abstractlate":16,"abstractfirst":48,"commits":212,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":577713,"char120":45658,"char150":14389,"commits":3292,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-07","convention":{"lang":"php","indent":{"tab":179050,"space":507588,"commits":3579,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1376,"sameline":770,"commits":357,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":26622,"newline":8791,"commits":1721,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2572,"newline":858,"commits":321,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20191,"nospace":850,"commits":1296,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4866,"nospace":24689,"commits":1749,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":22,"nospace":197,"commits":64,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":477,"nospace":1767,"commits":263,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":36,"pascal":879,"capssnake":6,"snakepascal":391,"snake":170,"uppersnake":20,"commits":380,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":3,"capssnake":1208,"snakepascal":0,"snake":1,"commits":165,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":8864,"pascal":273,"capssnake":3,"snakepascal":20,"snake":3672,"commits":1074,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1800,"staticfirst":94,"abstractlate":10,"abstractfirst":139,"commits":323,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":563668,"char120":46369,"char150":17819,"commits":3749,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-06","convention":{"lang":"php","indent":{"tab":453496,"space":968339,"commits":6586,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1922,"sameline":1305,"commits":735,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46174,"newline":20993,"commits":3191,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4966,"newline":3553,"commits":710,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31747,"nospace":3487,"commits":2295,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9567,"nospace":46381,"commits":3214,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":92,"nospace":564,"commits":149,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":856,"nospace":4541,"commits":588,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":95,"pascal":1938,"capssnake":8,"snakepascal":208,"snake":169,"uppersnake":0,"commits":652,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":18,"pascal":11,"capssnake":2415,"snakepascal":0,"snake":28,"commits":323,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17607,"pascal":513,"capssnake":69,"snakepascal":15,"snake":6529,"commits":2057,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3025,"staticfirst":384,"abstractlate":41,"abstractfirst":219,"commits":475,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1052021,"char120":89159,"char150":34270,"commits":6900,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-05","convention":{"lang":"php","indent":{"tab":367421,"space":1096568,"commits":6256,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3548,"sameline":1609,"commits":763,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":52663,"newline":21167,"commits":3113,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5224,"newline":3036,"commits":702,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36138,"nospace":4760,"commits":2301,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9314,"nospace":51082,"commits":3144,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":84,"nospace":1027,"commits":156,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":879,"nospace":4019,"commits":569,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":105,"pascal":2692,"capssnake":12,"snakepascal":821,"snake":72,"uppersnake":4,"commits":725,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":23,"pascal":8,"capssnake":2803,"snakepascal":0,"snake":38,"commits":385,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23260,"pascal":812,"capssnake":103,"snakepascal":8,"snake":5919,"commits":2049,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3578,"staticfirst":134,"abstractlate":35,"abstractfirst":207,"commits":503,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1220439,"char120":91074,"char150":30634,"commits":6675,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-04","convention":{"lang":"php","indent":{"tab":208664,"space":588061,"commits":4075,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1067,"sameline":852,"commits":389,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":37067,"newline":9424,"commits":1950,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3763,"newline":810,"commits":432,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27165,"nospace":2412,"commits":1510,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5930,"nospace":32601,"commits":1985,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":24,"nospace":515,"commits":89,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":816,"nospace":2047,"commits":343,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":44,"pascal":1598,"capssnake":9,"snakepascal":181,"snake":84,"uppersnake":1,"commits":382,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":0,"capssnake":1522,"snakepascal":0,"snake":12,"commits":163,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13179,"pascal":253,"capssnake":3,"snakepascal":5,"snake":4370,"commits":1214,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1979,"staticfirst":103,"abstractlate":96,"abstractfirst":181,"commits":344,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":646867,"char120":54898,"char150":19732,"commits":4322,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-03","convention":{"lang":"php","indent":{"tab":153787,"space":437767,"commits":3810,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1042,"sameline":621,"commits":413,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":24116,"newline":6264,"commits":1952,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2672,"newline":1365,"commits":447,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":18147,"nospace":1153,"commits":1598,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4473,"nospace":21954,"commits":1948,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":257,"nospace":249,"commits":84,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":406,"nospace":2196,"commits":379,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":27,"pascal":978,"capssnake":8,"snakepascal":91,"snake":176,"uppersnake":0,"commits":408,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":0,"capssnake":1419,"snakepascal":1,"snake":6,"commits":168,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":7183,"pascal":184,"capssnake":1,"snakepascal":13,"snake":3523,"commits":1204,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":976,"staticfirst":79,"abstractlate":24,"abstractfirst":70,"commits":288,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":493583,"char120":39625,"char150":15522,"commits":4076,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-02","convention":{"lang":"php","indent":{"tab":129898,"space":412668,"commits":3920,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1191,"sameline":803,"commits":372,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":20464,"newline":8188,"commits":1972,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2670,"newline":679,"commits":415,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13915,"nospace":1474,"commits":1535,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2792,"nospace":21101,"commits":2005,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":10,"nospace":237,"commits":71,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":147,"nospace":1237,"commits":329,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":83,"pascal":1070,"capssnake":3,"snakepascal":165,"snake":146,"uppersnake":3,"commits":374,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":20,"pascal":0,"capssnake":953,"snakepascal":0,"snake":10,"commits":147,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":8494,"pascal":204,"capssnake":0,"snakepascal":10,"snake":2435,"commits":1109,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1257,"staticfirst":98,"abstractlate":24,"abstractfirst":110,"commits":302,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":452049,"char120":36913,"char150":12293,"commits":4190,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-04-01","convention":{"lang":"php","indent":{"tab":188567,"space":434302,"commits":3388,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":892,"sameline":902,"commits":339,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18258,"newline":9886,"commits":1716,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1899,"newline":1364,"commits":288,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11902,"nospace":2410,"commits":1351,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3133,"nospace":20464,"commits":1747,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":25,"nospace":527,"commits":56,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":193,"nospace":2037,"commits":230,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":24,"pascal":1160,"capssnake":1,"snakepascal":68,"snake":95,"uppersnake":0,"commits":339,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":3,"capssnake":773,"snakepascal":4,"snake":2,"commits":147,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":7617,"pascal":152,"capssnake":0,"snakepascal":10,"snake":2925,"commits":993,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1257,"staticfirst":127,"abstractlate":61,"abstractfirst":86,"commits":270,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":477407,"char120":37298,"char150":13487,"commits":3604,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-31","convention":{"lang":"php","indent":{"tab":134973,"space":335150,"commits":2846,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1261,"sameline":525,"commits":281,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":18825,"newline":5709,"commits":1354,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1103,"newline":513,"commits":219,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13364,"nospace":2548,"commits":1027,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":2970,"nospace":19228,"commits":1395,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":6,"nospace":254,"commits":53,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":163,"nospace":923,"commits":167,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":12,"pascal":844,"capssnake":1,"snakepascal":53,"snake":88,"uppersnake":0,"commits":238,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":1,"capssnake":1084,"snakepascal":0,"snake":11,"commits":134,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6886,"pascal":123,"capssnake":0,"snakepascal":2,"snake":1837,"commits":773,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1179,"staticfirst":50,"abstractlate":21,"abstractfirst":93,"commits":187,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":379410,"char120":29078,"char150":9715,"commits":3037,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-30","convention":{"lang":"php","indent":{"tab":436556,"space":1219884,"commits":7743,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3427,"sameline":2181,"commits":819,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":59146,"newline":22002,"commits":3779,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5890,"newline":2682,"commits":891,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":42221,"nospace":3900,"commits":2857,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10137,"nospace":60231,"commits":3838,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":145,"nospace":937,"commits":226,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":601,"nospace":4687,"commits":701,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":47,"pascal":2960,"capssnake":19,"snakepascal":453,"snake":108,"uppersnake":7,"commits":749,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":15,"pascal":3,"capssnake":2674,"snakepascal":0,"snake":36,"commits":393,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23716,"pascal":470,"capssnake":38,"snakepascal":12,"snake":6336,"commits":2460,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3744,"staticfirst":280,"abstractlate":84,"abstractfirst":331,"commits":553,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1369486,"char120":101266,"char150":41332,"commits":8201,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-29","convention":{"lang":"php","indent":{"tab":286734,"space":910379,"commits":5868,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2016,"sameline":1201,"commits":657,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48821,"newline":17820,"commits":2885,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5143,"newline":2069,"commits":725,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33588,"nospace":2544,"commits":2141,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9414,"nospace":45619,"commits":2907,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":80,"nospace":511,"commits":153,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":475,"nospace":4711,"commits":607,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":52,"pascal":1738,"capssnake":2,"snakepascal":452,"snake":124,"uppersnake":1,"commits":556,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":7,"pascal":20,"capssnake":2632,"snakepascal":0,"snake":32,"commits":293,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":15285,"pascal":553,"capssnake":37,"snakepascal":42,"snake":5045,"commits":1742,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2765,"staticfirst":222,"abstractlate":26,"abstractfirst":189,"commits":397,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1003672,"char120":73697,"char150":27973,"commits":6197,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-28","convention":{"lang":"php","indent":{"tab":204137,"space":482913,"commits":4024,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1132,"sameline":680,"commits":377,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":21197,"newline":9062,"commits":1957,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1993,"newline":699,"commits":475,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":13318,"nospace":2939,"commits":1473,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3184,"nospace":23488,"commits":2011,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":19,"nospace":431,"commits":92,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":214,"nospace":1588,"commits":398,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":14,"pascal":1140,"capssnake":2,"snakepascal":197,"snake":101,"uppersnake":19,"commits":347,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":44,"pascal":0,"capssnake":1393,"snakepascal":0,"snake":5,"commits":191,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":11584,"pascal":242,"capssnake":3,"snakepascal":9,"snake":2599,"commits":1166,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1583,"staticfirst":67,"abstractlate":3,"abstractfirst":129,"commits":278,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":532719,"char120":44824,"char150":15097,"commits":4274,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-27","convention":{"lang":"php","indent":{"tab":175727,"space":520461,"commits":3197,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1206,"sameline":634,"commits":332,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":22991,"newline":11933,"commits":1625,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2200,"newline":2699,"commits":323,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":17478,"nospace":1796,"commits":1309,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4533,"nospace":24250,"commits":1659,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":14,"nospace":265,"commits":71,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":393,"nospace":2929,"commits":282,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":22,"pascal":964,"capssnake":3,"snakepascal":162,"snake":151,"uppersnake":6,"commits":316,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":11,"pascal":4,"capssnake":1616,"snakepascal":0,"snake":15,"commits":169,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":8699,"pascal":186,"capssnake":1,"snakepascal":22,"snake":3473,"commits":943,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1429,"staticfirst":136,"abstractlate":8,"abstractfirst":72,"commits":262,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":591510,"char120":42108,"char150":13730,"commits":3386,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-26","convention":{"lang":"php","indent":{"tab":372389,"space":922413,"commits":6421,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2156,"sameline":1237,"commits":614,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":50704,"newline":23187,"commits":3212,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5563,"newline":2840,"commits":654,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35782,"nospace":3893,"commits":2484,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13018,"nospace":50079,"commits":3236,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":116,"nospace":1012,"commits":156,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":826,"nospace":4819,"commits":529,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":42,"pascal":1748,"capssnake":3,"snakepascal":407,"snake":241,"uppersnake":17,"commits":588,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":92,"capssnake":2073,"snakepascal":0,"snake":50,"commits":284,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14578,"pascal":405,"capssnake":3,"snakepascal":4,"snake":8463,"commits":1856,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2873,"staticfirst":258,"abstractlate":35,"abstractfirst":160,"commits":431,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1007110,"char120":88705,"char150":35260,"commits":6746,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-25","convention":{"lang":"php","indent":{"tab":400864,"space":852735,"commits":6591,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1649,"sameline":1164,"commits":743,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48274,"newline":14008,"commits":3288,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3304,"newline":2446,"commits":697,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33491,"nospace":4336,"commits":2523,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8108,"nospace":44089,"commits":3315,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":29,"nospace":869,"commits":161,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":801,"nospace":3090,"commits":556,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":30,"pascal":1948,"capssnake":3,"snakepascal":202,"snake":208,"uppersnake":0,"commits":607,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":56,"pascal":28,"capssnake":1954,"snakepascal":0,"snake":32,"commits":301,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16538,"pascal":742,"capssnake":68,"snakepascal":7,"snake":5408,"commits":1981,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3034,"staticfirst":180,"abstractlate":51,"abstractfirst":307,"commits":498,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":934838,"char120":76078,"char150":29807,"commits":6941,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-24","convention":{"lang":"php","indent":{"tab":407747,"space":1099322,"commits":6793,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3566,"sameline":2137,"commits":717,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":62193,"newline":18724,"commits":3355,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4463,"newline":3906,"commits":744,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":40738,"nospace":8810,"commits":2613,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10965,"nospace":57485,"commits":3369,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":36,"nospace":1626,"commits":187,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":636,"nospace":5280,"commits":594,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":38,"pascal":3011,"capssnake":5,"snakepascal":1142,"snake":270,"uppersnake":5,"commits":607,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":26,"pascal":3,"capssnake":5800,"snakepascal":0,"snake":35,"commits":357,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26857,"pascal":647,"capssnake":9,"snakepascal":20,"snake":5505,"commits":1979,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3571,"staticfirst":251,"abstractlate":28,"abstractfirst":405,"commits":489,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1233984,"char120":92032,"char150":26291,"commits":7186,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-23","convention":{"lang":"php","indent":{"tab":438196,"space":992892,"commits":6969,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2647,"sameline":1404,"commits":784,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":44767,"newline":25204,"commits":3271,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3777,"newline":2615,"commits":728,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":28633,"nospace":4623,"commits":2373,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7223,"nospace":50426,"commits":3337,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":182,"nospace":667,"commits":213,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":667,"nospace":3777,"commits":604,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":96,"pascal":2942,"capssnake":3,"snakepascal":168,"snake":118,"uppersnake":2,"commits":732,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":216,"pascal":423,"capssnake":2330,"snakepascal":4,"snake":26,"commits":250,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20946,"pascal":648,"capssnake":2,"snakepascal":3,"snake":4603,"commits":2035,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4314,"staticfirst":192,"abstractlate":38,"abstractfirst":259,"commits":463,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1099372,"char120":88268,"char150":31749,"commits":7429,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-22","convention":{"lang":"php","indent":{"tab":435450,"space":1230647,"commits":6360,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2935,"sameline":1777,"commits":749,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":53341,"newline":29215,"commits":3090,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8102,"newline":2815,"commits":760,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38044,"nospace":3512,"commits":2321,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":14502,"nospace":55901,"commits":3121,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":191,"nospace":1248,"commits":201,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1057,"nospace":5900,"commits":644,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":63,"pascal":2834,"capssnake":4,"snakepascal":531,"snake":299,"uppersnake":8,"commits":705,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":5,"capssnake":2897,"snakepascal":1,"snake":18,"commits":310,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24921,"pascal":470,"capssnake":6,"snakepascal":8,"snake":10639,"commits":2074,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4583,"staticfirst":243,"abstractlate":172,"abstractfirst":475,"commits":531,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1381917,"char120":94810,"char150":34839,"commits":6723,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-21","convention":{"lang":"php","indent":{"tab":453872,"space":1356961,"commits":7429,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":6621,"sameline":1473,"commits":785,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":80815,"newline":22565,"commits":3677,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5875,"newline":3069,"commits":749,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":62381,"nospace":3214,"commits":2745,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":14972,"nospace":74219,"commits":3713,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":467,"nospace":1200,"commits":174,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1312,"nospace":4400,"commits":563,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":132,"pascal":2841,"capssnake":4,"snakepascal":598,"snake":171,"uppersnake":3,"commits":741,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":27,"capssnake":2649,"snakepascal":0,"snake":65,"commits":351,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23305,"pascal":229,"capssnake":0,"snakepascal":10,"snake":8591,"commits":2298,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4059,"staticfirst":207,"abstractlate":25,"abstractfirst":512,"commits":577,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1511405,"char120":113254,"char150":35560,"commits":7808,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-20","convention":{"lang":"php","indent":{"tab":525022,"space":1587878,"commits":7055,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":6001,"sameline":1172,"commits":710,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":102447,"newline":27861,"commits":3577,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4616,"newline":3471,"commits":870,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":79022,"nospace":4304,"commits":2824,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8077,"nospace":102153,"commits":3603,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":40,"nospace":791,"commits":190,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":426,"nospace":4967,"commits":648,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":63,"pascal":1741,"capssnake":12,"snakepascal":480,"snake":271,"uppersnake":1,"commits":654,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":10,"capssnake":3703,"snakepascal":0,"snake":248,"commits":417,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":28991,"pascal":597,"capssnake":33,"snakepascal":13,"snake":7995,"commits":2265,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":7624,"staticfirst":477,"abstractlate":32,"abstractfirst":920,"commits":587,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1714642,"char120":139194,"char150":41569,"commits":7523,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-19","convention":{"lang":"php","indent":{"tab":292516,"space":794692,"commits":7054,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2176,"sameline":1607,"commits":674,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":43765,"newline":18634,"commits":3496,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4577,"newline":3394,"commits":746,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":30878,"nospace":2892,"commits":2621,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5568,"nospace":46771,"commits":3500,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":58,"nospace":667,"commits":152,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":373,"nospace":4188,"commits":594,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":40,"pascal":1820,"capssnake":1,"snakepascal":487,"snake":195,"uppersnake":31,"commits":644,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":10,"capssnake":1773,"snakepascal":1,"snake":12,"commits":300,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13161,"pascal":283,"capssnake":0,"snakepascal":4,"snake":6918,"commits":2100,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2725,"staticfirst":138,"abstractlate":33,"abstractfirst":180,"commits":493,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":918382,"char120":76596,"char150":29224,"commits":7437,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-18","convention":{"lang":"php","indent":{"tab":283775,"space":917128,"commits":7096,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2190,"sameline":1802,"commits":710,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56161,"newline":14637,"commits":3545,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5172,"newline":2779,"commits":750,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39476,"nospace":3440,"commits":2764,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9997,"nospace":49381,"commits":3597,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":44,"nospace":1041,"commits":177,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":627,"nospace":4809,"commits":616,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":136,"pascal":1747,"capssnake":4,"snakepascal":955,"snake":166,"uppersnake":5,"commits":646,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":29,"capssnake":1980,"snakepascal":0,"snake":19,"commits":339,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18117,"pascal":1110,"capssnake":1,"snakepascal":9,"snake":6330,"commits":2052,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2815,"staticfirst":158,"abstractlate":67,"abstractfirst":326,"commits":564,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1010931,"char120":86581,"char150":35788,"commits":7497,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-17","convention":{"lang":"php","indent":{"tab":400328,"space":930482,"commits":6356,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2151,"sameline":1735,"commits":644,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45745,"newline":23348,"commits":2970,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2988,"newline":2163,"commits":642,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33118,"nospace":2163,"commits":2201,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5501,"nospace":50620,"commits":3012,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":761,"nospace":454,"commits":112,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":321,"nospace":4075,"commits":523,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":57,"pascal":1759,"capssnake":2,"snakepascal":501,"snake":138,"uppersnake":8,"commits":597,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":32,"pascal":1,"capssnake":2416,"snakepascal":0,"snake":24,"commits":307,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20276,"pascal":490,"capssnake":68,"snakepascal":35,"snake":6428,"commits":1905,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3243,"staticfirst":167,"abstractlate":20,"abstractfirst":346,"commits":421,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1005071,"char120":85378,"char150":31750,"commits":6739,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-16","convention":{"lang":"php","indent":{"tab":447653,"space":1414213,"commits":6651,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3412,"sameline":2168,"commits":782,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":76073,"newline":28330,"commits":3324,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4936,"newline":2861,"commits":831,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":53438,"nospace":5494,"commits":2440,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6613,"nospace":77600,"commits":3358,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":30,"nospace":1384,"commits":218,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":598,"nospace":5297,"commits":670,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":83,"pascal":3332,"capssnake":6,"snakepascal":751,"snake":344,"uppersnake":23,"commits":689,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":106,"pascal":7,"capssnake":3189,"snakepascal":12,"snake":8,"commits":337,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":34006,"pascal":548,"capssnake":2,"snakepascal":23,"snake":6503,"commits":2130,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":5492,"staticfirst":540,"abstractlate":114,"abstractfirst":747,"commits":554,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1560382,"char120":116430,"char150":34689,"commits":7038,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-15","convention":{"lang":"php","indent":{"tab":456293,"space":1028560,"commits":6747,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1988,"sameline":1789,"commits":678,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":51291,"newline":23468,"commits":3235,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6221,"newline":3058,"commits":861,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35525,"nospace":4044,"commits":2326,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8483,"nospace":54012,"commits":3270,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":138,"nospace":984,"commits":240,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":678,"nospace":5405,"commits":670,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":38,"pascal":2462,"capssnake":9,"snakepascal":316,"snake":87,"uppersnake":1,"commits":617,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":16,"pascal":0,"capssnake":2240,"snakepascal":0,"snake":29,"commits":328,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21004,"pascal":701,"capssnake":40,"snakepascal":12,"snake":5961,"commits":2127,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3540,"staticfirst":254,"abstractlate":22,"abstractfirst":338,"commits":456,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1171632,"char120":83869,"char150":31155,"commits":7129,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-14","convention":{"lang":"php","indent":{"tab":258678,"space":797646,"commits":5896,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1786,"sameline":1792,"commits":615,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":42294,"newline":14598,"commits":2886,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4921,"newline":1911,"commits":683,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27824,"nospace":5643,"commits":2177,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5111,"nospace":43970,"commits":2896,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":111,"nospace":589,"commits":172,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":246,"nospace":4068,"commits":524,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":28,"pascal":1885,"capssnake":8,"snakepascal":396,"snake":207,"uppersnake":0,"commits":570,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":21,"pascal":0,"capssnake":4436,"snakepascal":0,"snake":2,"commits":319,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19701,"pascal":274,"capssnake":2,"snakepascal":6,"snake":5712,"commits":1777,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2493,"staticfirst":210,"abstractlate":39,"abstractfirst":199,"commits":433,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":896983,"char120":72331,"char150":24371,"commits":6193,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-13","convention":{"lang":"php","indent":{"tab":341996,"space":949222,"commits":6795,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2844,"sameline":1113,"commits":676,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41207,"newline":19323,"commits":3307,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3265,"newline":3073,"commits":699,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":29853,"nospace":3448,"commits":2487,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8314,"nospace":44090,"commits":3360,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":10,"nospace":467,"commits":121,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1048,"nospace":2859,"commits":555,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":462,"pascal":2118,"capssnake":4,"snakepascal":251,"snake":227,"uppersnake":0,"commits":624,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":40,"pascal":25,"capssnake":6362,"snakepascal":0,"snake":11,"commits":340,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20475,"pascal":521,"capssnake":33,"snakepascal":47,"snake":5963,"commits":2095,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3388,"staticfirst":505,"abstractlate":69,"abstractfirst":396,"commits":553,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1052054,"char120":86327,"char150":28225,"commits":7180,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-12","convention":{"lang":"php","indent":{"tab":267284,"space":698039,"commits":6449,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1397,"sameline":967,"commits":644,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":32433,"newline":13510,"commits":3143,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2736,"newline":1033,"commits":616,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":20574,"nospace":3588,"commits":2393,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5037,"nospace":34698,"commits":3158,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":40,"nospace":528,"commits":137,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":315,"nospace":2067,"commits":506,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":51,"pascal":1682,"capssnake":2,"snakepascal":116,"snake":165,"uppersnake":4,"commits":601,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":13,"pascal":8,"capssnake":1464,"snakepascal":0,"snake":2,"commits":274,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13341,"pascal":204,"capssnake":0,"snakepascal":7,"snake":4456,"commits":1926,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2063,"staticfirst":123,"abstractlate":23,"abstractfirst":218,"commits":477,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":759886,"char120":71355,"char150":31136,"commits":6795,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-11","convention":{"lang":"php","indent":{"tab":371682,"space":876535,"commits":6660,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2135,"sameline":1335,"commits":684,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":44643,"newline":16038,"commits":3273,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4872,"newline":1767,"commits":708,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33189,"nospace":2605,"commits":2504,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10490,"nospace":42103,"commits":3325,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":94,"nospace":494,"commits":120,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":844,"nospace":3323,"commits":557,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":68,"pascal":2187,"capssnake":5,"snakepascal":246,"snake":228,"uppersnake":5,"commits":612,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":11,"pascal":6,"capssnake":2657,"snakepascal":13,"snake":11,"commits":287,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18295,"pascal":525,"capssnake":33,"snakepascal":13,"snake":6416,"commits":2103,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3082,"staticfirst":207,"abstractlate":79,"abstractfirst":388,"commits":484,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":957796,"char120":84207,"char150":33246,"commits":7060,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-10","convention":{"lang":"php","indent":{"tab":424878,"space":997497,"commits":7057,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2430,"sameline":1702,"commits":708,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48292,"newline":21051,"commits":3425,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3476,"newline":3218,"commits":692,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35580,"nospace":2953,"commits":2554,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7361,"nospace":53577,"commits":3493,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":40,"nospace":641,"commits":124,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":337,"nospace":3821,"commits":542,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":102,"pascal":1951,"capssnake":12,"snakepascal":281,"snake":304,"uppersnake":3,"commits":660,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":96,"pascal":24,"capssnake":1989,"snakepascal":13,"snake":54,"commits":369,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20731,"pascal":534,"capssnake":66,"snakepascal":13,"snake":6118,"commits":2104,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3378,"staticfirst":214,"abstractlate":244,"abstractfirst":273,"commits":568,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1118565,"char120":96925,"char150":36745,"commits":7560,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-09","convention":{"lang":"php","indent":{"tab":396455,"space":1130746,"commits":6657,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2758,"sameline":1983,"commits":752,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47980,"newline":23414,"commits":3136,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5393,"newline":3451,"commits":810,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33056,"nospace":4773,"commits":2295,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7110,"nospace":51735,"commits":3201,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":85,"nospace":682,"commits":208,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":486,"nospace":4836,"commits":692,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":39,"pascal":2826,"capssnake":12,"snakepascal":445,"snake":271,"uppersnake":5,"commits":704,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":16,"pascal":58,"capssnake":2158,"snakepascal":2,"snake":47,"commits":298,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":27042,"pascal":353,"capssnake":0,"snakepascal":43,"snake":7891,"commits":2056,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3451,"staticfirst":198,"abstractlate":62,"abstractfirst":272,"commits":508,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1272529,"char120":98338,"char150":32691,"commits":7062,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-08","convention":{"lang":"php","indent":{"tab":447796,"space":1027736,"commits":6622,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2516,"sameline":1316,"commits":741,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46171,"newline":23060,"commits":3043,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3022,"newline":2059,"commits":750,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31906,"nospace":4273,"commits":2255,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5991,"nospace":58049,"commits":3089,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":104,"nospace":911,"commits":251,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":474,"nospace":3021,"commits":584,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":58,"pascal":2829,"capssnake":2,"snakepascal":308,"snake":117,"uppersnake":20,"commits":670,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":9,"capssnake":2658,"snakepascal":0,"snake":15,"commits":311,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23230,"pascal":740,"capssnake":36,"snakepascal":8,"snake":4209,"commits":1983,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2659,"staticfirst":237,"abstractlate":69,"abstractfirst":656,"commits":520,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1151874,"char120":96091,"char150":35878,"commits":7076,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-07","convention":{"lang":"php","indent":{"tab":458874,"space":1160224,"commits":7006,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2357,"sameline":1845,"commits":756,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":54278,"newline":23271,"commits":3429,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4996,"newline":4345,"commits":716,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39702,"nospace":3913,"commits":2726,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5686,"nospace":59587,"commits":3426,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":14,"nospace":1013,"commits":134,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":398,"nospace":5528,"commits":587,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":176,"pascal":2190,"capssnake":14,"snakepascal":315,"snake":352,"uppersnake":7,"commits":728,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":38,"pascal":20,"capssnake":3162,"snakepascal":32,"snake":31,"commits":370,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22767,"pascal":430,"capssnake":97,"snakepascal":3,"snake":7507,"commits":2265,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4834,"staticfirst":182,"abstractlate":196,"abstractfirst":665,"commits":606,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1282114,"char120":105420,"char150":36248,"commits":7453,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-06","convention":{"lang":"php","indent":{"tab":364144,"space":875333,"commits":6442,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1662,"sameline":1450,"commits":719,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49375,"newline":20287,"commits":3169,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4111,"newline":2284,"commits":679,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33247,"nospace":4965,"commits":2446,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6441,"nospace":53951,"commits":3197,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":159,"nospace":1076,"commits":171,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":484,"nospace":3786,"commits":545,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":56,"pascal":1542,"capssnake":12,"snakepascal":185,"snake":592,"uppersnake":21,"commits":611,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":47,"capssnake":2527,"snakepascal":3,"snake":8,"commits":323,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14491,"pascal":532,"capssnake":4,"snakepascal":7,"snake":7101,"commits":1979,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2201,"staticfirst":118,"abstractlate":77,"abstractfirst":293,"commits":549,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":975709,"char120":80466,"char150":28914,"commits":6850,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-05","convention":{"lang":"php","indent":{"tab":419163,"space":986300,"commits":6162,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1656,"sameline":1666,"commits":622,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47718,"newline":22287,"commits":3070,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3941,"newline":4250,"commits":676,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33075,"nospace":2659,"commits":2311,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6650,"nospace":52461,"commits":3124,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":81,"nospace":721,"commits":146,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":584,"nospace":4832,"commits":526,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":66,"pascal":1897,"capssnake":37,"snakepascal":269,"snake":466,"uppersnake":1,"commits":577,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":26,"pascal":17,"capssnake":5162,"snakepascal":11,"snake":9,"commits":330,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20793,"pascal":342,"capssnake":34,"snakepascal":19,"snake":6990,"commits":1975,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3013,"staticfirst":211,"abstractlate":108,"abstractfirst":294,"commits":448,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1080806,"char120":87871,"char150":33236,"commits":6515,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-04","convention":{"lang":"php","indent":{"tab":432771,"space":1071780,"commits":6452,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1935,"sameline":1834,"commits":701,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49548,"newline":25513,"commits":3191,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6062,"newline":2551,"commits":756,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34927,"nospace":3986,"commits":2466,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11140,"nospace":50312,"commits":3171,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":70,"nospace":832,"commits":187,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":989,"nospace":4391,"commits":571,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":72,"pascal":2051,"capssnake":33,"snakepascal":411,"snake":198,"uppersnake":4,"commits":586,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":10,"capssnake":3664,"snakepascal":1,"snake":9,"commits":360,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17327,"pascal":521,"capssnake":2,"snakepascal":28,"snake":7733,"commits":2056,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2525,"staticfirst":234,"abstractlate":45,"abstractfirst":154,"commits":508,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1147706,"char120":98977,"char150":38935,"commits":6833,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-03","convention":{"lang":"php","indent":{"tab":200721,"space":428189,"commits":2787,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":485,"sameline":626,"commits":251,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":17687,"newline":11437,"commits":1408,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2413,"newline":1638,"commits":311,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":11091,"nospace":2785,"commits":1047,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":3167,"nospace":22144,"commits":1432,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":47,"nospace":1105,"commits":84,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":223,"nospace":2468,"commits":254,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":13,"pascal":544,"capssnake":4,"snakepascal":58,"snake":67,"uppersnake":3,"commits":248,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":17,"capssnake":668,"snakepascal":0,"snake":24,"commits":123,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6300,"pascal":408,"capssnake":2,"snakepascal":36,"snake":3623,"commits":898,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1080,"staticfirst":30,"abstractlate":10,"abstractfirst":59,"commits":225,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":469628,"char120":40541,"char150":16136,"commits":2949,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-03-01","convention":{"lang":"php","indent":{"tab":45988,"space":108961,"commits":229,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":160,"sameline":629,"commits":22,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":4918,"newline":1331,"commits":118,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":576,"newline":72,"commits":22,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":4038,"nospace":44,"commits":95,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1142,"nospace":4069,"commits":119,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":1,"nospace":0,"commits":1,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":280,"nospace":106,"commits":19,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":0,"pascal":205,"capssnake":0,"snakepascal":118,"snake":2,"uppersnake":0,"commits":19,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":78,"snakepascal":0,"snake":0,"commits":7,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":6139,"pascal":1,"capssnake":0,"snakepascal":0,"snake":661,"commits":64,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":96,"staticfirst":3,"abstractlate":0,"abstractfirst":58,"commits":17,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":122354,"char120":6823,"char150":2121,"commits":246,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-28","convention":{"lang":"php","indent":{"tab":9441,"space":29808,"commits":357,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":257,"sameline":90,"commits":38,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":2092,"newline":189,"commits":177,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":188,"newline":47,"commits":39,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":915,"nospace":91,"commits":139,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":124,"nospace":1786,"commits":178,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":0,"nospace":12,"commits":8,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":0,"nospace":100,"commits":31,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":1,"pascal":242,"capssnake":0,"snakepascal":1,"snake":77,"uppersnake":2,"commits":37,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":0,"capssnake":59,"snakepascal":0,"snake":0,"commits":20,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":676,"pascal":6,"capssnake":0,"snakepascal":0,"snake":159,"commits":105,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":67,"staticfirst":0,"abstractlate":1,"abstractfirst":6,"commits":25,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":32263,"char120":3098,"char150":1325,"commits":395,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-26","convention":{"lang":"php","indent":{"tab":10083,"space":35089,"commits":250,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":5,"sameline":86,"commits":14,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":2504,"newline":681,"commits":103,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":288,"newline":18,"commits":32,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":1063,"nospace":434,"commits":75,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":197,"nospace":2496,"commits":97,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":13,"nospace":6,"commits":3,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":13,"nospace":211,"commits":26,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":0,"pascal":26,"capssnake":0,"snakepascal":2,"snake":0,"uppersnake":0,"commits":10,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":95,"snakepascal":0,"snake":0,"commits":9,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":464,"pascal":10,"capssnake":0,"snakepascal":5,"snake":271,"commits":70,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":94,"staticfirst":46,"abstractlate":2,"abstractfirst":3,"commits":9,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":38725,"char120":2283,"char150":1088,"commits":261,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-24","convention":{"lang":"php","indent":{"tab":20415,"space":31818,"commits":321,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":29,"sameline":33,"commits":31,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":1970,"newline":786,"commits":155,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":160,"newline":29,"commits":28,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":1196,"nospace":237,"commits":94,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":139,"nospace":2251,"commits":157,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":6,"nospace":33,"commits":3,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":2,"nospace":113,"commits":22,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":5,"pascal":38,"capssnake":0,"snakepascal":0,"snake":53,"uppersnake":0,"commits":31,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":119,"snakepascal":0,"snake":0,"commits":22,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":474,"pascal":38,"capssnake":0,"snakepascal":0,"snake":207,"commits":97,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":99,"staticfirst":6,"abstractlate":2,"abstractfirst":0,"commits":32,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":33056,"char120":3244,"char150":1293,"commits":329,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-22","convention":{"lang":"php","indent":{"tab":8842,"space":34986,"commits":275,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":68,"sameline":47,"commits":43,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":1449,"newline":344,"commits":126,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":357,"newline":17,"commits":21,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":1001,"nospace":64,"commits":80,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":433,"nospace":1113,"commits":121,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":6,"nospace":150,"commits":7,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":68,"nospace":153,"commits":13,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":2,"pascal":50,"capssnake":0,"snakepascal":10,"snake":7,"uppersnake":0,"commits":31,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":0,"capssnake":105,"snakepascal":0,"snake":0,"commits":17,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":661,"pascal":42,"capssnake":0,"snakepascal":0,"snake":367,"commits":63,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":94,"staticfirst":0,"abstractlate":0,"abstractfirst":11,"commits":12,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":40302,"char120":2321,"char150":919,"commits":310,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-21","convention":{"lang":"php","indent":{"tab":3378,"space":6471,"commits":146,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":28,"sameline":9,"commits":11,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":321,"newline":161,"commits":65,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":43,"newline":8,"commits":19,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":223,"nospace":58,"commits":54,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":143,"nospace":283,"commits":67,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":0,"nospace":14,"commits":5,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":10,"nospace":27,"commits":18,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":0,"pascal":13,"capssnake":0,"snakepascal":4,"snake":0,"uppersnake":0,"commits":9,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":19,"snakepascal":0,"snake":1,"commits":7,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":96,"pascal":7,"capssnake":0,"snakepascal":0,"snake":38,"commits":40,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":21,"staticfirst":0,"abstractlate":1,"abstractfirst":0,"commits":7,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":7180,"char120":590,"char150":244,"commits":151,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-20","convention":{"lang":"php","indent":{"tab":11597,"space":28666,"commits":301,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":30,"sameline":13,"commits":33,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":1369,"newline":737,"commits":128,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":133,"newline":35,"commits":31,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":920,"nospace":95,"commits":96,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":135,"nospace":1739,"commits":130,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":0,"nospace":46,"commits":8,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":5,"nospace":95,"commits":29,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":5,"pascal":86,"capssnake":0,"snakepascal":0,"snake":4,"uppersnake":0,"commits":28,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":31,"snakepascal":0,"snake":0,"commits":12,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":580,"pascal":4,"capssnake":0,"snakepascal":0,"snake":144,"commits":93,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":52,"staticfirst":0,"abstractlate":0,"abstractfirst":8,"commits":23,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":31529,"char120":3097,"char150":1346,"commits":316,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-18","convention":{"lang":"php","indent":{"tab":25083,"space":42743,"commits":232,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":69,"sameline":95,"commits":40,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":2050,"newline":1293,"commits":118,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":163,"newline":371,"commits":25,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":1325,"nospace":284,"commits":95,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":706,"nospace":2259,"commits":118,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":0,"nospace":105,"commits":5,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":198,"nospace":163,"commits":20,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":2,"pascal":24,"capssnake":1,"snakepascal":40,"snake":37,"uppersnake":0,"commits":24,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":149,"snakepascal":0,"snake":0,"commits":16,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":346,"pascal":41,"capssnake":0,"snakepascal":2,"snake":464,"commits":77,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":77,"staticfirst":0,"abstractlate":0,"abstractfirst":0,"commits":21,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":45723,"char120":3664,"char150":1575,"commits":245,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-17","convention":{"lang":"php","indent":{"tab":8442,"space":22888,"commits":324,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":75,"sameline":24,"commits":38,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":961,"newline":559,"commits":173,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":40,"newline":27,"commits":24,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":476,"nospace":156,"commits":117,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":199,"nospace":1046,"commits":178,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":0,"nospace":14,"commits":6,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":4,"nospace":32,"commits":21,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":4,"pascal":62,"capssnake":0,"snakepascal":0,"snake":0,"uppersnake":0,"commits":25,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":1,"capssnake":27,"snakepascal":0,"snake":0,"commits":15,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":591,"pascal":3,"capssnake":0,"snakepascal":0,"snake":69,"commits":94,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":63,"staticfirst":0,"abstractlate":2,"abstractfirst":1,"commits":23,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":25965,"char120":1980,"char150":560,"commits":352,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-16","convention":{"lang":"php","indent":{"tab":8140,"space":23568,"commits":200,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":103,"sameline":31,"commits":29,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":793,"newline":354,"commits":94,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":95,"newline":71,"commits":31,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":476,"nospace":83,"commits":70,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":74,"nospace":959,"commits":97,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":3,"nospace":51,"commits":9,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":2,"nospace":85,"commits":19,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":4,"pascal":99,"capssnake":0,"snakepascal":2,"snake":0,"uppersnake":0,"commits":27,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":33,"snakepascal":0,"snake":0,"commits":7,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":796,"pascal":1,"capssnake":0,"snakepascal":0,"snake":39,"commits":64,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":72,"staticfirst":2,"abstractlate":0,"abstractfirst":5,"commits":14,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":27787,"char120":1758,"char150":814,"commits":216,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-14","convention":{"lang":"php","indent":{"tab":33130,"space":59113,"commits":209,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":169,"sameline":203,"commits":28,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":2562,"newline":1357,"commits":96,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":276,"newline":52,"commits":32,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":1788,"nospace":56,"commits":65,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":724,"nospace":2367,"commits":97,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":3,"nospace":7,"commits":5,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":62,"nospace":149,"commits":23,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":1,"pascal":294,"capssnake":0,"snakepascal":3,"snake":0,"uppersnake":0,"commits":25,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":0,"capssnake":344,"snakepascal":0,"snake":0,"commits":16,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":1080,"pascal":7,"capssnake":0,"snakepascal":0,"snake":185,"commits":70,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":214,"staticfirst":11,"abstractlate":1,"abstractfirst":14,"commits":23,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":65382,"char120":5719,"char150":2778,"commits":216,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-13","convention":{"lang":"php","indent":{"tab":178893,"space":469138,"commits":3795,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1118,"sameline":556,"commits":400,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":23515,"newline":7005,"commits":1776,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":1421,"newline":929,"commits":283,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":17130,"nospace":2908,"commits":1308,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":1803,"nospace":26327,"commits":1791,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":27,"nospace":205,"commits":67,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":187,"nospace":1764,"commits":239,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":48,"pascal":1446,"capssnake":0,"snakepascal":128,"snake":119,"uppersnake":1,"commits":365,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":0,"capssnake":1426,"snakepascal":0,"snake":6,"commits":174,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":10450,"pascal":207,"capssnake":0,"snakepascal":9,"snake":2035,"commits":1070,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1679,"staticfirst":116,"abstractlate":23,"abstractfirst":96,"commits":252,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":513846,"char120":43277,"char150":20279,"commits":4008,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-12","convention":{"lang":"php","indent":{"tab":444058,"space":1060478,"commits":6695,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1968,"sameline":1888,"commits":820,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":52142,"newline":20654,"commits":3329,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5876,"newline":2103,"commits":719,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38370,"nospace":4387,"commits":2600,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12637,"nospace":51179,"commits":3389,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":42,"nospace":712,"commits":181,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":959,"nospace":4179,"commits":602,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":113,"pascal":2096,"capssnake":11,"snakepascal":257,"snake":315,"uppersnake":0,"commits":723,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":23,"pascal":48,"capssnake":2302,"snakepascal":0,"snake":59,"commits":365,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21326,"pascal":459,"capssnake":96,"snakepascal":13,"snake":6865,"commits":2045,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3156,"staticfirst":260,"abstractlate":12,"abstractfirst":229,"commits":526,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1168515,"char120":97132,"char150":38969,"commits":7088,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-11","convention":{"lang":"php","indent":{"tab":388202,"space":838420,"commits":6471,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2018,"sameline":1308,"commits":713,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41232,"newline":25174,"commits":3266,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7405,"newline":2130,"commits":718,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27937,"nospace":3174,"commits":2555,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":15733,"nospace":41239,"commits":3309,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":108,"nospace":1085,"commits":165,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1198,"nospace":4712,"commits":559,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":138,"pascal":2172,"capssnake":2,"snakepascal":174,"snake":134,"uppersnake":5,"commits":643,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":6,"capssnake":2520,"snakepascal":0,"snake":5,"commits":319,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14191,"pascal":391,"capssnake":47,"snakepascal":17,"snake":6121,"commits":1930,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2294,"staticfirst":111,"abstractlate":14,"abstractfirst":139,"commits":486,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":951345,"char120":79669,"char150":31160,"commits":6843,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-10","convention":{"lang":"php","indent":{"tab":368082,"space":895572,"commits":6174,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2378,"sameline":1657,"commits":678,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48850,"newline":25810,"commits":3029,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7545,"newline":3073,"commits":635,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35428,"nospace":4566,"commits":2289,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":18553,"nospace":46797,"commits":3025,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":83,"nospace":878,"commits":108,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1261,"nospace":5190,"commits":533,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":71,"pascal":1946,"capssnake":4,"snakepascal":424,"snake":143,"uppersnake":11,"commits":601,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":0,"capssnake":2097,"snakepascal":0,"snake":9,"commits":338,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18432,"pascal":746,"capssnake":35,"snakepascal":37,"snake":7533,"commits":1968,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2826,"staticfirst":221,"abstractlate":24,"abstractfirst":218,"commits":509,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1018543,"char120":80223,"char150":31756,"commits":6541,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-09","convention":{"lang":"php","indent":{"tab":586290,"space":1256813,"commits":7172,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":4797,"sameline":2047,"commits":896,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49121,"newline":32015,"commits":3465,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4506,"newline":5405,"commits":819,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34856,"nospace":3966,"commits":2551,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10020,"nospace":60720,"commits":3501,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":141,"nospace":738,"commits":182,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":536,"nospace":5991,"commits":679,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":70,"pascal":3931,"capssnake":8,"snakepascal":566,"snake":148,"uppersnake":8,"commits":780,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":45,"pascal":35,"capssnake":2855,"snakepascal":0,"snake":42,"commits":345,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":29491,"pascal":728,"capssnake":66,"snakepascal":99,"snake":7928,"commits":2244,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3835,"staticfirst":175,"abstractlate":19,"abstractfirst":309,"commits":531,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1440257,"char120":110261,"char150":39234,"commits":7691,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-08","convention":{"lang":"php","indent":{"tab":431361,"space":1043120,"commits":6669,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2926,"sameline":1615,"commits":841,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":43910,"newline":27835,"commits":3220,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6199,"newline":3183,"commits":752,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31016,"nospace":3378,"commits":2341,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11927,"nospace":50530,"commits":3259,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":119,"nospace":716,"commits":185,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":898,"nospace":5266,"commits":601,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":37,"pascal":3178,"capssnake":11,"snakepascal":332,"snake":174,"uppersnake":6,"commits":731,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":39,"pascal":5,"capssnake":3196,"snakepascal":0,"snake":45,"commits":305,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22076,"pascal":341,"capssnake":33,"snakepascal":25,"snake":7780,"commits":2086,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2841,"staticfirst":252,"abstractlate":42,"abstractfirst":269,"commits":484,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1198408,"char120":88118,"char150":30509,"commits":7026,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-07","convention":{"lang":"php","indent":{"tab":462933,"space":1115716,"commits":6663,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2105,"sameline":2074,"commits":711,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57240,"newline":32638,"commits":3311,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7780,"newline":3499,"commits":685,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":40818,"nospace":4587,"commits":2607,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16414,"nospace":60057,"commits":3338,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":180,"nospace":866,"commits":157,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1383,"nospace":6027,"commits":572,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":67,"pascal":2650,"capssnake":14,"snakepascal":193,"snake":217,"uppersnake":5,"commits":631,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":16,"pascal":7,"capssnake":1944,"snakepascal":0,"snake":7,"commits":335,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21085,"pascal":621,"capssnake":3,"snakepascal":38,"snake":7629,"commits":2002,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2415,"staticfirst":286,"abstractlate":20,"abstractfirst":419,"commits":505,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1254731,"char120":104591,"char150":43072,"commits":6998,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-06","convention":{"lang":"php","indent":{"tab":380421,"space":898734,"commits":6652,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1765,"sameline":2092,"commits":691,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48902,"newline":22452,"commits":3178,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8286,"newline":2644,"commits":677,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35897,"nospace":2560,"commits":2450,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16578,"nospace":46481,"commits":3202,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":331,"nospace":1024,"commits":160,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1617,"nospace":5530,"commits":540,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":38,"pascal":1992,"capssnake":3,"snakepascal":364,"snake":282,"uppersnake":7,"commits":642,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":15,"capssnake":2088,"snakepascal":0,"snake":2,"commits":327,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17871,"pascal":380,"capssnake":1,"snakepascal":38,"snake":7931,"commits":1981,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":1950,"staticfirst":183,"abstractlate":23,"abstractfirst":228,"commits":470,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1021115,"char120":79226,"char150":31897,"commits":7024,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-05","convention":{"lang":"php","indent":{"tab":306472,"space":789231,"commits":6556,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1668,"sameline":2015,"commits":651,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":33699,"newline":20075,"commits":3194,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5248,"newline":2007,"commits":675,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23675,"nospace":2496,"commits":2399,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11178,"nospace":35507,"commits":3247,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":119,"nospace":749,"commits":128,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":906,"nospace":3596,"commits":536,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":33,"pascal":2026,"capssnake":19,"snakepascal":520,"snake":164,"uppersnake":5,"commits":606,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":4,"capssnake":1531,"snakepascal":0,"snake":9,"commits":277,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17511,"pascal":521,"capssnake":9,"snakepascal":27,"snake":5843,"commits":1924,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2565,"staticfirst":257,"abstractlate":47,"abstractfirst":296,"commits":503,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":903864,"char120":70687,"char150":27459,"commits":6906,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-04","convention":{"lang":"php","indent":{"tab":423150,"space":967384,"commits":6608,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2022,"sameline":2444,"commits":751,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46309,"newline":17568,"commits":3101,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4386,"newline":3131,"commits":739,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33759,"nospace":3895,"commits":2377,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9225,"nospace":45896,"commits":3110,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":240,"nospace":911,"commits":153,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":878,"nospace":4596,"commits":615,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":133,"pascal":2050,"capssnake":5,"snakepascal":513,"snake":244,"uppersnake":6,"commits":665,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":26,"pascal":14,"capssnake":2244,"snakepascal":0,"snake":23,"commits":326,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23052,"pascal":169,"capssnake":64,"snakepascal":34,"snake":5827,"commits":1937,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3359,"staticfirst":143,"abstractlate":27,"abstractfirst":214,"commits":473,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1068208,"char120":87487,"char150":33408,"commits":6977,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-03","convention":{"lang":"php","indent":{"tab":491851,"space":1019766,"commits":6524,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2362,"sameline":1271,"commits":676,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45411,"newline":30138,"commits":3056,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8105,"newline":3691,"commits":655,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":32095,"nospace":3321,"commits":2196,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":18634,"nospace":47574,"commits":3095,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":279,"nospace":1127,"commits":154,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1520,"nospace":6269,"commits":532,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":179,"pascal":1797,"capssnake":17,"snakepascal":254,"snake":131,"uppersnake":23,"commits":593,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":7,"pascal":16,"capssnake":1923,"snakepascal":0,"snake":47,"commits":322,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17613,"pascal":464,"capssnake":35,"snakepascal":38,"snake":7583,"commits":1900,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2532,"staticfirst":180,"abstractlate":29,"abstractfirst":228,"commits":429,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1171298,"char120":94529,"char150":39664,"commits":6875,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-02","convention":{"lang":"php","indent":{"tab":607635,"space":1233336,"commits":6900,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2942,"sameline":3004,"commits":950,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55460,"newline":38468,"commits":3403,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":9298,"newline":4573,"commits":853,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38443,"nospace":4653,"commits":2303,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":17795,"nospace":61555,"commits":3459,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":385,"nospace":1064,"commits":206,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1020,"nospace":7962,"commits":693,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":105,"pascal":3001,"capssnake":15,"snakepascal":990,"snake":461,"uppersnake":34,"commits":846,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":22,"pascal":11,"capssnake":4871,"snakepascal":0,"snake":16,"commits":387,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24119,"pascal":439,"capssnake":2,"snakepascal":46,"snake":9536,"commits":2366,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3070,"staticfirst":251,"abstractlate":60,"abstractfirst":272,"commits":542,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1389987,"char120":100974,"char150":37788,"commits":7330,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-02-01","convention":{"lang":"php","indent":{"tab":596234,"space":1215585,"commits":6701,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2628,"sameline":1770,"commits":762,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55956,"newline":34658,"commits":3232,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8053,"newline":3274,"commits":790,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39660,"nospace":4505,"commits":2356,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":24485,"nospace":54460,"commits":3268,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":335,"nospace":1298,"commits":196,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1504,"nospace":5726,"commits":648,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":44,"pascal":2028,"capssnake":2,"snakepascal":698,"snake":154,"uppersnake":41,"commits":660,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":25,"pascal":23,"capssnake":3126,"snakepascal":0,"snake":37,"commits":337,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22018,"pascal":828,"capssnake":102,"snakepascal":63,"snake":7764,"commits":2069,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4133,"staticfirst":112,"abstractlate":67,"abstractfirst":188,"commits":451,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1353013,"char120":108343,"char150":51113,"commits":7171,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-31","convention":{"lang":"php","indent":{"tab":406520,"space":906631,"commits":5875,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1955,"sameline":1198,"commits":756,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":38899,"newline":25137,"commits":2783,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6482,"newline":1960,"commits":539,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27801,"nospace":2388,"commits":2051,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":17860,"nospace":37476,"commits":2780,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":112,"nospace":729,"commits":129,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1558,"nospace":3890,"commits":430,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":12,"pascal":1738,"capssnake":1,"snakepascal":196,"snake":213,"uppersnake":6,"commits":647,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":0,"pascal":0,"capssnake":1804,"snakepascal":0,"snake":5,"commits":340,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14676,"pascal":155,"capssnake":2,"snakepascal":42,"snake":7069,"commits":1838,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2790,"staticfirst":61,"abstractlate":76,"abstractfirst":127,"commits":443,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1000281,"char120":84686,"char150":30706,"commits":6190,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-30","convention":{"lang":"php","indent":{"tab":366824,"space":763719,"commits":6401,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1413,"sameline":1388,"commits":686,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":38439,"newline":21729,"commits":3163,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5148,"newline":2406,"commits":648,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27800,"nospace":2276,"commits":2319,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10878,"nospace":39883,"commits":3187,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":103,"nospace":741,"commits":139,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":689,"nospace":4355,"commits":535,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":24,"pascal":1412,"capssnake":8,"snakepascal":280,"snake":124,"uppersnake":6,"commits":554,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":78,"capssnake":2088,"snakepascal":0,"snake":3,"commits":347,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":14042,"pascal":483,"capssnake":0,"snakepascal":55,"snake":4969,"commits":1972,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2224,"staticfirst":162,"abstractlate":35,"abstractfirst":202,"commits":496,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":850544,"char120":72958,"char150":27481,"commits":6773,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-29","convention":{"lang":"php","indent":{"tab":430084,"space":990399,"commits":6628,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2102,"sameline":1553,"commits":766,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":53447,"newline":22338,"commits":3388,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5305,"newline":2452,"commits":719,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":40075,"nospace":3282,"commits":2528,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10977,"nospace":54435,"commits":3410,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":128,"nospace":896,"commits":200,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":751,"nospace":4082,"commits":587,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":63,"pascal":2701,"capssnake":15,"snakepascal":419,"snake":312,"uppersnake":8,"commits":667,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":279,"pascal":13,"capssnake":2620,"snakepascal":0,"snake":23,"commits":372,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17600,"pascal":530,"capssnake":32,"snakepascal":13,"snake":7492,"commits":2148,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3000,"staticfirst":257,"abstractlate":75,"abstractfirst":180,"commits":513,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1092388,"char120":93925,"char150":40698,"commits":6968,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-28","convention":{"lang":"php","indent":{"tab":348897,"space":804866,"commits":6269,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1963,"sameline":2257,"commits":650,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":35741,"newline":22619,"commits":2877,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4571,"newline":1925,"commits":553,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":23323,"nospace":2922,"commits":2086,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12596,"nospace":36533,"commits":2899,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":140,"nospace":509,"commits":113,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":758,"nospace":3445,"commits":453,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":108,"pascal":1405,"capssnake":3,"snakepascal":528,"snake":118,"uppersnake":9,"commits":588,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":11,"pascal":13,"capssnake":1742,"snakepascal":0,"snake":25,"commits":249,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24619,"pascal":235,"capssnake":34,"snakepascal":35,"snake":6432,"commits":1766,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2312,"staticfirst":352,"abstractlate":8,"abstractfirst":123,"commits":461,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":881369,"char120":72998,"char150":32398,"commits":6632,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-27","convention":{"lang":"php","indent":{"tab":406033,"space":970655,"commits":6484,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2002,"sameline":1358,"commits":644,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45151,"newline":31121,"commits":3114,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6227,"newline":2137,"commits":593,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31308,"nospace":2909,"commits":2344,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":17055,"nospace":49158,"commits":3151,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":56,"nospace":580,"commits":156,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1254,"nospace":3594,"commits":476,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":118,"pascal":2312,"capssnake":3,"snakepascal":310,"snake":127,"uppersnake":0,"commits":551,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":1,"capssnake":2402,"snakepascal":1,"snake":0,"commits":333,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17804,"pascal":842,"capssnake":2,"snakepascal":27,"snake":7705,"commits":1936,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2506,"staticfirst":296,"abstractlate":17,"abstractfirst":146,"commits":495,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1079271,"char120":89624,"char150":35281,"commits":6846,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-26","convention":{"lang":"php","indent":{"tab":588601,"space":1186497,"commits":6882,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2940,"sameline":2709,"commits":865,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57107,"newline":32072,"commits":3252,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7843,"newline":2712,"commits":722,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39682,"nospace":5169,"commits":2433,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":17984,"nospace":56657,"commits":3362,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":133,"nospace":884,"commits":186,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1138,"nospace":5636,"commits":585,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":75,"pascal":3633,"capssnake":14,"snakepascal":540,"snake":81,"uppersnake":25,"commits":806,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":11,"capssnake":3181,"snakepascal":0,"snake":48,"commits":365,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26239,"pascal":616,"capssnake":34,"snakepascal":81,"snake":8491,"commits":2238,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3802,"staticfirst":239,"abstractlate":40,"abstractfirst":233,"commits":545,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1357873,"char120":104024,"char150":41893,"commits":7313,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-25","convention":{"lang":"php","indent":{"tab":416738,"space":1049335,"commits":5724,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2719,"sameline":1553,"commits":782,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49288,"newline":27678,"commits":2842,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5835,"newline":3037,"commits":672,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33455,"nospace":3688,"commits":2085,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12298,"nospace":52476,"commits":2874,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":187,"nospace":934,"commits":163,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1034,"nospace":5044,"commits":541,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":91,"pascal":2664,"capssnake":21,"snakepascal":539,"snake":121,"uppersnake":57,"commits":681,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":66,"pascal":15,"capssnake":2315,"snakepascal":0,"snake":29,"commits":316,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24289,"pascal":858,"capssnake":4,"snakepascal":137,"snake":6529,"commits":1901,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2583,"staticfirst":447,"abstractlate":174,"abstractfirst":315,"commits":523,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1184578,"char120":80851,"char150":32718,"commits":6078,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-24","convention":{"lang":"php","indent":{"tab":520220,"space":1086965,"commits":6087,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2139,"sameline":2079,"commits":734,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":72044,"newline":37513,"commits":3092,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6533,"newline":2258,"commits":625,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":51389,"nospace":3915,"commits":2331,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13909,"nospace":71526,"commits":3136,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":64,"nospace":858,"commits":142,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":668,"nospace":5423,"commits":516,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":35,"pascal":2379,"capssnake":1,"snakepascal":442,"snake":247,"uppersnake":3,"commits":659,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":0,"capssnake":2582,"snakepascal":0,"snake":17,"commits":318,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20432,"pascal":596,"capssnake":34,"snakepascal":29,"snake":7401,"commits":1941,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3845,"staticfirst":255,"abstractlate":20,"abstractfirst":140,"commits":509,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1192922,"char120":102436,"char150":40203,"commits":6441,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-23","convention":{"lang":"php","indent":{"tab":381043,"space":972776,"commits":6746,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1559,"sameline":3262,"commits":713,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":43525,"newline":27215,"commits":3322,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5444,"newline":3905,"commits":757,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":28125,"nospace":4042,"commits":2392,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12662,"nospace":47666,"commits":3326,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":95,"nospace":1047,"commits":159,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1344,"nospace":5120,"commits":637,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":58,"pascal":2164,"capssnake":33,"snakepascal":408,"snake":318,"uppersnake":9,"commits":656,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":5,"pascal":0,"capssnake":2570,"snakepascal":0,"snake":47,"commits":368,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26041,"pascal":310,"capssnake":1,"snakepascal":45,"snake":6814,"commits":2073,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2743,"staticfirst":108,"abstractlate":34,"abstractfirst":161,"commits":512,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1123251,"char120":86588,"char150":35007,"commits":7164,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-22","convention":{"lang":"php","indent":{"tab":412675,"space":956446,"commits":6269,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1929,"sameline":1572,"commits":751,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56048,"newline":25301,"commits":3065,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6459,"newline":1987,"commits":644,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38571,"nospace":4433,"commits":2383,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11736,"nospace":59234,"commits":3135,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":86,"nospace":875,"commits":148,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":560,"nospace":5257,"commits":534,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":23,"pascal":2288,"capssnake":10,"snakepascal":320,"snake":199,"uppersnake":1,"commits":650,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":23,"pascal":1,"capssnake":2441,"snakepascal":0,"snake":28,"commits":312,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17587,"pascal":989,"capssnake":97,"snakepascal":24,"snake":5931,"commits":1980,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3788,"staticfirst":274,"abstractlate":162,"abstractfirst":154,"commits":497,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1086930,"char120":91479,"char150":35934,"commits":6649,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-21","convention":{"lang":"php","indent":{"tab":545235,"space":1223303,"commits":6582,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2889,"sameline":2100,"commits":764,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":59474,"newline":31222,"commits":3282,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6067,"newline":4896,"commits":757,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":41830,"nospace":5038,"commits":2432,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":15088,"nospace":63341,"commits":3311,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":128,"nospace":947,"commits":184,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1523,"nospace":5635,"commits":605,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":51,"pascal":3032,"capssnake":8,"snakepascal":766,"snake":213,"uppersnake":3,"commits":676,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":7,"pascal":1,"capssnake":2552,"snakepascal":1,"snake":14,"commits":368,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26130,"pascal":341,"capssnake":2,"snakepascal":28,"snake":9134,"commits":1977,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3269,"staticfirst":223,"abstractlate":58,"abstractfirst":322,"commits":566,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1391627,"char120":101278,"char150":37194,"commits":6982,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-20","convention":{"lang":"php","indent":{"tab":363559,"space":1064007,"commits":6518,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2599,"sameline":3321,"commits":704,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49395,"newline":24463,"commits":3282,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5412,"newline":2161,"commits":755,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33933,"nospace":3685,"commits":2426,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11310,"nospace":52332,"commits":3298,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":55,"nospace":624,"commits":159,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":994,"nospace":4239,"commits":614,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":109,"pascal":2263,"capssnake":5,"snakepascal":1103,"snake":79,"uppersnake":11,"commits":603,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":9,"capssnake":1677,"snakepascal":0,"snake":49,"commits":330,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":30177,"pascal":539,"capssnake":4,"snakepascal":18,"snake":5542,"commits":1994,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2758,"staticfirst":86,"abstractlate":92,"abstractfirst":230,"commits":507,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1170466,"char120":90035,"char150":30806,"commits":6898,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-19","convention":{"lang":"php","indent":{"tab":396825,"space":1112511,"commits":6778,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2882,"sameline":1968,"commits":871,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":51146,"newline":26806,"commits":3290,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5542,"newline":4173,"commits":805,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33491,"nospace":4158,"commits":2553,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8283,"nospace":57361,"commits":3369,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":247,"nospace":894,"commits":177,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":725,"nospace":5837,"commits":640,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":141,"pascal":2242,"capssnake":8,"snakepascal":870,"snake":139,"uppersnake":5,"commits":687,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":4,"pascal":0,"capssnake":2689,"snakepascal":0,"snake":26,"commits":345,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21315,"pascal":704,"capssnake":4,"snakepascal":10,"snake":7281,"commits":2157,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3102,"staticfirst":253,"abstractlate":112,"abstractfirst":305,"commits":507,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1248305,"char120":90758,"char150":30718,"commits":7198,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-18","convention":{"lang":"php","indent":{"tab":503376,"space":1053338,"commits":6682,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2877,"sameline":1804,"commits":822,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46391,"newline":30859,"commits":3321,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7547,"newline":3695,"commits":812,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31206,"nospace":4437,"commits":2369,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12282,"nospace":54437,"commits":3387,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":34,"nospace":1386,"commits":209,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1152,"nospace":5789,"commits":647,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":62,"pascal":2933,"capssnake":9,"snakepascal":277,"snake":190,"uppersnake":11,"commits":700,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":10,"capssnake":2068,"snakepascal":0,"snake":16,"commits":327,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20620,"pascal":810,"capssnake":4,"snakepascal":25,"snake":7572,"commits":2101,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2740,"staticfirst":198,"abstractlate":29,"abstractfirst":181,"commits":425,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1200568,"char120":92850,"char150":31805,"commits":7148,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-17","convention":{"lang":"php","indent":{"tab":408415,"space":968305,"commits":6548,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2156,"sameline":1211,"commits":764,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":48495,"newline":20787,"commits":3310,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4729,"newline":2063,"commits":698,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35289,"nospace":2926,"commits":2370,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11343,"nospace":48376,"commits":3320,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":275,"nospace":848,"commits":124,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1025,"nospace":3434,"commits":568,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":120,"pascal":1995,"capssnake":2,"snakepascal":300,"snake":172,"uppersnake":12,"commits":656,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":19,"pascal":41,"capssnake":2170,"snakepascal":1,"snake":20,"commits":333,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19137,"pascal":705,"capssnake":38,"snakepascal":42,"snake":6404,"commits":2024,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3183,"staticfirst":201,"abstractlate":223,"abstractfirst":620,"commits":454,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1070365,"char120":85051,"char150":36374,"commits":6999,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-16","convention":{"lang":"php","indent":{"tab":356968,"space":757085,"commits":6583,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1532,"sameline":1156,"commits":642,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":39300,"newline":20081,"commits":3211,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4244,"newline":1115,"commits":697,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26144,"nospace":4250,"commits":2324,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10612,"nospace":40081,"commits":3254,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":192,"nospace":727,"commits":144,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":733,"nospace":2784,"commits":578,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":60,"pascal":1909,"capssnake":3,"snakepascal":272,"snake":161,"uppersnake":4,"commits":582,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":15,"capssnake":1958,"snakepascal":0,"snake":10,"commits":256,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":13427,"pascal":298,"capssnake":0,"snakepascal":16,"snake":5163,"commits":1929,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2602,"staticfirst":85,"abstractlate":60,"abstractfirst":227,"commits":368,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":820756,"char120":77669,"char150":34436,"commits":6965,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-15","convention":{"lang":"php","indent":{"tab":426123,"space":885369,"commits":6419,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1570,"sameline":1553,"commits":670,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":38316,"newline":29180,"commits":3145,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3691,"newline":3666,"commits":653,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26789,"nospace":3022,"commits":2394,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8309,"nospace":50261,"commits":3175,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":90,"nospace":604,"commits":176,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":547,"nospace":4453,"commits":558,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":21,"pascal":1387,"capssnake":10,"snakepascal":316,"snake":208,"uppersnake":3,"commits":583,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":3,"pascal":2,"capssnake":1532,"snakepascal":0,"snake":9,"commits":313,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17713,"pascal":209,"capssnake":3,"snakepascal":10,"snake":5306,"commits":1906,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2087,"staticfirst":177,"abstractlate":14,"abstractfirst":162,"commits":471,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":985175,"char120":81185,"char150":30594,"commits":6794,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-14","convention":{"lang":"php","indent":{"tab":410260,"space":937448,"commits":7039,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2411,"sameline":1770,"commits":755,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":43094,"newline":23996,"commits":3417,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3552,"newline":2161,"commits":686,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":30283,"nospace":2887,"commits":2671,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9556,"nospace":47742,"commits":3419,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":62,"nospace":475,"commits":155,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":866,"nospace":3182,"commits":563,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":70,"pascal":2348,"capssnake":3,"snakepascal":351,"snake":147,"uppersnake":1,"commits":663,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":24,"pascal":2,"capssnake":1668,"snakepascal":0,"snake":11,"commits":337,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23550,"pascal":750,"capssnake":32,"snakepascal":2,"snake":4629,"commits":2114,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2461,"staticfirst":199,"abstractlate":49,"abstractfirst":219,"commits":512,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1032982,"char120":92026,"char150":37668,"commits":7474,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-13","convention":{"lang":"php","indent":{"tab":470244,"space":1114106,"commits":6574,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3049,"sameline":1562,"commits":834,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":50444,"newline":19568,"commits":3130,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4991,"newline":1318,"commits":650,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37263,"nospace":2866,"commits":2412,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":4985,"nospace":53196,"commits":3146,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":107,"nospace":761,"commits":158,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":489,"nospace":3600,"commits":519,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":131,"pascal":3024,"capssnake":4,"snakepascal":219,"snake":348,"uppersnake":4,"commits":731,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":29,"pascal":52,"capssnake":3640,"snakepascal":0,"snake":44,"commits":309,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":31091,"pascal":349,"capssnake":96,"snakepascal":30,"snake":4530,"commits":2031,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4579,"staticfirst":170,"abstractlate":50,"abstractfirst":202,"commits":474,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1274548,"char120":96588,"char150":34241,"commits":6959,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-12","convention":{"lang":"php","indent":{"tab":534128,"space":1092132,"commits":7381,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1667,"sameline":2290,"commits":848,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46578,"newline":31241,"commits":3549,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5098,"newline":5936,"commits":815,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":31835,"nospace":5538,"commits":2709,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10984,"nospace":55047,"commits":3604,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":285,"nospace":932,"commits":194,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1887,"nospace":5687,"commits":665,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":109,"pascal":1717,"capssnake":9,"snakepascal":351,"snake":566,"uppersnake":19,"commits":711,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":18,"pascal":2,"capssnake":2347,"snakepascal":0,"snake":39,"commits":346,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":17308,"pascal":856,"capssnake":32,"snakepascal":54,"snake":10055,"commits":2215,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2751,"staticfirst":117,"abstractlate":33,"abstractfirst":224,"commits":490,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1203784,"char120":94656,"char150":38169,"commits":7906,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-11","convention":{"lang":"php","indent":{"tab":445512,"space":1246836,"commits":6863,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3216,"sameline":2000,"commits":891,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56394,"newline":30570,"commits":3379,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7129,"newline":3385,"commits":797,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39322,"nospace":4777,"commits":2562,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8817,"nospace":63991,"commits":3436,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":50,"nospace":955,"commits":220,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":823,"nospace":6227,"commits":665,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":89,"pascal":3036,"capssnake":8,"snakepascal":369,"snake":279,"uppersnake":4,"commits":723,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":62,"capssnake":2575,"snakepascal":0,"snake":19,"commits":356,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":28374,"pascal":1356,"capssnake":1,"snakepascal":15,"snake":7780,"commits":2218,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3013,"staticfirst":225,"abstractlate":190,"abstractfirst":596,"commits":558,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1414138,"char120":104579,"char150":40608,"commits":7352,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-10","convention":{"lang":"php","indent":{"tab":360739,"space":914055,"commits":5659,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2113,"sameline":1354,"commits":680,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":45018,"newline":22198,"commits":2802,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5123,"newline":2723,"commits":611,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":30931,"nospace":2921,"commits":2161,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9353,"nospace":44156,"commits":2819,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":35,"nospace":592,"commits":124,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":727,"nospace":4539,"commits":469,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":56,"pascal":1740,"capssnake":6,"snakepascal":347,"snake":294,"uppersnake":17,"commits":612,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":103,"pascal":50,"capssnake":2080,"snakepascal":3,"snake":17,"commits":227,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":15169,"pascal":287,"capssnake":33,"snakepascal":6,"snake":6801,"commits":1805,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2444,"staticfirst":146,"abstractlate":47,"abstractfirst":223,"commits":413,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1017359,"char120":75226,"char150":28224,"commits":6077,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-09","convention":{"lang":"php","indent":{"tab":369856,"space":933541,"commits":6136,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2161,"sameline":1285,"commits":703,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49411,"newline":20045,"commits":3006,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4542,"newline":1768,"commits":652,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36469,"nospace":2475,"commits":2236,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10759,"nospace":47722,"commits":3057,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":99,"nospace":435,"commits":135,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":860,"nospace":3176,"commits":559,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":55,"pascal":2091,"capssnake":9,"snakepascal":264,"snake":173,"uppersnake":15,"commits":599,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":23,"pascal":1,"capssnake":2291,"snakepascal":0,"snake":47,"commits":281,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19309,"pascal":246,"capssnake":67,"snakepascal":10,"snake":6116,"commits":1904,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3086,"staticfirst":128,"abstractlate":47,"abstractfirst":211,"commits":424,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1024113,"char120":84495,"char150":33523,"commits":6509,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-08","convention":{"lang":"php","indent":{"tab":593874,"space":1343854,"commits":6995,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2601,"sameline":2381,"commits":737,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":57755,"newline":38343,"commits":3394,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7282,"newline":7081,"commits":689,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39666,"nospace":4434,"commits":2440,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16453,"nospace":64901,"commits":3388,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":102,"nospace":807,"commits":154,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1020,"nospace":8674,"commits":572,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":41,"pascal":1859,"capssnake":13,"snakepascal":922,"snake":174,"uppersnake":12,"commits":621,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":0,"capssnake":2694,"snakepascal":0,"snake":10,"commits":364,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24636,"pascal":471,"capssnake":1,"snakepascal":33,"snake":10020,"commits":2069,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3085,"staticfirst":262,"abstractlate":36,"abstractfirst":205,"commits":457,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1520794,"char120":113339,"char150":46414,"commits":7383,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-07","convention":{"lang":"php","indent":{"tab":478987,"space":1005354,"commits":6683,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1547,"sameline":1478,"commits":684,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":53681,"newline":31647,"commits":3232,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":10100,"newline":1927,"commits":628,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38061,"nospace":3127,"commits":2415,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16305,"nospace":57267,"commits":3232,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":346,"nospace":1611,"commits":161,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1046,"nospace":6611,"commits":520,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":74,"pascal":1718,"capssnake":9,"snakepascal":359,"snake":140,"uppersnake":12,"commits":567,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":10,"capssnake":2195,"snakepascal":0,"snake":19,"commits":321,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":15542,"pascal":260,"capssnake":50,"snakepascal":25,"snake":9671,"commits":1930,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2763,"staticfirst":129,"abstractlate":37,"abstractfirst":154,"commits":482,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1132264,"char120":90827,"char150":36958,"commits":7080,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-06","convention":{"lang":"php","indent":{"tab":404803,"space":1115192,"commits":6128,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2823,"sameline":1783,"commits":708,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":50901,"newline":23587,"commits":3033,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3764,"newline":2711,"commits":665,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37071,"nospace":4033,"commits":2257,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":6662,"nospace":57435,"commits":3054,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":79,"nospace":770,"commits":164,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":465,"nospace":4029,"commits":538,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":52,"pascal":2631,"capssnake":4,"snakepascal":764,"snake":155,"uppersnake":5,"commits":607,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":38,"pascal":10,"capssnake":3107,"snakepascal":0,"snake":52,"commits":321,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26270,"pascal":414,"capssnake":92,"snakepascal":13,"snake":6692,"commits":1890,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3455,"staticfirst":259,"abstractlate":35,"abstractfirst":315,"commits":467,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1234789,"char120":98213,"char150":37528,"commits":6509,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-05","convention":{"lang":"php","indent":{"tab":1013582,"space":1792324,"commits":7628,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2816,"sameline":3115,"commits":995,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":93818,"newline":74658,"commits":3742,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":23582,"newline":6320,"commits":905,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":69424,"nospace":3835,"commits":2722,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":56007,"nospace":89735,"commits":3768,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":678,"nospace":1013,"commits":278,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":3867,"nospace":14616,"commits":730,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":198,"pascal":3310,"capssnake":11,"snakepascal":631,"snake":177,"uppersnake":3,"commits":881,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":21,"pascal":3,"capssnake":3477,"snakepascal":0,"snake":12,"commits":451,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26431,"pascal":927,"capssnake":6,"snakepascal":116,"snake":20602,"commits":2521,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3482,"staticfirst":254,"abstractlate":148,"abstractfirst":431,"commits":570,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":2087080,"char120":148549,"char150":63100,"commits":8084,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-04","convention":{"lang":"php","indent":{"tab":841154,"space":1636566,"commits":6866,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3187,"sameline":3569,"commits":839,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":71379,"newline":47985,"commits":3285,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7579,"newline":9194,"commits":873,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":49458,"nospace":4470,"commits":2405,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":15503,"nospace":82536,"commits":3330,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":189,"nospace":1017,"commits":236,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1482,"nospace":9642,"commits":690,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":145,"pascal":3800,"capssnake":19,"snakepascal":804,"snake":65,"uppersnake":15,"commits":735,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":22,"pascal":25,"capssnake":3379,"snakepascal":0,"snake":4,"commits":367,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":42658,"pascal":589,"capssnake":7,"snakepascal":27,"snake":10980,"commits":2197,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4048,"staticfirst":113,"abstractlate":70,"abstractfirst":445,"commits":442,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1902805,"char120":124652,"char150":41843,"commits":7286,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-03","convention":{"lang":"php","indent":{"tab":488589,"space":1142787,"commits":6390,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2367,"sameline":2525,"commits":744,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":53586,"newline":26789,"commits":3129,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8677,"newline":2096,"commits":737,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36614,"nospace":4217,"commits":2428,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":18523,"nospace":51481,"commits":3148,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":92,"nospace":760,"commits":169,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1709,"nospace":5224,"commits":581,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":78,"pascal":2389,"capssnake":4,"snakepascal":720,"snake":92,"uppersnake":12,"commits":638,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":8,"pascal":5,"capssnake":3052,"snakepascal":4,"snake":66,"commits":295,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":26199,"pascal":892,"capssnake":33,"snakepascal":30,"snake":8976,"commits":1986,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4071,"staticfirst":90,"abstractlate":40,"abstractfirst":663,"commits":464,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1283319,"char120":98384,"char150":35782,"commits":6785,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-02","convention":{"lang":"php","indent":{"tab":510066,"space":1215442,"commits":7064,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2391,"sameline":1900,"commits":824,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":62031,"newline":37897,"commits":3289,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":10004,"newline":3137,"commits":685,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":41158,"nospace":4408,"commits":2513,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":20006,"nospace":63577,"commits":3330,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":3630,"nospace":1330,"commits":148,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1080,"nospace":9179,"commits":560,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":206,"pascal":2350,"capssnake":19,"snakepascal":477,"snake":223,"uppersnake":2,"commits":724,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":11,"capssnake":2509,"snakepascal":8,"snake":150,"commits":313,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25442,"pascal":555,"capssnake":1,"snakepascal":41,"snake":11213,"commits":2173,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2763,"staticfirst":238,"abstractlate":41,"abstractfirst":653,"commits":518,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1380457,"char120":115795,"char150":42916,"commits":7418,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2014-01-01","convention":{"lang":"php","indent":{"tab":699226,"space":1631042,"commits":6136,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3031,"sameline":2857,"commits":712,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":70726,"newline":45220,"commits":3077,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8988,"newline":7162,"commits":726,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":45902,"nospace":7190,"commits":2334,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16154,"nospace":78814,"commits":3104,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":122,"nospace":988,"commits":215,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1196,"nospace":9472,"commits":604,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":251,"pascal":3174,"capssnake":20,"snakepascal":310,"snake":124,"uppersnake":7,"commits":619,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":21,"pascal":13,"capssnake":3951,"snakepascal":0,"snake":14,"commits":377,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":34944,"pascal":589,"capssnake":37,"snakepascal":44,"snake":10350,"commits":1905,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4828,"staticfirst":550,"abstractlate":289,"abstractfirst":450,"commits":459,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1818943,"char120":139970,"char150":48255,"commits":6590,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-31","convention":{"lang":"php","indent":{"tab":827037,"space":1791962,"commits":7758,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3618,"sameline":5094,"commits":1021,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":89112,"newline":47993,"commits":3875,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":10252,"newline":6604,"commits":1119,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":58536,"nospace":8287,"commits":2986,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":18993,"nospace":90851,"commits":3948,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":87,"nospace":1409,"commits":290,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1430,"nospace":9340,"commits":833,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":83,"pascal":3603,"capssnake":34,"snakepascal":1088,"snake":160,"uppersnake":44,"commits":886,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":13,"pascal":2,"capssnake":3731,"snakepascal":1,"snake":25,"commits":574,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":46837,"pascal":548,"capssnake":42,"snakepascal":44,"snake":16159,"commits":2716,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":6108,"staticfirst":233,"abstractlate":589,"abstractfirst":539,"commits":651,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":2039328,"char120":146264,"char150":57393,"commits":8338,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-30","convention":{"lang":"php","indent":{"tab":618632,"space":1521181,"commits":8038,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":4190,"sameline":2493,"commits":1009,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":74444,"newline":39530,"commits":3828,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7832,"newline":5642,"commits":825,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":49873,"nospace":5668,"commits":2899,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16605,"nospace":81499,"commits":3881,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":163,"nospace":589,"commits":199,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1334,"nospace":7577,"commits":672,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":278,"pascal":4034,"capssnake":3,"snakepascal":726,"snake":123,"uppersnake":7,"commits":891,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":36,"capssnake":3541,"snakepascal":0,"snake":15,"commits":352,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":32197,"pascal":1071,"capssnake":36,"snakepascal":33,"snake":7995,"commits":2520,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4484,"staticfirst":395,"abstractlate":101,"abstractfirst":411,"commits":616,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1723960,"char120":126619,"char150":52002,"commits":8493,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-29","convention":{"lang":"php","indent":{"tab":556413,"space":1330479,"commits":6818,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3102,"sameline":2116,"commits":885,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55847,"newline":34665,"commits":3371,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5577,"newline":7407,"commits":825,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39498,"nospace":4705,"commits":2569,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10209,"nospace":66596,"commits":3437,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":175,"nospace":988,"commits":214,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1081,"nospace":7638,"commits":681,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":82,"pascal":2883,"capssnake":7,"snakepascal":639,"snake":131,"uppersnake":4,"commits":780,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":22,"pascal":30,"capssnake":3557,"snakepascal":0,"snake":10,"commits":365,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25473,"pascal":432,"capssnake":32,"snakepascal":17,"snake":9691,"commits":2283,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3867,"staticfirst":152,"abstractlate":126,"abstractfirst":257,"commits":541,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1504287,"char120":105120,"char150":39727,"commits":7185,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-28","convention":{"lang":"php","indent":{"tab":606231,"space":1377557,"commits":6776,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2932,"sameline":2651,"commits":850,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":67156,"newline":43486,"commits":3130,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6664,"newline":5565,"commits":722,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":47347,"nospace":3574,"commits":2280,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13305,"nospace":72336,"commits":3145,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":95,"nospace":880,"commits":174,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1177,"nospace":6987,"commits":604,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":125,"pascal":2515,"capssnake":16,"snakepascal":417,"snake":161,"uppersnake":10,"commits":712,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":8,"capssnake":7282,"snakepascal":0,"snake":54,"commits":318,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25727,"pascal":514,"capssnake":3,"snakepascal":46,"snake":8993,"commits":2084,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4729,"staticfirst":193,"abstractlate":70,"abstractfirst":431,"commits":527,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1560334,"char120":117462,"char150":45679,"commits":7215,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-27","convention":{"lang":"php","indent":{"tab":554488,"space":1404300,"commits":5909,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":4071,"sameline":2136,"commits":759,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":59864,"newline":36521,"commits":2819,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7530,"newline":4445,"commits":675,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":41560,"nospace":5205,"commits":2171,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12476,"nospace":65298,"commits":2846,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":1226,"nospace":1117,"commits":209,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":873,"nospace":8339,"commits":520,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":110,"pascal":3471,"capssnake":6,"snakepascal":643,"snake":152,"uppersnake":12,"commits":658,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":10,"pascal":0,"capssnake":3611,"snakepascal":0,"snake":1,"commits":282,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":33968,"pascal":595,"capssnake":0,"snakepascal":26,"snake":8879,"commits":1912,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3203,"staticfirst":248,"abstractlate":46,"abstractfirst":428,"commits":405,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1592508,"char120":104767,"char150":36480,"commits":6242,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-26","convention":{"lang":"php","indent":{"tab":696936,"space":1666731,"commits":7503,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":4283,"sameline":2821,"commits":1080,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":70655,"newline":48580,"commits":3668,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8029,"newline":8001,"commits":864,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":42504,"nospace":9075,"commits":2809,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9963,"nospace":88387,"commits":3747,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":92,"nospace":1845,"commits":245,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":666,"nospace":10253,"commits":657,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":224,"pascal":3953,"capssnake":20,"snakepascal":620,"snake":202,"uppersnake":37,"commits":980,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":2,"pascal":22,"capssnake":3466,"snakepascal":0,"snake":23,"commits":412,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":33567,"pascal":1207,"capssnake":16,"snakepascal":22,"snake":10883,"commits":2634,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3425,"staticfirst":359,"abstractlate":56,"abstractfirst":414,"commits":602,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1884948,"char120":126319,"char150":45605,"commits":7956,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-25","convention":{"lang":"php","indent":{"tab":657601,"space":1587548,"commits":6243,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3538,"sameline":2861,"commits":913,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":84094,"newline":39108,"commits":3031,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7315,"newline":5067,"commits":766,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":61334,"nospace":6452,"commits":2221,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13455,"nospace":86876,"commits":3087,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":101,"nospace":1241,"commits":234,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":888,"nospace":7231,"commits":619,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":54,"pascal":3830,"capssnake":17,"snakepascal":640,"snake":58,"uppersnake":13,"commits":787,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":13,"capssnake":3518,"snakepascal":0,"snake":31,"commits":371,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":28467,"pascal":673,"capssnake":77,"snakepascal":30,"snake":8021,"commits":2170,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":5275,"staticfirst":179,"abstractlate":62,"abstractfirst":445,"commits":469,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1747664,"char120":128829,"char150":48151,"commits":6604,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-24","convention":{"lang":"php","indent":{"tab":474303,"space":1184404,"commits":6631,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3084,"sameline":1651,"commits":870,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56384,"newline":29498,"commits":3258,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5698,"newline":2798,"commits":771,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":36080,"nospace":6639,"commits":2410,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7412,"nospace":61113,"commits":3335,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":74,"nospace":1211,"commits":185,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":566,"nospace":5033,"commits":590,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":100,"pascal":2726,"capssnake":21,"snakepascal":350,"snake":264,"uppersnake":8,"commits":797,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":23,"pascal":18,"capssnake":3635,"snakepascal":0,"snake":47,"commits":357,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25338,"pascal":513,"capssnake":67,"snakepascal":12,"snake":6725,"commits":2149,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4098,"staticfirst":206,"abstractlate":87,"abstractfirst":225,"commits":487,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1316710,"char120":104886,"char150":33479,"commits":7051,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-23","convention":{"lang":"php","indent":{"tab":439833,"space":1155035,"commits":7199,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3050,"sameline":2024,"commits":896,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":58949,"newline":27497,"commits":3495,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4716,"newline":3362,"commits":767,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38749,"nospace":5206,"commits":2601,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7244,"nospace":63692,"commits":3576,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":95,"nospace":1034,"commits":196,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":659,"nospace":4983,"commits":599,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":64,"pascal":2756,"capssnake":15,"snakepascal":576,"snake":222,"uppersnake":9,"commits":783,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":14,"pascal":1,"capssnake":2745,"snakepascal":0,"snake":29,"commits":339,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23072,"pascal":829,"capssnake":1,"snakepascal":9,"snake":6576,"commits":2206,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3780,"staticfirst":309,"abstractlate":81,"abstractfirst":349,"commits":528,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1331270,"char120":101592,"char150":44798,"commits":7681,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-22","convention":{"lang":"php","indent":{"tab":581938,"space":1332980,"commits":7270,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3104,"sameline":2635,"commits":886,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":60896,"newline":31196,"commits":3480,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6732,"newline":4458,"commits":799,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37655,"nospace":8106,"commits":2609,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12845,"nospace":65073,"commits":3601,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":130,"nospace":2264,"commits":220,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1101,"nospace":6107,"commits":620,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":168,"pascal":2745,"capssnake":23,"snakepascal":510,"snake":581,"uppersnake":18,"commits":797,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":17,"pascal":16,"capssnake":3638,"snakepascal":0,"snake":63,"commits":374,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23350,"pascal":1373,"capssnake":56,"snakepascal":34,"snake":7850,"commits":2178,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4148,"staticfirst":307,"abstractlate":33,"abstractfirst":425,"commits":583,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1486410,"char120":115047,"char150":47329,"commits":7637,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-21","convention":{"lang":"php","indent":{"tab":616983,"space":1286465,"commits":6441,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2843,"sameline":2049,"commits":812,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":54970,"newline":35348,"commits":3039,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6366,"newline":5025,"commits":768,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37003,"nospace":5956,"commits":2308,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13529,"nospace":63479,"commits":3153,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":80,"nospace":1182,"commits":214,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":955,"nospace":6091,"commits":595,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":142,"pascal":2824,"capssnake":10,"snakepascal":518,"snake":97,"uppersnake":3,"commits":694,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":29,"pascal":4,"capssnake":2828,"snakepascal":0,"snake":37,"commits":323,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23843,"pascal":787,"capssnake":72,"snakepascal":11,"snake":7559,"commits":2019,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4073,"staticfirst":140,"abstractlate":69,"abstractfirst":323,"commits":459,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1464228,"char120":111315,"char150":37680,"commits":6821,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-20","convention":{"lang":"php","indent":{"tab":533810,"space":1129417,"commits":6181,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2352,"sameline":2412,"commits":729,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56925,"newline":30603,"commits":2867,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":7988,"newline":3364,"commits":588,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":38424,"nospace":3191,"commits":2237,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16238,"nospace":58212,"commits":2898,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":262,"nospace":1451,"commits":126,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1947,"nospace":5224,"commits":489,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":86,"pascal":2808,"capssnake":6,"snakepascal":418,"snake":99,"uppersnake":1,"commits":571,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":6,"capssnake":2180,"snakepascal":0,"snake":2,"commits":309,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":23340,"pascal":707,"capssnake":1,"snakepascal":20,"snake":8643,"commits":1867,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3982,"staticfirst":195,"abstractlate":74,"abstractfirst":288,"commits":495,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1253194,"char120":100473,"char150":39014,"commits":6475,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-19","convention":{"lang":"php","indent":{"tab":433177,"space":1059294,"commits":6917,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2386,"sameline":1775,"commits":765,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":52290,"newline":24152,"commits":3347,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4424,"newline":2219,"commits":680,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34173,"nospace":3816,"commits":2505,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8319,"nospace":55700,"commits":3381,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":88,"nospace":556,"commits":150,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":491,"nospace":4043,"commits":560,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":113,"pascal":2154,"capssnake":4,"snakepascal":519,"snake":104,"uppersnake":21,"commits":674,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":30,"pascal":5,"capssnake":2590,"snakepascal":1,"snake":29,"commits":356,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":21146,"pascal":865,"capssnake":73,"snakepascal":5,"snake":5806,"commits":2148,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4399,"staticfirst":283,"abstractlate":29,"abstractfirst":323,"commits":607,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1182704,"char120":94335,"char150":33402,"commits":7218,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-18","convention":{"lang":"php","indent":{"tab":470081,"space":920112,"commits":4926,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1870,"sameline":1532,"commits":554,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46549,"newline":21522,"commits":2376,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":2752,"newline":3734,"commits":523,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33473,"nospace":2827,"commits":1818,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5355,"nospace":51647,"commits":2410,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":254,"nospace":550,"commits":120,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":443,"nospace":4162,"commits":421,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":127,"pascal":1673,"capssnake":9,"snakepascal":270,"snake":241,"uppersnake":16,"commits":501,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":47,"pascal":17,"capssnake":2245,"snakepascal":4,"snake":65,"commits":228,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":16737,"pascal":828,"capssnake":162,"snakepascal":13,"snake":5271,"commits":1526,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3997,"staticfirst":88,"abstractlate":43,"abstractfirst":190,"commits":393,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1024421,"char120":82922,"char150":27895,"commits":5209,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-17","convention":{"lang":"php","indent":{"tab":514570,"space":1059493,"commits":6249,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2064,"sameline":1539,"commits":684,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":50904,"newline":30969,"commits":3133,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5855,"newline":2913,"commits":627,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33769,"nospace":5254,"commits":2339,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11710,"nospace":57125,"commits":3205,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":73,"nospace":899,"commits":161,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":912,"nospace":4665,"commits":480,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":59,"pascal":2043,"capssnake":5,"snakepascal":596,"snake":103,"uppersnake":11,"commits":598,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":13,"pascal":9,"capssnake":2397,"snakepascal":16,"snake":8,"commits":305,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19698,"pascal":679,"capssnake":65,"snakepascal":34,"snake":6726,"commits":1932,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3614,"staticfirst":103,"abstractlate":70,"abstractfirst":390,"commits":511,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1176000,"char120":91135,"char150":31752,"commits":6636,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-16","convention":{"lang":"php","indent":{"tab":376955,"space":1112292,"commits":7947,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3408,"sameline":1943,"commits":894,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":52698,"newline":24581,"commits":3991,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3740,"newline":2319,"commits":728,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":35244,"nospace":4442,"commits":2960,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7486,"nospace":57147,"commits":3976,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":104,"nospace":401,"commits":144,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":420,"nospace":3913,"commits":570,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":116,"pascal":3380,"capssnake":3,"snakepascal":480,"snake":181,"uppersnake":7,"commits":808,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":72,"pascal":0,"capssnake":5598,"snakepascal":0,"snake":5,"commits":423,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":25872,"pascal":930,"capssnake":31,"snakepascal":7,"snake":4625,"commits":2421,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4112,"staticfirst":336,"abstractlate":82,"abstractfirst":178,"commits":704,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1227992,"char120":98051,"char150":33821,"commits":8419,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-15","convention":{"lang":"php","indent":{"tab":488911,"space":1153368,"commits":6953,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2892,"sameline":2860,"commits":848,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":51339,"newline":30387,"commits":3458,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5478,"newline":2731,"commits":801,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":34841,"nospace":4297,"commits":2556,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7966,"nospace":61431,"commits":3528,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":532,"nospace":1005,"commits":201,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":748,"nospace":4896,"commits":609,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":92,"pascal":3222,"capssnake":5,"snakepascal":1173,"snake":146,"uppersnake":8,"commits":712,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":16,"capssnake":2436,"snakepascal":0,"snake":31,"commits":371,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":27658,"pascal":696,"capssnake":8,"snakepascal":1,"snake":6379,"commits":2207,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4103,"staticfirst":228,"abstractlate":20,"abstractfirst":482,"commits":539,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1309182,"char120":95578,"char150":34183,"commits":7315,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-14","convention":{"lang":"php","indent":{"tab":552657,"space":1310976,"commits":6671,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":3036,"sameline":2781,"commits":947,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":53945,"newline":30892,"commits":3275,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6454,"newline":3261,"commits":782,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":37504,"nospace":4133,"commits":2487,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9805,"nospace":62003,"commits":3301,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":125,"nospace":974,"commits":204,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":891,"nospace":5601,"commits":625,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":147,"pascal":3653,"capssnake":6,"snakepascal":849,"snake":81,"uppersnake":9,"commits":814,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":6,"pascal":69,"capssnake":2882,"snakepascal":4,"snake":25,"commits":358,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":29442,"pascal":1008,"capssnake":37,"snakepascal":14,"snake":6358,"commits":2255,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3763,"staticfirst":181,"abstractlate":18,"abstractfirst":233,"commits":530,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1461384,"char120":107427,"char150":36131,"commits":7069,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-13","convention":{"lang":"php","indent":{"tab":372663,"space":853363,"commits":5209,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1708,"sameline":1872,"commits":523,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":46022,"newline":21964,"commits":2548,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6138,"newline":2468,"commits":534,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":32321,"nospace":3118,"commits":1881,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11575,"nospace":46094,"commits":2582,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":85,"nospace":432,"commits":116,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1756,"nospace":3493,"commits":449,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":107,"pascal":1749,"capssnake":2,"snakepascal":219,"snake":254,"uppersnake":3,"commits":429,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":25,"pascal":1,"capssnake":2400,"snakepascal":0,"snake":22,"commits":275,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18468,"pascal":313,"capssnake":65,"snakepascal":9,"snake":6987,"commits":1543,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3233,"staticfirst":180,"abstractlate":13,"abstractfirst":248,"commits":389,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":934464,"char120":74742,"char150":28253,"commits":5511,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-12","convention":{"lang":"php","indent":{"tab":345398,"space":909206,"commits":6398,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2351,"sameline":1196,"commits":624,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":41084,"newline":24355,"commits":3120,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4616,"newline":3846,"commits":671,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":29072,"nospace":3827,"commits":2312,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12177,"nospace":43216,"commits":3174,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":68,"nospace":720,"commits":153,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1144,"nospace":4326,"commits":544,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":84,"pascal":2392,"capssnake":5,"snakepascal":201,"snake":59,"uppersnake":9,"commits":615,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":9,"pascal":3,"capssnake":1899,"snakepascal":0,"snake":3,"commits":297,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":15461,"pascal":461,"capssnake":2,"snakepascal":9,"snake":7284,"commits":1882,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2632,"staticfirst":144,"abstractlate":91,"abstractfirst":152,"commits":459,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1026847,"char120":83606,"char150":32664,"commits":6783,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-11","convention":{"lang":"php","indent":{"tab":390439,"space":988299,"commits":6572,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2324,"sameline":1691,"commits":679,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":47210,"newline":27376,"commits":3175,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4619,"newline":3809,"commits":675,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":32910,"nospace":4413,"commits":2353,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":12208,"nospace":50607,"commits":3218,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":93,"nospace":959,"commits":187,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":878,"nospace":4716,"commits":571,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":52,"pascal":2505,"capssnake":3,"snakepascal":316,"snake":124,"uppersnake":6,"commits":576,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":86,"pascal":0,"capssnake":1640,"snakepascal":0,"snake":93,"commits":323,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24844,"pascal":234,"capssnake":63,"snakepascal":10,"snake":5936,"commits":1896,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3432,"staticfirst":220,"abstractlate":119,"abstractfirst":339,"commits":470,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1128239,"char120":80900,"char150":26004,"commits":6998,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-10","convention":{"lang":"php","indent":{"tab":437195,"space":1047424,"commits":6467,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2713,"sameline":2675,"commits":739,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":56588,"newline":20873,"commits":3069,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":5144,"newline":1203,"commits":649,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":42049,"nospace":4236,"commits":2330,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":7199,"nospace":55750,"commits":3106,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":288,"nospace":883,"commits":147,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":309,"nospace":4104,"commits":533,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":63,"pascal":3421,"capssnake":3,"snakepascal":745,"snake":54,"uppersnake":2,"commits":644,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":28,"pascal":13,"capssnake":3564,"snakepascal":0,"snake":38,"commits":326,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":28493,"pascal":527,"capssnake":289,"snakepascal":11,"snake":3740,"commits":1926,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":4429,"staticfirst":201,"abstractlate":62,"abstractfirst":179,"commits":503,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1156478,"char120":105398,"char150":33622,"commits":6886,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-09","convention":{"lang":"php","indent":{"tab":339326,"space":794675,"commits":6990,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":1356,"sameline":1889,"commits":629,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":38733,"newline":17383,"commits":3459,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3867,"newline":2467,"commits":673,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":27344,"nospace":2830,"commits":2582,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":8800,"nospace":39091,"commits":3485,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":8,"nospace":488,"commits":147,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":727,"nospace":3165,"commits":519,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":53,"pascal":2627,"capssnake":2,"snakepascal":290,"snake":167,"uppersnake":2,"commits":649,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":1,"pascal":5,"capssnake":1474,"snakepascal":0,"snake":2,"commits":296,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18561,"pascal":315,"capssnake":31,"snakepascal":19,"snake":5187,"commits":2083,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2827,"staticfirst":137,"abstractlate":80,"abstractfirst":109,"commits":514,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":882517,"char120":71495,"char150":26577,"commits":7367,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-08","convention":{"lang":"php","indent":{"tab":952980,"space":1676447,"commits":6867,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2195,"sameline":4318,"commits":750,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":98476,"newline":37716,"commits":3328,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":9333,"newline":3564,"commits":836,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":69742,"nospace":5844,"commits":2396,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":16940,"nospace":93192,"commits":3362,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":143,"nospace":1746,"commits":235,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1365,"nospace":7395,"commits":675,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":154,"pascal":3079,"capssnake":12,"snakepascal":651,"snake":92,"uppersnake":3,"commits":646,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":70,"pascal":49,"capssnake":6832,"snakepascal":0,"snake":115,"commits":375,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":30924,"pascal":550,"capssnake":388,"snakepascal":47,"snake":8451,"commits":2112,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":11453,"staticfirst":238,"abstractlate":83,"abstractfirst":338,"commits":582,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1865757,"char120":143007,"char150":48443,"commits":7280,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-07","convention":{"lang":"php","indent":{"tab":541401,"space":1214923,"commits":5787,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2066,"sameline":4984,"commits":789,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":62908,"newline":29982,"commits":2942,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":8924,"newline":3186,"commits":749,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":43980,"nospace":4501,"commits":2197,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":13963,"nospace":64549,"commits":2977,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":98,"nospace":902,"commits":213,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1282,"nospace":6160,"commits":612,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":50,"pascal":5284,"capssnake":5,"snakepascal":340,"snake":72,"uppersnake":6,"commits":679,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":28,"pascal":4,"capssnake":2892,"snakepascal":6,"snake":31,"commits":294,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":22640,"pascal":748,"capssnake":105,"snakepascal":10,"snake":6905,"commits":1903,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3586,"staticfirst":365,"abstractlate":36,"abstractfirst":241,"commits":446,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1368899,"char120":119605,"char150":43803,"commits":6164,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-06","convention":{"lang":"php","indent":{"tab":409488,"space":1018940,"commits":5890,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2277,"sameline":1889,"commits":682,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":61601,"newline":28615,"commits":2771,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":6362,"newline":2895,"commits":601,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":43643,"nospace":3359,"commits":2036,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":10372,"nospace":61330,"commits":2806,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":47,"nospace":636,"commits":132,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":1226,"nospace":5152,"commits":473,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":45,"pascal":1562,"capssnake":12,"snakepascal":900,"snake":148,"uppersnake":0,"commits":620,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":20,"pascal":19,"capssnake":3309,"snakepascal":0,"snake":45,"commits":275,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":20246,"pascal":494,"capssnake":98,"snakepascal":9,"snake":6287,"commits":1836,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3645,"staticfirst":268,"abstractlate":100,"abstractfirst":163,"commits":441,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1127178,"char120":95103,"char150":34713,"commits":6422,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-05","convention":{"lang":"php","indent":{"tab":312949,"space":897690,"commits":6651,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2796,"sameline":1371,"commits":656,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":55997,"newline":17334,"commits":3428,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4570,"newline":1896,"commits":579,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":39036,"nospace":3322,"commits":2745,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":5783,"nospace":54666,"commits":3443,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":115,"nospace":577,"commits":131,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":552,"nospace":4060,"commits":481,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":81,"pascal":2173,"capssnake":3,"snakepascal":613,"snake":247,"uppersnake":6,"commits":581,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":12,"pascal":3,"capssnake":2634,"snakepascal":0,"snake":23,"commits":297,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":18395,"pascal":365,"capssnake":131,"snakepascal":18,"snake":4750,"commits":1930,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":2969,"staticfirst":291,"abstractlate":64,"abstractfirst":222,"commits":551,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1012232,"char120":85723,"char150":30468,"commits":7002,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-04","convention":{"lang":"php","indent":{"tab":537740,"space":1004767,"commits":7255,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2632,"sameline":2155,"commits":722,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":51090,"newline":27008,"commits":3385,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":4888,"newline":2449,"commits":669,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":33436,"nospace":3059,"commits":2586,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":11560,"nospace":53758,"commits":3429,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":111,"nospace":434,"commits":130,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":877,"nospace":3776,"commits":521,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":68,"pascal":2431,"capssnake":14,"snakepascal":434,"snake":158,"uppersnake":4,"commits":648,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":34,"pascal":22,"capssnake":2912,"snakepascal":0,"snake":199,"commits":277,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":24582,"pascal":287,"capssnake":190,"snakepascal":8,"snake":5812,"commits":2056,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":5276,"staticfirst":304,"abstractlate":14,"abstractfirst":180,"commits":497,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1126529,"char120":99144,"char150":37846,"commits":7639,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"php","file":"2013-12-03","convention":{"lang":"php","indent":{"tab":258509,"space":926058,"commits":5241,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}]},"classBrace":{"newline":2266,"sameline":1537,"commits":522,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"controlBrace":{"sameline":49204,"newline":19917,"commits":2466,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}]},"methodBrace":{"sameline":3971,"newline":1888,"commits":555,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundControl":{"space":26671,"nospace":5058,"commits":1879,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideControl":{"space":9004,"nospace":49076,"commits":2473,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceAroundMethod":{"space":155,"nospace":387,"commits":114,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"spaceInsideMethod":{"space":653,"nospace":3545,"commits":442,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"className":{"camel":33,"pascal":2277,"capssnake":2,"snakepascal":306,"snake":143,"uppersnake":16,"commits":425,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"constName":{"camel":25,"pascal":9,"capssnake":2579,"snakepascal":0,"snake":19,"commits":234,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}]},"functionName":{"camel":19838,"pascal":398,"capssnake":65,"snakepascal":4,"snake":4832,"commits":1553,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}]},"methodDeclare":{"staticlate":3165,"staticfirst":591,"abstractlate":28,"abstractfirst":218,"commits":381,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}]},"linelength":{"char80":1042198,"char120":70309,"char150":25025,"commits":5481,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}}],"scores":{"lang":"php","indent":{"tab":73493114,"space":177583550,"commits":1077600,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n        <span class=\"comment\">// uses one tab for indentation</span>\n    }\n}"},{"key":"space","display":"Space","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n    <span class=\"comment\">// uses spaces for indentation</span>\n  }\n}"}],"total":251076664},"classBrace":{"newline":413307,"sameline":316529,"commits":120734,"title":"Brace Placement (Class)","column":[{"key":"newline","display":"Class opening/closing braces on seperate line (Allman)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"sameline","display":"Class structure opening/closing braces on same line as declaration (OTBS)","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":729836},"controlBrace":{"sameline":8723854,"newline":4204091,"commits":526519,"title":"Brace Placement (Control Structures)","column":[{"key":"sameline","display":"Control structure opening/closing braces on same line as declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ..</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ..</span>\n}"},{"key":"newline","display":"Control structure opening/closing braces on seperate line from declaration","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n<span class=\"keyword\">else</span>\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>)\n{\n  <span class=\"comment\">// ..</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>)\n{\n  <span class=\"comment\">// ..</span>\n}"}],"total":12927945},"methodBrace":{"sameline":944357,"newline":525072,"commits":117670,"title":"Brace Placement (Methods)","column":[{"key":"sameline","display":"Method structure opening braces on same line as declaration (OTBS)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"newline","display":"Method opening/closing braces on seperate line (Allman)","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":1469429},"spaceAroundControl":{"space":6109971,"nospace":661433,"commits":396307,"title":"Space Around Control Structure Evaluation Block","column":[{"key":"space","display":"Space around control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">else</span> {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around control structure Evaluation block","code":"<span class=\"keyword\">if</span>(<span class=\"variable\">$baz</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">elseif</span>(<span class=\"variable\">$bar</span>){\n  <span class=\"comment\">// ...</span>\n}<span class=\"keyword\">else</span>{\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>){\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span>(<span class=\"variable\">$beer</span>){\n  <span class=\"comment\">// ...</span>\n}"}],"total":6771404},"spaceInsideControl":{"space":1823067,"nospace":9125423,"commits":532584,"title":"Space Inside Control Structure Evaluation Block","column":[{"key":"space","display":"Space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> ( <span class=\"variable\">$baz</span> ) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> ( <span class=\"variable\">$bar</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> ( <span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span> ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> ( <span class=\"variable\">$beer</span> ) {\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside control structure Evaluation block","code":"<span class=\"keyword\">if</span> (<span class=\"variable\">$baz</span>) {\n  <span class=\"comment\">// ...</span>\n} <span class=\"keyword\">elseif</span> (<span class=\"variable\">$bar</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"variable\">$i</span> &lt;= <span class=\"number\">10</span>) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">switch</span> (<span class=\"variable\">$beer</span>) {\n  <span class=\"comment\">// ...</span>\n}"}],"total":10948490},"spaceAroundMethod":{"space":28671,"nospace":140570,"commits":27427,"title":"Space Around Method Declaration Param Block","column":[{"key":"space","display":"Space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> <span class=\"params\">(<span class=\"variable\">$baz</span>)</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space around parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":169241},"spaceInsideMethod":{"space":152606,"nospace":816619,"commits":95149,"title":"Space Inside Method Declaration Param Block","column":[{"key":"space","display":"Space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">( <span class=\"variable\">$baz</span> )</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"nospace","display":"No space inside parameter declaration block","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":969225},"className":{"camel":14432,"pascal":404166,"capssnake":1389,"snakepascal":72813,"snake":33069,"uppersnake":1594,"commits":107114,"title":"Class Names","column":[{"key":"camel","display":"Class Name in camelCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">fooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Class Name in PascalCase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FooBarBaz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Class Name in CAPS_SNAKE_CASE","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FOO_BAR_BAZ</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Class Name in Snake_Pascal_Case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_Bar_Baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Class Name in snake_case","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"uppersnake","display":"Class Snake_first_letter_uppercase","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo_bar_baz</span> {</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":527463},"constName":{"camel":3933,"pascal":3380,"capssnake":474127,"snakepascal":270,"snake":5127,"commits":54382,"title":"Constant Names","column":[{"key":"camel","display":"Constant Name in camelCase","code":"<span class=\"keyword\">const</span> barBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'barBaz'</span>, <span class=\"number\">0</span>);"},{"key":"pascal","display":"Constant Name in PascalCase","code":"<span class=\"keyword\">const</span> BarBaz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BarBaz'</span>, <span class=\"number\">0</span>);"},{"key":"capssnake","display":"Constant Name in CAPS_SNAKE_CASE","code":"<span class=\"keyword\">const</span> BAR_BAZ = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'BAR_BAZ'</span>, <span class=\"number\">0</span>);"},{"key":"snakepascal","display":"Constant Name in Snake_Pascal_Case","code":"<span class=\"keyword\">const</span> Bar_Baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'Bar_Baz'</span>, <span class=\"number\">0</span>);"},{"key":"snake","display":"Constant Name in snake_case","code":"<span class=\"keyword\">const</span> bar_baz = <span class=\"number\">0</span>;\n\ndefine(<span class=\"string\">'bar_baz'</span>, <span class=\"number\">0</span>);"}],"total":486837},"functionName":{"camel":3695311,"pascal":105237,"capssnake":6315,"snakepascal":3615,"snake":1172516,"commits":333255,"title":"Function Names","column":[{"key":"camel","display":"Function Name in camelCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">barBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"pascal","display":"Function Name in PascalCase","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BarBaz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"capssnake","display":"Function Name in CAPS_SNAKE_CASE","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BAR_BAZ</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snakepascal","display":"Function Name in Snake_Pascal_Case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar_Baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"},{"key":"snake","display":"Function Name in snake_case","code":"<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar_baz</span><span class=\"params\">()</span>{</span>\n  <span class=\"comment\">// ...</span>\n}"}],"total":4982994},"methodDeclare":{"staticlate":565461,"staticfirst":35786,"abstractlate":10705,"abstractfirst":46439,"commits":82263,"title":"Method Declare Order","column":[{"key":"staticlate","display":"static declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"staticfirst","display":"static declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>\n  {</span>\n    <span class=\"comment\">// ...</span>\n  }\n}"},{"key":"abstractlate","display":"abstract (or final) declared after visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"},{"key":"abstractfirst","display":"abstract (or final) declared before visibility","code":"<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span>\n{</span>\n  <span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span><span class=\"params\">(<span class=\"variable\">$baz</span>)</span>;\n  // ...\n}"}],"total":658391},"linelength":{"char80":198498457,"char120":15618580,"char150":5858117,"commits":1142324,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}],"total":219975154}}}}
