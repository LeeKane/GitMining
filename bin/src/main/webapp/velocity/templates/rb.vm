#set($layout="indexlayout.vm")
{"results":{"lang":"rb","period":["2014-07-19","2014-07-18","2014-07-17","2014-07-13","2014-07-12","2014-07-11","2014-07-10","2014-07-09","2014-07-08","2014-07-07","2014-07-06","2014-07-05","2014-07-04","2014-07-03","2014-07-02","2014-07-01","2014-06-30","2014-06-29","2014-06-28","2014-06-27","2014-06-26","2014-06-25","2014-06-24","2014-06-23","2014-06-22","2014-06-21","2014-06-20","2014-06-19","2014-06-18","2014-06-17","2014-06-16","2014-06-15","2014-06-14","2014-06-13","2014-06-12","2014-06-11","2014-06-10","2014-06-09","2014-06-08","2014-06-07","2014-06-04","2014-06-03","2014-06-02","2014-06-01","2014-05-31","2014-05-30","2014-05-29","2014-05-28","2014-05-27","2014-05-26","2014-05-25","2014-05-24","2014-05-23","2014-05-22","2014-05-21","2014-05-20","2014-05-19","2014-05-18","2014-05-17","2014-05-16","2014-05-15","2014-05-14","2014-05-13","2014-05-12","2014-05-11","2014-05-10","2014-05-09","2014-05-08","2014-05-07","2014-05-06","2014-05-05","2014-05-04","2014-05-03","2014-05-02","2014-05-01","2014-04-30","2014-04-29","2014-04-28","2014-04-27","2014-04-26","2014-04-25","2014-04-24","2014-04-23","2014-04-22","2014-04-21","2014-04-20","2014-04-19","2014-04-18","2014-04-17","2014-04-16","2014-04-15","2014-04-14","2014-04-13","2014-04-12","2014-04-11","2014-04-10","2014-04-09","2014-04-08","2014-04-07","2014-04-06","2014-04-05","2014-04-04","2014-04-03","2014-04-02","2014-04-01","2014-03-31","2014-03-30","2014-03-29","2014-03-28","2014-03-27","2014-03-26","2014-03-25","2014-03-24","2014-03-23","2014-03-22","2014-03-21","2014-03-20","2014-03-19","2014-03-18","2014-03-17","2014-03-16","2014-03-15","2014-03-14","2014-03-13","2014-03-12","2014-03-11","2014-03-10","2014-03-09","2014-03-08","2014-03-07","2014-03-06","2014-03-05","2014-03-04","2014-03-03","2014-03-01","2014-02-28","2014-02-26","2014-02-24","2014-02-22","2014-02-21","2014-02-20","2014-02-18","2014-02-17","2014-02-16","2014-02-14","2014-02-13","2014-02-12","2014-02-11","2014-02-10","2014-02-09","2014-02-08","2014-02-07","2014-02-06","2014-02-05","2014-02-04","2014-02-03","2014-02-02","2014-02-01","2014-01-31","2014-01-30","2014-01-29","2014-01-28","2014-01-27","2014-01-26","2014-01-25","2014-01-24","2014-01-23","2014-01-22","2014-01-21","2014-01-20","2014-01-19","2014-01-18","2014-01-17","2014-01-16","2014-01-15","2014-01-14","2014-01-13","2014-01-12","2014-01-11","2014-01-10","2014-01-09","2014-01-08","2014-01-07","2014-01-06","2014-01-05","2014-01-04","2014-01-03","2014-01-02","2014-01-01","2013-12-31","2013-12-30","2013-12-29","2013-12-28","2013-12-27","2013-12-26","2013-12-25","2013-12-24","2013-12-23","2013-12-22","2013-12-21","2013-12-20","2013-12-19","2013-12-18","2013-12-17","2013-12-16","2013-12-15","2013-12-14","2013-12-13","2013-12-12","2013-12-11","2013-12-10","2013-12-09","2013-12-08","2013-12-07","2013-12-06","2013-12-05","2013-12-04","2013-12-03","2013-12-02","2013-12-01","2013-11-30","2013-11-29","2013-11-28","2013-11-27","2013-11-26","2013-11-25","2013-11-24","2013-11-23","2013-11-22","2013-11-21","2013-11-20","2013-11-19","2013-11-18","2013-11-17","2013-11-16","2013-11-15","2013-11-14","2013-11-13","2013-11-12","2013-11-11","2013-11-10","2013-11-09","2013-11-08","2013-11-07","2013-11-06","2013-11-05","2013-11-04","2013-11-03","2013-11-02","2013-11-01","2013-10-31","2013-10-30","2013-10-29","2013-10-28","2013-10-27","2013-10-26","2013-10-25","2013-10-24","2013-10-23","2013-10-22","2013-10-21","2013-10-20","2013-10-19","2013-10-18","2013-10-17","2013-10-16","2013-10-15","2013-10-14","2013-10-13","2013-10-12","2013-10-11","2013-10-10","2013-10-09","2013-10-08","2013-10-07","2013-10-06","2013-10-05","2013-10-04","2013-10-03","2013-10-02","2013-10-01","2013-09-30","2013-09-29","2013-09-28","2013-09-27","2013-09-26","2013-09-25","2013-09-24","2013-09-23","2013-09-22","2013-09-21","2013-09-20","2013-09-19","2013-09-18","2013-09-17","2013-09-16","2013-09-15","2013-09-14","2013-09-13","2013-09-12","2013-09-11","2013-09-10","2013-09-09","2013-09-08","2013-09-07","2013-09-06","2013-09-05","2013-09-04","2013-09-03","2013-09-02","2013-09-01","2013-08-31","2013-08-30","2013-08-29","2013-08-28","2013-08-27","2013-08-26","2013-08-25","2013-08-24","2013-08-23","2013-08-22","2013-08-21","2013-08-20","2013-08-19","2013-08-18","2013-08-17","2013-08-16","2013-08-15","2013-08-14","2013-08-13","2013-08-12","2013-08-11","2013-08-10","2013-08-09"],"raw":[{"lang":"rb","file":"2014-07-19","convention":{"lang":"rb","indent":{"tab":3702872,"space":79747826,"commits":1483954,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}],"total":83450698},"linelength":{"char80":94812137,"char120":6061357,"char150":1501944,"commits":1565718,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}],"total":102375438},"whitespace":{"spaces":9957234,"nospace":27650565,"commits":1347792,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}],"total":37607799},"asignDefaultValue":{"space":49266,"nospace":32984,"commits":27970,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":82250},"numericLiteral":{"underscore":39907,"nounderscore":1057349,"commits":193420,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}],"total":1097256},"defNoArgs":{"omit":2131921,"use":28057,"commits":387269,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":2159978},"defArgs":{"omit":28481,"use":429546,"commits":82455,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":458027}}},{"lang":"rb","file":"2014-07-18","convention":{"lang":"rb","indent":{"tab":11071,"space":193302,"commits":4132,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":226803,"char120":16384,"char150":3827,"commits":4354,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20481,"nospace":69479,"commits":3762,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":146,"nospace":54,"commits":72,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":14,"nounderscore":2133,"commits":442,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5593,"use":24,"commits":990,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":148,"use":3574,"commits":699,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-17","convention":{"lang":"rb","indent":{"tab":5425,"space":130631,"commits":2371,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":152750,"char120":10518,"char150":2027,"commits":2476,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13827,"nospace":45492,"commits":2177,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":103,"nospace":59,"commits":49,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":10,"nounderscore":1122,"commits":236,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3927,"use":52,"commits":557,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":273,"use":2107,"commits":432,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-13","convention":{"lang":"rb","indent":{"tab":7287,"space":152572,"commits":3191,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":183828,"char120":9716,"char150":1656,"commits":3374,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":19030,"nospace":53089,"commits":2858,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":47,"nospace":40,"commits":37,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":382,"nounderscore":3071,"commits":376,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4111,"use":36,"commits":805,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":166,"use":2337,"commits":533,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-12","convention":{"lang":"rb","indent":{"tab":7390,"space":148021,"commits":4147,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":177802,"char120":13378,"char150":3224,"commits":4343,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17057,"nospace":50683,"commits":3698,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":69,"nospace":38,"commits":60,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":1658,"commits":508,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4402,"use":25,"commits":1069,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":143,"use":2753,"commits":685,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-11","convention":{"lang":"rb","indent":{"tab":2495,"space":112502,"commits":2583,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":135271,"char120":8970,"char150":2751,"commits":2744,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":11118,"nospace":40655,"commits":2367,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":49,"nospace":25,"commits":44,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":38,"nounderscore":1069,"commits":298,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2701,"use":32,"commits":670,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":81,"use":2748,"commits":470,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-10","convention":{"lang":"rb","indent":{"tab":8871,"space":205301,"commits":3939,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":233749,"char120":19020,"char150":6249,"commits":4105,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":22927,"nospace":76097,"commits":3565,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":91,"nospace":46,"commits":77,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":51,"nounderscore":2194,"commits":454,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4019,"use":39,"commits":911,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":329,"use":3589,"commits":670,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-09","convention":{"lang":"rb","indent":{"tab":3964,"space":145228,"commits":2983,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":169288,"char120":13792,"char150":3413,"commits":3205,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16664,"nospace":52088,"commits":2786,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":71,"nospace":36,"commits":47,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":191,"nounderscore":2347,"commits":363,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3155,"use":18,"commits":650,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":175,"use":2526,"commits":527,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-08","convention":{"lang":"rb","indent":{"tab":4392,"space":107382,"commits":2188,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":124771,"char120":7309,"char150":1660,"commits":2328,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":14604,"nospace":36522,"commits":2004,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":30,"nospace":35,"commits":37,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":181,"nounderscore":2455,"commits":251,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":1994,"use":42,"commits":521,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":91,"use":1636,"commits":409,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-07","convention":{"lang":"rb","indent":{"tab":1906,"space":109060,"commits":1962,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":125917,"char120":9898,"char150":2071,"commits":2053,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":11209,"nospace":43449,"commits":1764,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":33,"nospace":11,"commits":30,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":8,"nounderscore":1220,"commits":216,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2037,"use":8,"commits":422,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":68,"use":1616,"commits":360,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-06","convention":{"lang":"rb","indent":{"tab":10312,"space":258068,"commits":4231,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":316904,"char120":16759,"char150":3871,"commits":4465,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":33869,"nospace":88302,"commits":3832,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":159,"nospace":73,"commits":77,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":357,"nounderscore":6122,"commits":664,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6355,"use":95,"commits":1166,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":209,"use":4236,"commits":762,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-05","convention":{"lang":"rb","indent":{"tab":4740,"space":116879,"commits":2681,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":146943,"char120":7414,"char150":1767,"commits":2828,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12540,"nospace":42815,"commits":2479,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":82,"nospace":23,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":7,"nounderscore":964,"commits":335,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3613,"use":27,"commits":727,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":136,"use":1938,"commits":545,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-04","convention":{"lang":"rb","indent":{"tab":1651,"space":95082,"commits":1561,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":109239,"char120":6419,"char150":2199,"commits":1662,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12211,"nospace":33246,"commits":1422,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":29,"nospace":22,"commits":26,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":6,"nounderscore":1224,"commits":145,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":1440,"use":17,"commits":281,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":128,"use":1513,"commits":267,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-03","convention":{"lang":"rb","indent":{"tab":2139,"space":164152,"commits":3041,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":188410,"char120":11952,"char150":2461,"commits":3202,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":18721,"nospace":58941,"commits":2787,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":76,"nospace":22,"commits":48,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":36,"nounderscore":2392,"commits":362,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3743,"use":10,"commits":806,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":255,"use":2267,"commits":522,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-02","convention":{"lang":"rb","indent":{"tab":3189,"space":107203,"commits":3011,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":127115,"char120":8731,"char150":2422,"commits":3160,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12083,"nospace":39734,"commits":2690,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":61,"nospace":18,"commits":55,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":116,"nounderscore":1708,"commits":356,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2559,"use":71,"commits":640,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":101,"use":1636,"commits":537,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-07-01","convention":{"lang":"rb","indent":{"tab":1499,"space":65940,"commits":1509,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":78168,"char120":4896,"char150":991,"commits":1583,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":8264,"nospace":24392,"commits":1385,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":34,"nospace":22,"commits":31,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":5,"nounderscore":838,"commits":197,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":1676,"use":20,"commits":376,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":26,"use":1000,"commits":282,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-30","convention":{"lang":"rb","indent":{"tab":3747,"space":134225,"commits":2736,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":155464,"char120":8451,"char150":1809,"commits":2894,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24492,"nospace":42421,"commits":2386,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":67,"nospace":31,"commits":51,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":11,"nounderscore":4835,"commits":314,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2729,"use":52,"commits":600,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":45,"use":2305,"commits":437,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-29","convention":{"lang":"rb","indent":{"tab":8505,"space":295611,"commits":3968,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":365694,"char120":17596,"char150":4590,"commits":4253,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":36666,"nospace":97714,"commits":3580,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":65,"nospace":28,"commits":61,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":41,"nounderscore":4030,"commits":518,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7229,"use":28,"commits":978,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":1841,"use":3499,"commits":703,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-28","convention":{"lang":"rb","indent":{"tab":7477,"space":215474,"commits":4169,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":259137,"char120":14993,"char150":3422,"commits":4429,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23189,"nospace":78088,"commits":3748,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":113,"nospace":39,"commits":79,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":21,"nounderscore":1444,"commits":476,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5417,"use":59,"commits":1032,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":95,"use":3837,"commits":697,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-27","convention":{"lang":"rb","indent":{"tab":10700,"space":325983,"commits":5213,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":386356,"char120":25032,"char150":8313,"commits":5503,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":49657,"nospace":113097,"commits":4713,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":112,"nospace":150,"commits":130,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":45,"nounderscore":8205,"commits":723,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6254,"use":104,"commits":1287,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":265,"use":4335,"commits":995,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-26","convention":{"lang":"rb","indent":{"tab":1385,"space":142136,"commits":2571,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":165210,"char120":10262,"char150":2189,"commits":2715,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17890,"nospace":47864,"commits":2308,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":37,"nospace":25,"commits":34,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":17,"nounderscore":1594,"commits":313,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2480,"use":24,"commits":565,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":62,"use":1504,"commits":450,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-25","convention":{"lang":"rb","indent":{"tab":3739,"space":166326,"commits":3746,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":195409,"char120":14419,"char150":3299,"commits":3922,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":18725,"nospace":63069,"commits":3419,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":117,"nospace":61,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":1436,"commits":422,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4367,"use":15,"commits":821,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":124,"use":3192,"commits":649,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-24","convention":{"lang":"rb","indent":{"tab":2063,"space":138054,"commits":3265,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":164293,"char120":11095,"char150":2208,"commits":3453,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":15274,"nospace":51862,"commits":2979,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":111,"nospace":14,"commits":64,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":14,"nounderscore":1298,"commits":371,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3665,"use":14,"commits":692,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":432,"use":2004,"commits":571,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-23","convention":{"lang":"rb","indent":{"tab":4279,"space":183293,"commits":2515,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":210076,"char120":12738,"char150":2132,"commits":2661,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":28744,"nospace":56261,"commits":2285,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":112,"nospace":32,"commits":58,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":4160,"commits":304,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3444,"use":29,"commits":572,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":123,"use":2548,"commits":446,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-22","convention":{"lang":"rb","indent":{"tab":7141,"space":199954,"commits":4443,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":239690,"char120":16080,"char150":5408,"commits":4693,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23577,"nospace":71715,"commits":4055,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":65,"nospace":26,"commits":64,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":416,"nounderscore":2365,"commits":628,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5662,"use":26,"commits":1214,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":223,"use":2918,"commits":813,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-21","convention":{"lang":"rb","indent":{"tab":8839,"space":350895,"commits":4934,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":412113,"char120":20360,"char150":4654,"commits":5190,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":38311,"nospace":111415,"commits":4412,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":204,"nospace":118,"commits":94,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":504,"nounderscore":7024,"commits":645,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":9827,"use":35,"commits":1301,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":329,"use":5767,"commits":930,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-20","convention":{"lang":"rb","indent":{"tab":3655,"space":109481,"commits":2147,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":128313,"char120":7550,"char150":1850,"commits":2253,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":11818,"nospace":36789,"commits":1942,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":38,"nospace":12,"commits":31,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":215,"nounderscore":994,"commits":265,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3189,"use":18,"commits":536,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":88,"use":1623,"commits":397,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-19","convention":{"lang":"rb","indent":{"tab":2705,"space":238625,"commits":4006,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":277721,"char120":19310,"char150":5764,"commits":4229,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24965,"nospace":87624,"commits":3682,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":139,"nospace":80,"commits":89,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":420,"nounderscore":2847,"commits":467,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7144,"use":117,"commits":995,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":302,"use":3684,"commits":760,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-18","convention":{"lang":"rb","indent":{"tab":3988,"space":192785,"commits":3727,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":222810,"char120":18237,"char150":5312,"commits":3957,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21794,"nospace":71209,"commits":3379,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":96,"nospace":40,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":73,"nounderscore":2195,"commits":409,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4160,"use":28,"commits":781,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":205,"use":2819,"commits":634,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-17","convention":{"lang":"rb","indent":{"tab":1258,"space":150721,"commits":2688,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":172960,"char120":12401,"char150":2812,"commits":2801,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16057,"nospace":53817,"commits":2337,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":72,"nospace":32,"commits":53,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":476,"nounderscore":1904,"commits":336,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3592,"use":10,"commits":602,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":108,"use":2494,"commits":468,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-16","convention":{"lang":"rb","indent":{"tab":2342,"space":86163,"commits":1866,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":101687,"char120":6936,"char150":1437,"commits":1959,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":9194,"nospace":32192,"commits":1697,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":135,"nospace":15,"commits":39,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":932,"commits":209,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2055,"use":4,"commits":449,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":27,"use":1542,"commits":307,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-15","convention":{"lang":"rb","indent":{"tab":10168,"space":184561,"commits":3687,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":222974,"char120":12888,"char150":3318,"commits":3883,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23437,"nospace":65759,"commits":3289,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":533,"nospace":13,"commits":65,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":1578,"commits":440,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4080,"use":30,"commits":880,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":193,"use":3219,"commits":660,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-14","convention":{"lang":"rb","indent":{"tab":13195,"space":211019,"commits":4311,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":253781,"char120":13662,"char150":3188,"commits":4544,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24000,"nospace":78532,"commits":3879,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":64,"nospace":54,"commits":81,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":24,"nounderscore":2582,"commits":587,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5717,"use":35,"commits":1154,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":255,"use":2661,"commits":802,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-13","convention":{"lang":"rb","indent":{"tab":3216,"space":91186,"commits":2102,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":117185,"char120":7099,"char150":2615,"commits":2203,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":10463,"nospace":35870,"commits":1909,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":79,"nospace":13,"commits":34,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":17,"nounderscore":2172,"commits":320,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2197,"use":40,"commits":544,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":91,"use":1202,"commits":372,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-12","convention":{"lang":"rb","indent":{"tab":10301,"space":119262,"commits":3067,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":147475,"char120":9084,"char150":1976,"commits":3254,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13435,"nospace":46580,"commits":2769,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":66,"nospace":14,"commits":46,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":69,"nounderscore":1892,"commits":338,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2374,"use":151,"commits":638,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":81,"use":1690,"commits":512,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-11","convention":{"lang":"rb","indent":{"tab":2106,"space":101675,"commits":2358,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":114835,"char120":8326,"char150":3519,"commits":2502,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":10344,"nospace":39128,"commits":2068,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":70,"nospace":45,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":46,"nounderscore":1529,"commits":246,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2098,"use":16,"commits":536,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":87,"use":1709,"commits":425,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-10","convention":{"lang":"rb","indent":{"tab":2357,"space":132094,"commits":2768,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":160434,"char120":7983,"char150":3715,"commits":2919,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":14009,"nospace":47773,"commits":2488,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":59,"nospace":16,"commits":52,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":47,"nounderscore":2281,"commits":301,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3657,"use":37,"commits":634,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":463,"use":1973,"commits":502,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-09","convention":{"lang":"rb","indent":{"tab":1244,"space":193326,"commits":3163,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":226243,"char120":14331,"char150":3421,"commits":3292,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20716,"nospace":67950,"commits":2832,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":97,"nospace":54,"commits":63,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":31,"nounderscore":1507,"commits":369,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4782,"use":25,"commits":756,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":315,"use":3406,"commits":552,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-08","convention":{"lang":"rb","indent":{"tab":5304,"space":199195,"commits":3781,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":232036,"char120":16287,"char150":4275,"commits":4041,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23708,"nospace":75798,"commits":3507,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":92,"nospace":111,"commits":74,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":568,"nounderscore":3048,"commits":516,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5404,"use":48,"commits":1044,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":163,"use":3388,"commits":642,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-07","convention":{"lang":"rb","indent":{"tab":6585,"space":188608,"commits":4219,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":227970,"char120":12566,"char150":3786,"commits":4418,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24775,"nospace":67030,"commits":3817,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":143,"nospace":62,"commits":56,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":108,"nounderscore":2620,"commits":548,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4656,"use":28,"commits":1073,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":208,"use":3250,"commits":782,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-04","convention":{"lang":"rb","indent":{"tab":193,"space":19884,"commits":688,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":23104,"char120":1851,"char150":276,"commits":713,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":2196,"nospace":7476,"commits":612,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":6,"nospace":2,"commits":5,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":0,"nounderscore":255,"commits":86,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":380,"use":0,"commits":131,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":9,"use":337,"commits":103,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-03","convention":{"lang":"rb","indent":{"tab":1705,"space":84503,"commits":1677,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":98646,"char120":5476,"char150":1090,"commits":1773,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":8705,"nospace":28860,"commits":1499,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":41,"nospace":20,"commits":21,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":33,"nounderscore":846,"commits":221,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2369,"use":6,"commits":423,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":341,"use":1593,"commits":292,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-02","convention":{"lang":"rb","indent":{"tab":1759,"space":163616,"commits":2399,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":187528,"char120":13261,"char150":3326,"commits":2570,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":22993,"nospace":56981,"commits":2208,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":90,"nospace":123,"commits":56,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":871,"nounderscore":3649,"commits":273,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3889,"use":60,"commits":561,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":88,"use":4030,"commits":476,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-06-01","convention":{"lang":"rb","indent":{"tab":9459,"space":153390,"commits":4253,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":183530,"char120":12498,"char150":4069,"commits":4593,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17886,"nospace":55121,"commits":3846,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":54,"nospace":25,"commits":45,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":22,"nounderscore":1633,"commits":548,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4183,"use":47,"commits":1038,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":305,"use":2335,"commits":748,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-31","convention":{"lang":"rb","indent":{"tab":6095,"space":168039,"commits":4667,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":202985,"char120":11838,"char150":2667,"commits":4901,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20207,"nospace":60553,"commits":4116,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":102,"nospace":73,"commits":84,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":24,"nounderscore":1651,"commits":574,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4931,"use":73,"commits":1187,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":292,"use":3120,"commits":828,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-30","convention":{"lang":"rb","indent":{"tab":3083,"space":190031,"commits":3099,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":228538,"char120":17318,"char150":4326,"commits":3245,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24036,"nospace":63826,"commits":2745,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":112,"nospace":43,"commits":64,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":200,"nounderscore":2425,"commits":395,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4803,"use":37,"commits":767,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":179,"use":3376,"commits":566,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-29","convention":{"lang":"rb","indent":{"tab":5649,"space":165726,"commits":3929,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":193717,"char120":14188,"char150":3654,"commits":4101,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16998,"nospace":61912,"commits":3526,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":130,"nospace":17,"commits":58,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":42,"nounderscore":1859,"commits":486,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3871,"use":56,"commits":909,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":135,"use":2331,"commits":646,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-28","convention":{"lang":"rb","indent":{"tab":3606,"space":123465,"commits":2910,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":151391,"char120":9823,"char150":2406,"commits":3065,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13876,"nospace":44306,"commits":2629,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":54,"nospace":22,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":1372,"commits":353,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2973,"use":16,"commits":773,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":155,"use":1979,"commits":468,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-27","convention":{"lang":"rb","indent":{"tab":2466,"space":101869,"commits":2566,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":120718,"char120":7828,"char150":1678,"commits":2688,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":11304,"nospace":36255,"commits":2343,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":43,"nospace":44,"commits":37,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":1138,"commits":328,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2406,"use":1,"commits":649,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":122,"use":1392,"commits":483,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-26","convention":{"lang":"rb","indent":{"tab":1992,"space":150565,"commits":3483,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":180701,"char120":11598,"char150":2219,"commits":3620,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16236,"nospace":51733,"commits":3026,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":110,"nospace":39,"commits":72,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":220,"nounderscore":991,"commits":341,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5011,"use":41,"commits":887,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":129,"use":3562,"commits":578,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-25","convention":{"lang":"rb","indent":{"tab":8999,"space":186333,"commits":4163,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":229845,"char120":13235,"char150":3096,"commits":4393,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":22474,"nospace":65648,"commits":3822,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":84,"nospace":83,"commits":82,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":221,"nounderscore":2737,"commits":581,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5310,"use":33,"commits":1108,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":386,"use":3035,"commits":770,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-24","convention":{"lang":"rb","indent":{"tab":7568,"space":187496,"commits":4541,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":223062,"char120":14091,"char150":3818,"commits":4806,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21315,"nospace":65216,"commits":4181,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":123,"nospace":21,"commits":58,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":1031,"nounderscore":3059,"commits":610,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5421,"use":15,"commits":1231,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":290,"use":3064,"commits":816,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-23","convention":{"lang":"rb","indent":{"tab":5831,"space":103471,"commits":2762,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":128029,"char120":8652,"char150":3046,"commits":2924,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":11927,"nospace":38798,"commits":2536,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":40,"nospace":51,"commits":48,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":1322,"commits":371,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2707,"use":35,"commits":709,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":87,"use":1709,"commits":447,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-22","convention":{"lang":"rb","indent":{"tab":3507,"space":129135,"commits":3276,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":147105,"char120":12315,"char150":2923,"commits":3453,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12173,"nospace":49737,"commits":2995,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":46,"nospace":31,"commits":52,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":6,"nounderscore":1532,"commits":371,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3273,"use":42,"commits":790,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":107,"use":1849,"commits":559,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-21","convention":{"lang":"rb","indent":{"tab":5306,"space":107348,"commits":2413,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":132331,"char120":8301,"char150":2497,"commits":2566,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12447,"nospace":40175,"commits":2208,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":42,"nospace":31,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":39,"nounderscore":1092,"commits":284,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3641,"use":35,"commits":558,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":74,"use":1491,"commits":427,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-20","convention":{"lang":"rb","indent":{"tab":1709,"space":71935,"commits":1824,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":87080,"char120":5858,"char150":1294,"commits":1944,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":7511,"nospace":25728,"commits":1662,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":91,"nospace":22,"commits":38,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":1031,"commits":218,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":1919,"use":9,"commits":393,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":35,"use":1357,"commits":303,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-19","convention":{"lang":"rb","indent":{"tab":3999,"space":225446,"commits":3248,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":258527,"char120":16563,"char150":3624,"commits":3419,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":27510,"nospace":71607,"commits":2875,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":115,"nospace":110,"commits":74,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":253,"nounderscore":2705,"commits":365,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5758,"use":56,"commits":737,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":440,"use":4008,"commits":526,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-18","convention":{"lang":"rb","indent":{"tab":173221,"space":480566,"commits":4877,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":545218,"char120":34626,"char150":4904,"commits":5075,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":63116,"nospace":169071,"commits":4408,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":228,"nospace":127,"commits":95,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":139,"nounderscore":4078,"commits":732,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":11206,"use":82,"commits":1432,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":300,"use":6863,"commits":866,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-17","convention":{"lang":"rb","indent":{"tab":111336,"space":330345,"commits":5423,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":392321,"char120":22930,"char150":4113,"commits":5683,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":34002,"nospace":124362,"commits":4980,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":161,"nospace":21,"commits":85,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":51,"nounderscore":3364,"commits":840,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7900,"use":97,"commits":1594,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":232,"use":3695,"commits":905,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-16","convention":{"lang":"rb","indent":{"tab":4074,"space":152957,"commits":3204,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":181433,"char120":11354,"char150":2531,"commits":3356,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":15989,"nospace":55823,"commits":2881,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":37,"nospace":19,"commits":40,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":24,"nounderscore":1711,"commits":458,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3907,"use":14,"commits":800,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":206,"use":1767,"commits":575,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-15","convention":{"lang":"rb","indent":{"tab":2803,"space":120040,"commits":2312,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":135000,"char120":13122,"char150":3045,"commits":2415,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12703,"nospace":48035,"commits":2111,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":118,"nospace":17,"commits":49,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":46,"nounderscore":1388,"commits":322,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3185,"use":23,"commits":556,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":132,"use":1752,"commits":415,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-14","convention":{"lang":"rb","indent":{"tab":4998,"space":207100,"commits":2505,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":240577,"char120":18893,"char150":4162,"commits":2612,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21347,"nospace":76041,"commits":2238,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":146,"nospace":60,"commits":47,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":40,"nounderscore":1773,"commits":322,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5209,"use":61,"commits":679,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":89,"use":3506,"commits":397,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-13","convention":{"lang":"rb","indent":{"tab":2231,"space":162866,"commits":3334,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":188390,"char120":12803,"char150":3142,"commits":3512,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17181,"nospace":57634,"commits":3013,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":63,"nospace":34,"commits":50,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":45,"nounderscore":2351,"commits":345,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3927,"use":21,"commits":790,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":223,"use":2147,"commits":547,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-12","convention":{"lang":"rb","indent":{"tab":4970,"space":104631,"commits":1827,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":126981,"char120":8839,"char150":2992,"commits":1934,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":12244,"nospace":42030,"commits":1637,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":35,"nospace":18,"commits":23,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":7,"nounderscore":2305,"commits":247,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2066,"use":45,"commits":473,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":131,"use":971,"commits":289,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-11","convention":{"lang":"rb","indent":{"tab":10857,"space":182052,"commits":4155,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":227030,"char120":14425,"char150":3490,"commits":4419,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21067,"nospace":68948,"commits":3726,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":105,"nospace":81,"commits":82,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":16,"nounderscore":1962,"commits":560,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5973,"use":56,"commits":1045,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":162,"use":2780,"commits":716,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-10","convention":{"lang":"rb","indent":{"tab":7518,"space":222095,"commits":4615,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":278883,"char120":15495,"char150":3720,"commits":4884,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":28853,"nospace":79957,"commits":4142,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":139,"nospace":59,"commits":61,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":79,"nounderscore":2450,"commits":593,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6701,"use":56,"commits":1191,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":192,"use":3661,"commits":765,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-09","convention":{"lang":"rb","indent":{"tab":4485,"space":169172,"commits":3818,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":198389,"char120":13479,"char150":2927,"commits":4028,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24191,"nospace":56224,"commits":3387,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":92,"nospace":70,"commits":66,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":50,"nounderscore":2938,"commits":487,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4241,"use":50,"commits":873,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":152,"use":3156,"commits":702,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-08","convention":{"lang":"rb","indent":{"tab":3048,"space":117774,"commits":3017,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":135692,"char120":10626,"char150":2734,"commits":3156,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13093,"nospace":43889,"commits":2698,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":74,"nospace":12,"commits":30,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":29,"nounderscore":1229,"commits":371,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3604,"use":32,"commits":722,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":106,"use":1864,"commits":474,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-07","convention":{"lang":"rb","indent":{"tab":2000,"space":144907,"commits":3165,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":167588,"char120":12876,"char150":3146,"commits":3348,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16059,"nospace":54499,"commits":2846,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":92,"nospace":18,"commits":56,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":27,"nounderscore":1244,"commits":334,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4067,"use":12,"commits":822,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":174,"use":2553,"commits":545,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-06","convention":{"lang":"rb","indent":{"tab":1115,"space":82204,"commits":1672,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":93336,"char120":6913,"char150":1688,"commits":1777,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":8685,"nospace":30324,"commits":1554,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":31,"nospace":14,"commits":17,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":4,"nounderscore":789,"commits":219,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":1944,"use":5,"commits":386,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":165,"use":1557,"commits":368,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-05","convention":{"lang":"rb","indent":{"tab":2110,"space":97072,"commits":2566,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":114708,"char120":8154,"char150":1818,"commits":2700,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":10638,"nospace":36281,"commits":2368,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":48,"nospace":42,"commits":46,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":16,"nounderscore":854,"commits":309,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3217,"use":16,"commits":654,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":175,"use":1411,"commits":488,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-04","convention":{"lang":"rb","indent":{"tab":8287,"space":297646,"commits":4748,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":355710,"char120":20573,"char150":4486,"commits":4964,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":34323,"nospace":101590,"commits":4292,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":225,"nospace":77,"commits":102,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":248,"nounderscore":3912,"commits":601,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":8518,"use":81,"commits":1273,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":309,"use":5424,"commits":871,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-03","convention":{"lang":"rb","indent":{"tab":7215,"space":262377,"commits":4052,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":310373,"char120":19450,"char150":3823,"commits":4332,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":32979,"nospace":87927,"commits":3681,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":113,"nospace":46,"commits":62,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":188,"nounderscore":2592,"commits":556,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7604,"use":92,"commits":1140,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":342,"use":4025,"commits":728,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-02","convention":{"lang":"rb","indent":{"tab":2370,"space":121690,"commits":2486,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":142561,"char120":9820,"char150":2394,"commits":2631,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13614,"nospace":43487,"commits":2226,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":83,"nospace":27,"commits":42,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":822,"commits":293,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4315,"use":8,"commits":655,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":80,"use":2081,"commits":450,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-05-01","convention":{"lang":"rb","indent":{"tab":1573,"space":161232,"commits":3822,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":185896,"char120":13061,"char150":3323,"commits":4003,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17486,"nospace":58694,"commits":3464,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":54,"nospace":41,"commits":47,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":1338,"commits":395,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5408,"use":80,"commits":825,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":256,"use":2424,"commits":602,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-30","convention":{"lang":"rb","indent":{"tab":3864,"space":196230,"commits":3013,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":234829,"char120":15076,"char150":2698,"commits":3147,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":27627,"nospace":63660,"commits":2759,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":157,"nospace":96,"commits":46,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":587,"nounderscore":3177,"commits":358,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4775,"use":76,"commits":764,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":82,"use":4874,"commits":536,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-29","convention":{"lang":"rb","indent":{"tab":4289,"space":220865,"commits":3451,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":256546,"char120":17614,"char150":4025,"commits":3620,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":30654,"nospace":69405,"commits":3120,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":234,"nospace":221,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":229,"nounderscore":2367,"commits":364,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5268,"use":65,"commits":797,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":245,"use":4360,"commits":575,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-28","convention":{"lang":"rb","indent":{"tab":2211,"space":188024,"commits":3301,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":214655,"char120":15812,"char150":3293,"commits":3518,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20431,"nospace":66640,"commits":2921,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":103,"nospace":69,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":1445,"commits":381,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6078,"use":45,"commits":750,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":132,"use":3745,"commits":549,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-27","convention":{"lang":"rb","indent":{"tab":9043,"space":258344,"commits":3921,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":297600,"char120":18794,"char150":4453,"commits":4148,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":31909,"nospace":85943,"commits":3491,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":194,"nospace":79,"commits":71,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":54,"nounderscore":3206,"commits":475,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7869,"use":44,"commits":1032,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":396,"use":5199,"commits":706,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-26","convention":{"lang":"rb","indent":{"tab":5076,"space":157361,"commits":3937,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":185926,"char120":10551,"char150":2831,"commits":4208,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17623,"nospace":54536,"commits":3572,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":77,"nospace":38,"commits":71,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":16,"nounderscore":1649,"commits":496,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4762,"use":28,"commits":1023,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":232,"use":2053,"commits":690,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-25","convention":{"lang":"rb","indent":{"tab":3566,"space":182460,"commits":2847,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":216948,"char120":14591,"char150":2777,"commits":3024,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21831,"nospace":63539,"commits":2545,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":224,"nospace":56,"commits":69,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":806,"nounderscore":2277,"commits":332,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6018,"use":78,"commits":756,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":202,"use":3740,"commits":546,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-24","convention":{"lang":"rb","indent":{"tab":5011,"space":156968,"commits":3329,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":184376,"char120":12820,"char150":3257,"commits":3521,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17805,"nospace":58177,"commits":3108,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":68,"nospace":48,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":227,"nounderscore":1604,"commits":427,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5103,"use":37,"commits":847,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":251,"use":2599,"commits":610,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-23","convention":{"lang":"rb","indent":{"tab":3230,"space":157718,"commits":2585,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":185279,"char120":12838,"char150":2472,"commits":2754,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16187,"nospace":56720,"commits":2321,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":75,"nospace":46,"commits":55,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":4,"nounderscore":1234,"commits":290,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4022,"use":31,"commits":596,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":480,"use":3062,"commits":417,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-22","convention":{"lang":"rb","indent":{"tab":4169,"space":155101,"commits":3243,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":186009,"char120":13408,"char150":3870,"commits":3416,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":18269,"nospace":57035,"commits":2956,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":88,"nospace":54,"commits":55,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":17,"nounderscore":1926,"commits":350,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3688,"use":67,"commits":781,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":48,"use":2826,"commits":577,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-21","convention":{"lang":"rb","indent":{"tab":5765,"space":195180,"commits":3940,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":231301,"char120":14940,"char150":3746,"commits":4108,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20575,"nospace":70650,"commits":3535,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":165,"nospace":34,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":27,"nounderscore":1637,"commits":438,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4639,"use":81,"commits":928,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":89,"use":3377,"commits":670,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-20","convention":{"lang":"rb","indent":{"tab":15054,"space":275308,"commits":4672,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":331304,"char120":18709,"char150":3883,"commits":4957,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":32627,"nospace":100774,"commits":4215,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":247,"nospace":132,"commits":120,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":542,"nounderscore":3938,"commits":678,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7774,"use":35,"commits":1333,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":165,"use":5988,"commits":844,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-19","convention":{"lang":"rb","indent":{"tab":14569,"space":181463,"commits":4469,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":241258,"char120":11933,"char150":6657,"commits":4739,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23165,"nospace":72474,"commits":4027,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":97,"nospace":72,"commits":70,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":184,"nounderscore":2791,"commits":623,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5606,"use":71,"commits":1162,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":191,"use":2809,"commits":723,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-18","convention":{"lang":"rb","indent":{"tab":3417,"space":239418,"commits":3716,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":285908,"char120":17957,"char150":3745,"commits":3963,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":27550,"nospace":80155,"commits":3272,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":255,"nospace":86,"commits":78,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":203,"nounderscore":2727,"commits":466,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7386,"use":73,"commits":994,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":285,"use":4901,"commits":636,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-17","convention":{"lang":"rb","indent":{"tab":1579,"space":97474,"commits":2328,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":117620,"char120":7155,"char150":1628,"commits":2467,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13197,"nospace":32977,"commits":2115,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":30,"nospace":89,"commits":33,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":190,"nounderscore":1718,"commits":260,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2874,"use":76,"commits":577,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":71,"use":1988,"commits":376,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-16","convention":{"lang":"rb","indent":{"tab":2816,"space":171485,"commits":3046,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":189064,"char120":13331,"char150":3243,"commits":3194,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":25018,"nospace":55433,"commits":2735,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":124,"nospace":116,"commits":73,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":77,"nounderscore":1410,"commits":325,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3531,"use":29,"commits":754,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":92,"use":3327,"commits":519,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-15","convention":{"lang":"rb","indent":{"tab":3950,"space":303745,"commits":2743,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":351039,"char120":20690,"char150":3517,"commits":2865,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":33868,"nospace":92272,"commits":2494,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":266,"nospace":127,"commits":50,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":110,"nounderscore":2199,"commits":274,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7238,"use":77,"commits":672,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":319,"use":6538,"commits":459,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-14","convention":{"lang":"rb","indent":{"tab":3127,"space":137101,"commits":2742,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":156247,"char120":10788,"char150":2138,"commits":2884,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":18604,"nospace":43845,"commits":2482,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":83,"nospace":78,"commits":69,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":49,"nounderscore":1513,"commits":336,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3855,"use":25,"commits":692,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":162,"use":2624,"commits":504,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-13","convention":{"lang":"rb","indent":{"tab":5262,"space":303195,"commits":4336,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":349427,"char120":22231,"char150":5911,"commits":4617,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":39191,"nospace":102962,"commits":4032,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":188,"nospace":157,"commits":126,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":83,"nounderscore":2269,"commits":566,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7741,"use":61,"commits":1187,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":264,"use":5629,"commits":837,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-12","convention":{"lang":"rb","indent":{"tab":6241,"space":223445,"commits":4804,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":279557,"char120":17723,"char150":3944,"commits":5041,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":28223,"nospace":79682,"commits":4285,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":121,"nospace":83,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":80,"nounderscore":3018,"commits":675,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6549,"use":55,"commits":1291,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":175,"use":3668,"commits":775,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-11","convention":{"lang":"rb","indent":{"tab":4579,"space":232413,"commits":3595,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":273712,"char120":17799,"char150":4773,"commits":3847,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24864,"nospace":81254,"commits":3349,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":186,"nospace":106,"commits":92,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":250,"nounderscore":2332,"commits":439,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5866,"use":55,"commits":891,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":259,"use":4124,"commits":654,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-10","convention":{"lang":"rb","indent":{"tab":5848,"space":219237,"commits":4125,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":254423,"char120":18484,"char150":3809,"commits":4395,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":27145,"nospace":76968,"commits":3841,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":142,"nospace":93,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":54,"nounderscore":2349,"commits":459,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5900,"use":19,"commits":1008,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":203,"use":3707,"commits":741,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-09","convention":{"lang":"rb","indent":{"tab":5384,"space":179181,"commits":2547,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":204768,"char120":12906,"char150":2517,"commits":2718,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":26226,"nospace":52367,"commits":2343,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":180,"nospace":122,"commits":60,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":75,"nounderscore":1699,"commits":306,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3898,"use":13,"commits":605,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":259,"use":3439,"commits":399,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-08","convention":{"lang":"rb","indent":{"tab":1462,"space":158749,"commits":2862,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":180494,"char120":13952,"char150":3090,"commits":3006,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20696,"nospace":50853,"commits":2532,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":164,"nospace":57,"commits":40,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":45,"nounderscore":1748,"commits":340,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3931,"use":52,"commits":679,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":220,"use":2650,"commits":495,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-07","convention":{"lang":"rb","indent":{"tab":1863,"space":147671,"commits":3212,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":172753,"char120":11234,"char150":2806,"commits":3362,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":16099,"nospace":52876,"commits":2898,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":81,"nospace":59,"commits":74,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":731,"nounderscore":3373,"commits":409,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3678,"use":47,"commits":789,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":149,"use":2265,"commits":587,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-06","convention":{"lang":"rb","indent":{"tab":6128,"space":229905,"commits":4195,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":261460,"char120":18183,"char150":6006,"commits":4422,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":32801,"nospace":75436,"commits":3786,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":80,"nospace":46,"commits":64,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":442,"nounderscore":10020,"commits":493,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5372,"use":47,"commits":1058,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":204,"use":4018,"commits":787,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-05","convention":{"lang":"rb","indent":{"tab":12097,"space":209267,"commits":4600,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":255075,"char120":12704,"char150":2949,"commits":4798,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":24550,"nospace":74017,"commits":4107,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":156,"nospace":74,"commits":69,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":19,"nounderscore":2160,"commits":592,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5739,"use":108,"commits":1200,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":153,"use":4266,"commits":854,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-04","convention":{"lang":"rb","indent":{"tab":5407,"space":179231,"commits":3854,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":211746,"char120":15527,"char150":5153,"commits":4069,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":19408,"nospace":66726,"commits":3557,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":93,"nospace":93,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":442,"nounderscore":2134,"commits":496,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4753,"use":197,"commits":934,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":105,"use":3020,"commits":775,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-03","convention":{"lang":"rb","indent":{"tab":14610,"space":139916,"commits":3411,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":162974,"char120":11022,"char150":3039,"commits":3601,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":18324,"nospace":47783,"commits":3059,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":73,"nospace":54,"commits":66,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":211,"nounderscore":2543,"commits":372,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2911,"use":39,"commits":736,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":156,"use":2721,"commits":589,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-02","convention":{"lang":"rb","indent":{"tab":19121,"space":239843,"commits":3692,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":284729,"char120":15982,"char150":3216,"commits":3867,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":31582,"nospace":79896,"commits":3379,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":139,"nospace":178,"commits":74,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":1072,"nounderscore":7844,"commits":427,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5833,"use":48,"commits":897,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":192,"use":5608,"commits":720,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-04-01","convention":{"lang":"rb","indent":{"tab":2181,"space":169764,"commits":2984,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":193467,"char120":13696,"char150":2662,"commits":3144,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":20688,"nospace":55102,"commits":2701,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":96,"nospace":61,"commits":43,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":53,"nounderscore":1644,"commits":412,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4839,"use":25,"commits":741,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":94,"use":3802,"commits":536,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-31","convention":{"lang":"rb","indent":{"tab":3176,"space":126369,"commits":2498,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":145724,"char120":10394,"char150":2375,"commits":2626,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13838,"nospace":41744,"commits":2313,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":122,"nospace":23,"commits":40,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":117,"nounderscore":2538,"commits":296,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3109,"use":43,"commits":641,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":152,"use":2492,"commits":473,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-30","convention":{"lang":"rb","indent":{"tab":6204,"space":215441,"commits":4695,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":261171,"char120":14059,"char150":2990,"commits":4986,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":26699,"nospace":73128,"commits":4253,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":122,"nospace":77,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":287,"nounderscore":1774,"commits":620,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7027,"use":101,"commits":1268,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":373,"use":3258,"commits":903,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-29","convention":{"lang":"rb","indent":{"tab":14318,"space":227119,"commits":4783,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":286405,"char120":14774,"char150":2936,"commits":5023,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":26203,"nospace":87290,"commits":4385,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":140,"nospace":64,"commits":70,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":30,"nounderscore":2475,"commits":576,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7582,"use":40,"commits":1324,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":296,"use":4148,"commits":908,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-28","convention":{"lang":"rb","indent":{"tab":3868,"space":154237,"commits":3435,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":193495,"char120":12115,"char150":2792,"commits":3686,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":17566,"nospace":53395,"commits":3095,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":60,"nospace":57,"commits":61,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":86,"nounderscore":2742,"commits":503,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":3939,"use":52,"commits":875,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":112,"use":2167,"commits":677,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-27","convention":{"lang":"rb","indent":{"tab":10200,"space":120929,"commits":2539,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":152046,"char120":11363,"char150":2437,"commits":2687,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":13412,"nospace":44385,"commits":2361,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":51,"nospace":46,"commits":53,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":1644,"commits":323,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":2980,"use":44,"commits":580,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":174,"use":1966,"commits":518,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-26","convention":{"lang":"rb","indent":{"tab":4480,"space":194182,"commits":5101,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":232016,"char120":15503,"char150":3872,"commits":5394,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":23417,"nospace":70978,"commits":4648,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":56,"nospace":53,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":88,"nounderscore":3486,"commits":617,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4571,"use":35,"commits":1120,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":330,"use":2612,"commits":950,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-25","convention":{"lang":"rb","indent":{"tab":4145,"space":248794,"commits":5001,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":289934,"char120":19822,"char150":4742,"commits":5325,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":33093,"nospace":83304,"commits":4576,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":120,"nospace":101,"commits":126,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":206,"nounderscore":4722,"commits":625,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5569,"use":31,"commits":1140,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":348,"use":4152,"commits":900,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-24","convention":{"lang":"rb","indent":{"tab":5481,"space":328483,"commits":5846,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":378218,"char120":24987,"char150":4654,"commits":6179,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":36286,"nospace":113839,"commits":5307,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":214,"nospace":126,"commits":116,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":394,"nounderscore":4470,"commits":689,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7997,"use":36,"commits":1316,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":327,"use":7827,"commits":1080,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-23","convention":{"lang":"rb","indent":{"tab":5595,"space":229779,"commits":4845,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":273477,"char120":15012,"char150":4434,"commits":5092,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":29381,"nospace":80213,"commits":4453,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":111,"nospace":84,"commits":78,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":561,"nounderscore":4687,"commits":682,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7929,"use":58,"commits":1327,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":343,"use":4145,"commits":864,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-22","convention":{"lang":"rb","indent":{"tab":8680,"space":219519,"commits":5063,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":289359,"char120":15854,"char150":3883,"commits":5323,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":21829,"nospace":82033,"commits":4601,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":79,"nospace":24,"commits":63,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":77,"nounderscore":3898,"commits":703,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6469,"use":27,"commits":1359,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":214,"use":2591,"commits":864,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-21","convention":{"lang":"rb","indent":{"tab":6056,"space":257792,"commits":5528,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":298975,"char120":18747,"char150":4408,"commits":5807,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":36998,"nospace":81873,"commits":5070,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":160,"nospace":154,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":180,"nounderscore":4237,"commits":645,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5892,"use":21,"commits":1291,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":253,"use":4830,"commits":1013,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-20","convention":{"lang":"rb","indent":{"tab":4320,"space":308078,"commits":5297,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":356327,"char120":24608,"char150":6159,"commits":5564,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":44853,"nospace":102391,"commits":4895,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":169,"nospace":202,"commits":85,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":1032,"nounderscore":5003,"commits":591,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7892,"use":48,"commits":1273,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":167,"use":6822,"commits":920,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-19","convention":{"lang":"rb","indent":{"tab":4338,"space":450241,"commits":6041,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":509820,"char120":37214,"char150":8363,"commits":6364,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":61752,"nospace":156454,"commits":5597,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":318,"nospace":290,"commits":105,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":2028,"nounderscore":9063,"commits":804,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":10621,"use":84,"commits":1421,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":455,"use":11355,"commits":1090,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-18","convention":{"lang":"rb","indent":{"tab":3644,"space":293402,"commits":6350,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":349451,"char120":25371,"char150":6708,"commits":6664,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":36127,"nospace":106833,"commits":5804,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":205,"nospace":88,"commits":122,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":274,"nounderscore":2731,"commits":781,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6765,"use":29,"commits":1411,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":273,"use":5234,"commits":1194,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-17","convention":{"lang":"rb","indent":{"tab":5142,"space":365489,"commits":5592,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":426147,"char120":28593,"char150":6145,"commits":5917,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":48844,"nospace":116939,"commits":5167,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":231,"nospace":264,"commits":111,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":123,"nounderscore":4458,"commits":849,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":8853,"use":125,"commits":1381,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":579,"use":7792,"commits":1045,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-16","convention":{"lang":"rb","indent":{"tab":14033,"space":264461,"commits":5478,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":330209,"char120":21268,"char150":3216,"commits":5786,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":31183,"nospace":88796,"commits":4736,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":116,"nospace":147,"commits":69,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":1926,"commits":674,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7538,"use":123,"commits":1358,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":164,"use":4077,"commits":880,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-15","convention":{"lang":"rb","indent":{"tab":8866,"space":257011,"commits":5318,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":312241,"char120":16115,"char150":3379,"commits":5576,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":25601,"nospace":105702,"commits":4753,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":97,"nospace":53,"commits":72,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":33,"nounderscore":21724,"commits":708,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":6654,"use":24,"commits":1332,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":162,"use":3717,"commits":853,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-14","convention":{"lang":"rb","indent":{"tab":5294,"space":216554,"commits":4648,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":256299,"char120":16779,"char150":3622,"commits":4889,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":26379,"nospace":74044,"commits":4208,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":99,"nospace":112,"commits":90,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":73,"nounderscore":2481,"commits":574,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":4888,"use":80,"commits":1147,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":217,"use":3727,"commits":840,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-13","convention":{"lang":"rb","indent":{"tab":6584,"space":284968,"commits":5915,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":329833,"char120":21847,"char150":6013,"commits":6191,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":38568,"nospace":98828,"commits":5354,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":102,"nospace":120,"commits":86,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":1621,"nounderscore":4083,"commits":671,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":7063,"use":103,"commits":1400,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":444,"use":5097,"commits":1023,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-12","convention":{"lang":"rb","indent":{"tab":5133,"space":427795,"commits":5618,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":480212,"char120":34286,"char150":6477,"commits":5959,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":66969,"nospace":127730,"commits":5071,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":300,"nospace":259,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":684,"nounderscore":4930,"commits":649,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":9089,"use":72,"commits":1369,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":302,"use":9844,"commits":1005,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-11","convention":{"lang":"rb","indent":{"tab":5329,"space":257264,"commits":5510,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":303756,"char120":20117,"char150":4234,"commits":5830,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":33315,"nospace":82309,"commits":4936,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":174,"nospace":145,"commits":92,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":54,"nounderscore":2888,"commits":637,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":5838,"use":88,"commits":1396,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":225,"use":5061,"commits":960,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-10","convention":{"lang":"rb","indent":{"tab":3956,"space":431227,"commits":5766,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":490230,"char120":32271,"char150":6279,"commits":6088,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":64286,"nospace":130749,"commits":5120,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":256,"nospace":317,"commits":165,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":195,"nounderscore":5611,"commits":745,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":9744,"use":67,"commits":1427,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":197,"use":10016,"commits":1049,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-09","convention":{"lang":"rb","indent":{"tab":36673,"space":307030,"commits":5024,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":365088,"char120":21711,"char150":4830,"commits":5267,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":40468,"nospace":101824,"commits":4638,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":183,"nospace":166,"commits":85,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":505,"nounderscore":6545,"commits":650,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":9664,"use":43,"commits":1461,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":245,"use":6008,"commits":943,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-08","convention":{"lang":"rb","indent":{"tab":9143,"space":295177,"commits":5405,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"linelength":{"char80":363191,"char120":20971,"char150":4435,"commits":5676,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"whitespace":{"spaces":40291,"nospace":95181,"commits":4961,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]},"asignDefaultValue":{"space":104,"nospace":140,"commits":103,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"numericLiteral":{"underscore":66,"nounderscore":7788,"commits":742,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"defNoArgs":{"omit":8574,"use":70,"commits":1562,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defArgs":{"omit":1185,"use":3268,"commits":834,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]}}},{"lang":"rb","file":"2014-03-07","convention":{"asignDefaultValue":{"space":102,"nospace":56,"commits":88,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5608,"use":33,"commits":1543,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":3318,"space":221840,"commits":5948,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":260712,"char120":18545,"char150":4994,"commits":6267,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":37,"nounderscore":3494,"commits":703,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":24322,"nospace":80544,"commits":5239,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-03-06","convention":{"asignDefaultValue":{"space":232,"nospace":314,"commits":97,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8139,"use":209,"commits":1127,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":56820,"space":392942,"commits":4701,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":450096,"char120":28458,"char150":5891,"commits":4976,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":1314,"nounderscore":10606,"commits":558,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":66151,"nospace":119646,"commits":4345,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-03-05","convention":{"asignDefaultValue":{"space":213,"nospace":215,"commits":117,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8707,"use":209,"commits":1390,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14909,"space":376620,"commits":5575,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":438710,"char120":28276,"char150":5519,"commits":5833,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":160,"nounderscore":4088,"commits":704,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":53390,"nospace":114258,"commits":5114,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-03-04","convention":{"asignDefaultValue":{"space":214,"nospace":179,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7110,"use":73,"commits":1117,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6642,"space":344266,"commits":4990,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":389290,"char120":27459,"char150":5618,"commits":5202,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":174,"nounderscore":6166,"commits":618,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":50947,"nospace":104436,"commits":4430,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-03-03","convention":{"asignDefaultValue":{"space":55,"nospace":47,"commits":33,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":3528,"use":65,"commits":546,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":2737,"space":154658,"commits":2348,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":181650,"char120":12315,"char150":1724,"commits":2490,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":12,"nounderscore":3744,"commits":305,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":24592,"nospace":47173,"commits":2133,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-03-01","convention":{"asignDefaultValue":{"space":9,"nospace":0,"commits":4,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":339,"use":2,"commits":62,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":442,"space":16260,"commits":216,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":18885,"char120":1416,"char150":419,"commits":230,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":21,"nounderscore":162,"commits":24,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":2869,"nospace":5174,"commits":209,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-28","convention":{"asignDefaultValue":{"space":6,"nospace":2,"commits":8,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":269,"use":0,"commits":56,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7,"space":8907,"commits":266,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":10362,"char120":580,"char150":116,"commits":282,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":0,"nounderscore":36,"commits":21,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":949,"nospace":2799,"commits":239,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-26","convention":{"asignDefaultValue":{"space":27,"nospace":6,"commits":5,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":636,"use":1,"commits":59,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":68,"space":27951,"commits":198,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":30146,"char120":2840,"char150":450,"commits":207,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":0,"nounderscore":200,"commits":27,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":2455,"nospace":9598,"commits":175,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-24","convention":{"asignDefaultValue":{"space":4,"nospace":1,"commits":4,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":195,"use":1,"commits":51,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":145,"space":8457,"commits":243,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":8974,"char120":881,"char150":239,"commits":256,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":3,"nounderscore":42,"commits":20,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":783,"nospace":3257,"commits":221,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-22","convention":{"asignDefaultValue":{"space":2,"nospace":3,"commits":5,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":423,"use":2,"commits":88,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":86,"space":9420,"commits":243,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":12315,"char120":407,"char150":70,"commits":256,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":82,"commits":45,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":924,"nospace":3669,"commits":237,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-21","convention":{"asignDefaultValue":{"space":1,"nospace":7,"commits":6,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":233,"use":3,"commits":73,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":140,"space":7487,"commits":292,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":9056,"char120":550,"char150":70,"commits":306,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":22,"nounderscore":53,"commits":39,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":979,"nospace":2775,"commits":251,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-20","convention":{"asignDefaultValue":{"space":3,"nospace":6,"commits":4,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":150,"use":9,"commits":47,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":91,"space":6170,"commits":220,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":6881,"char120":601,"char150":157,"commits":236,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":0,"nounderscore":41,"commits":19,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":847,"nospace":2420,"commits":202,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-18","convention":{"asignDefaultValue":{"space":3,"nospace":11,"commits":10,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":295,"use":5,"commits":57,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":1185,"space":24772,"commits":257,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":29581,"char120":1609,"char150":267,"commits":270,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":5,"nounderscore":204,"commits":26,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":3000,"nospace":7306,"commits":231,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-17","convention":{"asignDefaultValue":{"space":16,"nospace":23,"commits":6,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":434,"use":7,"commits":61,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":549,"space":25817,"commits":264,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":27409,"char120":1870,"char150":353,"commits":281,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":290,"commits":39,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":4946,"nospace":7632,"commits":255,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-16","convention":{"asignDefaultValue":{"space":5,"nospace":3,"commits":6,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":486,"use":8,"commits":94,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":580,"space":14155,"commits":273,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":16928,"char120":1170,"char150":144,"commits":282,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":113,"commits":49,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":1352,"nospace":5400,"commits":252,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-14","convention":{"asignDefaultValue":{"space":1,"nospace":4,"commits":5,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":235,"use":0,"commits":54,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":71,"space":8307,"commits":247,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":10480,"char120":620,"char150":122,"commits":256,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":1,"nounderscore":96,"commits":33,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":751,"nospace":2667,"commits":219,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-13","convention":{"asignDefaultValue":{"space":88,"nospace":41,"commits":57,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":3681,"use":49,"commits":743,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":3685,"space":144520,"commits":3073,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":172227,"char120":10330,"char150":2376,"commits":3214,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":104,"nounderscore":2068,"commits":377,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":18973,"nospace":47358,"commits":2747,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-12","convention":{"asignDefaultValue":{"space":140,"nospace":49,"commits":104,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5639,"use":42,"commits":1381,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6186,"space":225810,"commits":5871,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":267716,"char120":19267,"char150":4446,"commits":6128,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":152,"nounderscore":2247,"commits":668,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25865,"nospace":83226,"commits":5292,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-11","convention":{"asignDefaultValue":{"space":197,"nospace":70,"commits":86,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5559,"use":42,"commits":1191,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12609,"space":231173,"commits":5299,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":274137,"char120":18142,"char150":4019,"commits":5598,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":46,"nounderscore":2062,"commits":570,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25019,"nospace":78572,"commits":4758,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-10","convention":{"asignDefaultValue":{"space":189,"nospace":90,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6845,"use":46,"commits":1405,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4826,"space":307347,"commits":5642,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":358363,"char120":25381,"char150":7422,"commits":5923,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":35,"nounderscore":6310,"commits":740,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":43182,"nospace":105970,"commits":5073,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-09","convention":{"asignDefaultValue":{"space":85,"nospace":78,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7892,"use":59,"commits":1432,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13074,"space":276014,"commits":5236,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":335492,"char120":18408,"char150":4566,"commits":5526,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":40,"nounderscore":4960,"commits":752,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35936,"nospace":96323,"commits":4725,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-08","convention":{"asignDefaultValue":{"space":183,"nospace":65,"commits":92,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8438,"use":102,"commits":1599,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":11793,"space":341897,"commits":5424,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":412770,"char120":23705,"char150":5278,"commits":5746,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":31,"nounderscore":7031,"commits":826,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44875,"nospace":113581,"commits":4931,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-07","convention":{"asignDefaultValue":{"space":261,"nospace":100,"commits":133,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11316,"use":129,"commits":1518,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8134,"space":395433,"commits":5677,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":464912,"char120":30361,"char150":6517,"commits":6015,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":40,"nounderscore":5427,"commits":682,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":47751,"nospace":136988,"commits":5189,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-06","convention":{"asignDefaultValue":{"space":247,"nospace":100,"commits":126,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7094,"use":49,"commits":1537,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4289,"space":300972,"commits":5776,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":349295,"char120":25146,"char150":6231,"commits":6135,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":61,"nounderscore":5185,"commits":731,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":38873,"nospace":102082,"commits":5257,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-05","convention":{"asignDefaultValue":{"space":117,"nospace":115,"commits":129,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6900,"use":59,"commits":1319,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9822,"space":219318,"commits":5562,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":257728,"char120":16926,"char150":4645,"commits":5867,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":74,"nounderscore":2925,"commits":700,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":24755,"nospace":79251,"commits":5002,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-04","convention":{"asignDefaultValue":{"space":197,"nospace":123,"commits":124,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7675,"use":63,"commits":1389,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8673,"space":265013,"commits":5669,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":314547,"char120":20967,"char150":5441,"commits":6027,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":42,"nounderscore":2950,"commits":694,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32110,"nospace":93058,"commits":5178,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-03","convention":{"asignDefaultValue":{"space":150,"nospace":199,"commits":153,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9287,"use":71,"commits":1344,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7141,"space":300249,"commits":5532,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":351241,"char120":25879,"char150":6974,"commits":5774,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":46,"nounderscore":2860,"commits":682,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34725,"nospace":113363,"commits":4965,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-02","convention":{"asignDefaultValue":{"space":133,"nospace":66,"commits":112,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6465,"use":77,"commits":1438,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10747,"space":233599,"commits":5254,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":287658,"char120":17334,"char150":4460,"commits":5599,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":34,"nounderscore":2786,"commits":673,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27130,"nospace":82960,"commits":4768,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-02-01","convention":{"asignDefaultValue":{"space":299,"nospace":106,"commits":124,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8948,"use":284,"commits":1572,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9867,"space":294885,"commits":5465,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":355284,"char120":21110,"char150":5028,"commits":5824,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":52,"nounderscore":3507,"commits":769,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29821,"nospace":100992,"commits":4952,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-31","convention":{"asignDefaultValue":{"space":213,"nospace":111,"commits":142,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6570,"use":52,"commits":1335,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9543,"space":266829,"commits":5341,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":312297,"char120":24393,"char150":4935,"commits":5620,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":77,"nounderscore":3636,"commits":750,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30327,"nospace":101007,"commits":4846,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-30","convention":{"asignDefaultValue":{"space":113,"nospace":99,"commits":107,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5787,"use":221,"commits":1114,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5033,"space":222964,"commits":5093,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":260786,"char120":18963,"char150":7213,"commits":5427,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":4545,"commits":590,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25405,"nospace":86006,"commits":4645,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-29","convention":{"asignDefaultValue":{"space":161,"nospace":64,"commits":103,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6742,"use":50,"commits":1409,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8592,"space":259703,"commits":5692,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":299639,"char120":24016,"char150":7353,"commits":5983,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":3431,"commits":656,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27099,"nospace":98955,"commits":5206,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-28","convention":{"asignDefaultValue":{"space":137,"nospace":98,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7662,"use":112,"commits":1257,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":15147,"space":296174,"commits":4960,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":347961,"char120":22292,"char150":5986,"commits":5240,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":42,"nounderscore":4173,"commits":628,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33536,"nospace":102875,"commits":4562,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-27","convention":{"asignDefaultValue":{"space":245,"nospace":108,"commits":121,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6943,"use":56,"commits":1328,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10462,"space":318306,"commits":6048,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":369140,"char120":27148,"char150":7101,"commits":6392,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":4026,"commits":744,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":37937,"nospace":113184,"commits":5514,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-26","convention":{"asignDefaultValue":{"space":243,"nospace":46,"commits":94,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5931,"use":109,"commits":1423,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13878,"space":228054,"commits":4888,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":280023,"char120":16183,"char150":3670,"commits":5165,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":12,"nounderscore":2601,"commits":694,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29453,"nospace":77262,"commits":4468,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-25","convention":{"asignDefaultValue":{"space":61,"nospace":43,"commits":72,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5836,"use":71,"commits":1395,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10585,"space":208532,"commits":4771,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":260862,"char120":14515,"char150":3223,"commits":5039,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":17,"nounderscore":2088,"commits":683,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23742,"nospace":75953,"commits":4347,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-24","convention":{"asignDefaultValue":{"space":130,"nospace":72,"commits":90,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6560,"use":41,"commits":1318,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7961,"space":231623,"commits":5181,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":283769,"char120":19204,"char150":3944,"commits":5470,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":36,"nounderscore":2637,"commits":637,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26126,"nospace":84703,"commits":4711,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-23","convention":{"asignDefaultValue":{"space":176,"nospace":124,"commits":122,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8133,"use":28,"commits":1286,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8496,"space":317672,"commits":5462,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":372603,"char120":25401,"char150":5728,"commits":5765,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":65,"nounderscore":6814,"commits":602,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":37505,"nospace":105566,"commits":4966,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-22","convention":{"asignDefaultValue":{"space":98,"nospace":82,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6127,"use":44,"commits":1201,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5435,"space":267724,"commits":5170,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":321774,"char120":20229,"char150":4507,"commits":5437,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":62,"nounderscore":7986,"commits":645,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44672,"nospace":85166,"commits":4628,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-21","convention":{"asignDefaultValue":{"space":220,"nospace":118,"commits":117,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6483,"use":46,"commits":1446,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7805,"space":243110,"commits":5945,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":277292,"char120":19616,"char150":5675,"commits":6226,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":2360,"commits":691,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25702,"nospace":95035,"commits":5361,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-20","convention":{"asignDefaultValue":{"space":96,"nospace":54,"commits":98,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7419,"use":95,"commits":1437,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7772,"space":263252,"commits":5564,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":304025,"char120":21027,"char150":5835,"commits":5813,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":44,"nounderscore":2674,"commits":706,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30579,"nospace":95567,"commits":5024,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-19","convention":{"asignDefaultValue":{"space":93,"nospace":39,"commits":64,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6297,"use":80,"commits":1226,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7302,"space":219319,"commits":4681,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":263027,"char120":16440,"char150":4020,"commits":4948,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":45,"nounderscore":2191,"commits":590,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":24556,"nospace":79833,"commits":4240,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-18","convention":{"asignDefaultValue":{"space":71,"nospace":24,"commits":70,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6164,"use":31,"commits":1472,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8714,"space":179993,"commits":5064,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":228590,"char120":13298,"char150":2974,"commits":5316,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":12,"nounderscore":1623,"commits":699,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":19676,"nospace":68579,"commits":4510,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-17","convention":{"asignDefaultValue":{"space":220,"nospace":56,"commits":99,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7156,"use":77,"commits":1434,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6843,"space":320076,"commits":5610,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":374466,"char120":29616,"char150":6184,"commits":5917,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":59,"nounderscore":3313,"commits":725,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36762,"nospace":115402,"commits":5180,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-16","convention":{"asignDefaultValue":{"space":150,"nospace":115,"commits":125,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6099,"use":66,"commits":1337,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9980,"space":254395,"commits":5684,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":298204,"char120":22590,"char150":6633,"commits":5951,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":130,"nounderscore":3051,"commits":663,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32928,"nospace":92718,"commits":5209,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-15","convention":{"asignDefaultValue":{"space":101,"nospace":74,"commits":94,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":4451,"use":30,"commits":1194,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4468,"space":198553,"commits":5220,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":233704,"char120":16537,"char150":3716,"commits":5496,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":34,"nounderscore":2086,"commits":565,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23878,"nospace":70294,"commits":4615,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-14","convention":{"asignDefaultValue":{"space":208,"nospace":92,"commits":98,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7843,"use":146,"commits":1437,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6980,"space":289682,"commits":5815,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":338319,"char120":25600,"char150":6290,"commits":6098,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":84,"nounderscore":2891,"commits":838,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33130,"nospace":104110,"commits":5209,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-13","convention":{"asignDefaultValue":{"space":156,"nospace":74,"commits":124,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7259,"use":94,"commits":1336,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5568,"space":262533,"commits":5794,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":308625,"char120":20529,"char150":4768,"commits":6073,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":4889,"commits":645,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32501,"nospace":87698,"commits":5238,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-12","convention":{"asignDefaultValue":{"space":119,"nospace":56,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6743,"use":54,"commits":1446,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13905,"space":217345,"commits":5078,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":269646,"char120":13994,"char150":2991,"commits":5349,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":2436,"commits":701,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25492,"nospace":76695,"commits":4557,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-11","convention":{"asignDefaultValue":{"space":132,"nospace":126,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7464,"use":35,"commits":1520,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9046,"space":238414,"commits":5339,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":306961,"char120":17842,"char150":3723,"commits":5602,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":35,"nounderscore":2820,"commits":772,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27000,"nospace":88504,"commits":4884,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-10","convention":{"asignDefaultValue":{"space":241,"nospace":151,"commits":128,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8527,"use":66,"commits":1267,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6236,"space":343007,"commits":5107,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":392617,"char120":29600,"char150":5551,"commits":5355,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":163,"nounderscore":2976,"commits":640,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":38167,"nospace":121719,"commits":4650,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-09","convention":{"asignDefaultValue":{"space":232,"nospace":94,"commits":120,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7190,"use":58,"commits":1273,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7067,"space":280754,"commits":5262,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":319672,"char120":25487,"char150":5026,"commits":5554,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":172,"nounderscore":3411,"commits":697,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35240,"nospace":99587,"commits":4815,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-08","convention":{"asignDefaultValue":{"space":266,"nospace":57,"commits":104,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9222,"use":185,"commits":1458,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12783,"space":314934,"commits":6166,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":359108,"char120":25959,"char150":5920,"commits":6491,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":61,"nounderscore":2544,"commits":713,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35670,"nospace":109279,"commits":5670,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-07","convention":{"asignDefaultValue":{"space":196,"nospace":128,"commits":127,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6982,"use":70,"commits":1283,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":3983,"space":288511,"commits":5649,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":331914,"char120":23284,"char150":5410,"commits":5977,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":105,"nounderscore":2892,"commits":668,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34867,"nospace":100283,"commits":5099,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-06","convention":{"asignDefaultValue":{"space":169,"nospace":63,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6452,"use":31,"commits":1367,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4261,"space":235480,"commits":5547,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":276121,"char120":18216,"char150":4509,"commits":5881,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":54,"nounderscore":2903,"commits":669,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26529,"nospace":84507,"commits":5085,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-05","convention":{"asignDefaultValue":{"space":153,"nospace":50,"commits":85,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6731,"use":45,"commits":1482,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9529,"space":219228,"commits":5294,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":271183,"char120":15946,"char150":4434,"commits":5611,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":31,"nounderscore":2241,"commits":727,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26304,"nospace":78686,"commits":4865,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-04","convention":{"asignDefaultValue":{"space":168,"nospace":74,"commits":100,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9000,"use":136,"commits":1713,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12390,"space":321236,"commits":5594,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":380412,"char120":26261,"char150":7776,"commits":5861,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":65,"nounderscore":11398,"commits":795,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44487,"nospace":106689,"commits":4986,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-03","convention":{"asignDefaultValue":{"space":163,"nospace":53,"commits":79,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8753,"use":52,"commits":1416,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5364,"space":256691,"commits":5445,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":313868,"char120":17832,"char150":4131,"commits":5713,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":58,"nounderscore":3195,"commits":715,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28448,"nospace":92049,"commits":4911,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-02","convention":{"asignDefaultValue":{"space":157,"nospace":94,"commits":126,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8073,"use":51,"commits":1441,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6235,"space":266216,"commits":5295,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":323090,"char120":18073,"char150":3997,"commits":5599,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":57,"nounderscore":7665,"commits":678,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44013,"nospace":88345,"commits":4829,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2014-01-01","convention":{"asignDefaultValue":{"space":145,"nospace":91,"commits":78,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7360,"use":289,"commits":1558,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10665,"space":232751,"commits":5410,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":301592,"char120":21124,"char150":3592,"commits":5700,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":89,"nounderscore":10359,"commits":856,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28381,"nospace":90648,"commits":4974,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-31","convention":{"asignDefaultValue":{"space":201,"nospace":61,"commits":96,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9044,"use":38,"commits":1528,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8164,"space":279071,"commits":5256,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":336018,"char120":20728,"char150":4411,"commits":5582,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":70,"nounderscore":2986,"commits":759,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":31065,"nospace":101898,"commits":4899,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-30","convention":{"asignDefaultValue":{"space":161,"nospace":53,"commits":133,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6959,"use":88,"commits":1572,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9671,"space":243881,"commits":5772,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":288584,"char120":17992,"char150":5296,"commits":6083,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":61,"nounderscore":2207,"commits":814,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27434,"nospace":87023,"commits":5323,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-29","convention":{"asignDefaultValue":{"space":94,"nospace":55,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10313,"use":44,"commits":1570,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":11492,"space":280516,"commits":5115,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":356252,"char120":18669,"char150":3815,"commits":5405,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":37,"nounderscore":3417,"commits":803,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32280,"nospace":105018,"commits":4767,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-28","convention":{"asignDefaultValue":{"space":192,"nospace":36,"commits":99,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9205,"use":101,"commits":1797,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13245,"space":295694,"commits":5637,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":369615,"char120":19547,"char150":3884,"commits":5952,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":30,"nounderscore":2388,"commits":843,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33250,"nospace":108000,"commits":5141,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-27","convention":{"asignDefaultValue":{"space":175,"nospace":105,"commits":86,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8075,"use":52,"commits":1452,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8500,"space":307580,"commits":5020,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":372673,"char120":20805,"char150":3999,"commits":5377,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":61,"nounderscore":2616,"commits":743,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":40338,"nospace":101313,"commits":4612,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-26","convention":{"asignDefaultValue":{"space":187,"nospace":111,"commits":119,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10024,"use":74,"commits":1749,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14574,"space":322295,"commits":6129,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":392584,"char120":20573,"char150":4517,"commits":6462,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":42,"nounderscore":2432,"commits":879,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35842,"nospace":112000,"commits":5540,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-25","convention":{"asignDefaultValue":{"space":168,"nospace":55,"commits":89,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10847,"use":197,"commits":1920,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13423,"space":290499,"commits":5891,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":380786,"char120":20066,"char150":4281,"commits":6232,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":45,"nounderscore":2897,"commits":957,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35481,"nospace":110999,"commits":5469,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-24","convention":{"asignDefaultValue":{"space":414,"nospace":107,"commits":95,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":13917,"use":722,"commits":1800,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":11548,"space":384429,"commits":5949,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":481526,"char120":24651,"char150":5386,"commits":6272,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":96,"nounderscore":3985,"commits":907,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":52573,"nospace":130178,"commits":5476,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-23","convention":{"asignDefaultValue":{"space":200,"nospace":102,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9332,"use":60,"commits":1739,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6540,"space":314603,"commits":6143,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":394963,"char120":23174,"char150":5124,"commits":6490,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":47,"nounderscore":3371,"commits":907,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34212,"nospace":113771,"commits":5529,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-22","convention":{"asignDefaultValue":{"space":232,"nospace":59,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10964,"use":105,"commits":1611,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8263,"space":297916,"commits":5328,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":363558,"char120":20948,"char150":4132,"commits":5641,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":74,"nounderscore":2231,"commits":794,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32102,"nospace":106018,"commits":4932,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-21","convention":{"asignDefaultValue":{"space":121,"nospace":76,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8642,"use":128,"commits":1694,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9939,"space":245189,"commits":5318,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":320108,"char120":16561,"char150":3635,"commits":5656,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":32,"nounderscore":5054,"commits":831,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29779,"nospace":91004,"commits":4794,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-20","convention":{"asignDefaultValue":{"space":302,"nospace":211,"commits":164,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":12748,"use":185,"commits":1524,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7822,"space":413024,"commits":5873,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":477525,"char120":29466,"char150":6285,"commits":6224,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":92,"nounderscore":3519,"commits":752,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":53934,"nospace":132859,"commits":5301,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-19","convention":{"asignDefaultValue":{"space":351,"nospace":61,"commits":121,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10926,"use":125,"commits":1335,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10827,"space":286444,"commits":5574,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":333529,"char120":22966,"char150":5769,"commits":5951,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":19,"nounderscore":2351,"commits":715,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33100,"nospace":104711,"commits":4992,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-18","convention":{"asignDefaultValue":{"space":176,"nospace":173,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7188,"use":33,"commits":1289,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6936,"space":281630,"commits":5056,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":321981,"char120":20366,"char150":5413,"commits":5328,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":89,"nounderscore":5947,"commits":671,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":46183,"nospace":89888,"commits":4586,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-17","convention":{"asignDefaultValue":{"space":67,"nospace":70,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7068,"use":73,"commits":1319,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8738,"space":250221,"commits":5412,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":292571,"char120":19883,"char150":5509,"commits":5742,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":26,"nounderscore":4361,"commits":599,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35290,"nospace":87908,"commits":4871,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-16","convention":{"asignDefaultValue":{"space":157,"nospace":175,"commits":120,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8033,"use":106,"commits":1326,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7703,"space":323545,"commits":5621,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":374344,"char120":23801,"char150":5569,"commits":5931,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":123,"nounderscore":10425,"commits":721,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":61773,"nospace":103532,"commits":5026,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-15","convention":{"asignDefaultValue":{"space":150,"nospace":59,"commits":90,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7798,"use":153,"commits":1630,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9622,"space":260078,"commits":5382,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":315723,"char120":18719,"char150":3947,"commits":5692,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":31,"nounderscore":2388,"commits":799,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28026,"nospace":98398,"commits":4939,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-14","convention":{"asignDefaultValue":{"space":142,"nospace":60,"commits":76,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7632,"use":132,"commits":1755,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12830,"space":244671,"commits":5683,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":310632,"char120":17166,"char150":3531,"commits":5948,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":25,"nounderscore":2791,"commits":826,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29121,"nospace":90025,"commits":5129,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-13","convention":{"asignDefaultValue":{"space":113,"nospace":120,"commits":79,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8227,"use":139,"commits":1255,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4981,"space":263262,"commits":4847,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":310756,"char120":19464,"char150":5090,"commits":5145,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":29,"nounderscore":2928,"commits":577,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":37095,"nospace":87152,"commits":4419,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-12","convention":{"asignDefaultValue":{"space":145,"nospace":124,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9241,"use":68,"commits":1246,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4077,"space":293162,"commits":5080,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":336739,"char120":24047,"char150":4933,"commits":5385,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":48,"nounderscore":2402,"commits":593,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33485,"nospace":105795,"commits":4616,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-11","convention":{"asignDefaultValue":{"space":235,"nospace":171,"commits":102,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9954,"use":104,"commits":1362,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6790,"space":361686,"commits":5678,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":408717,"char120":27132,"char150":6305,"commits":6049,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":565,"nounderscore":4107,"commits":720,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":49626,"nospace":120178,"commits":5231,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-10","convention":{"asignDefaultValue":{"space":283,"nospace":184,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11034,"use":160,"commits":1430,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6936,"space":402677,"commits":6048,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":476845,"char120":30054,"char150":8151,"commits":6406,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":93,"nounderscore":4066,"commits":741,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":52117,"nospace":135375,"commits":5513,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-09","convention":{"asignDefaultValue":{"space":311,"nospace":323,"commits":114,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11254,"use":294,"commits":1702,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12016,"space":484639,"commits":6583,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":550945,"char120":34324,"char150":8962,"commits":6896,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":281,"nounderscore":6382,"commits":841,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":73784,"nospace":146445,"commits":5953,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-08","convention":{"asignDefaultValue":{"space":135,"nospace":134,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7179,"use":98,"commits":1639,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9427,"space":245118,"commits":5562,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":314414,"char120":17176,"char150":4607,"commits":5874,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":790,"nounderscore":3487,"commits":772,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30656,"nospace":87370,"commits":5047,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-07","convention":{"asignDefaultValue":{"space":198,"nospace":170,"commits":101,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10024,"use":109,"commits":1747,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14208,"space":350353,"commits":5687,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":436520,"char120":21098,"char150":4918,"commits":5987,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":117,"nounderscore":3703,"commits":831,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":45052,"nospace":124682,"commits":5147,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-06","convention":{"asignDefaultValue":{"space":124,"nospace":67,"commits":90,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8269,"use":44,"commits":1393,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6688,"space":293245,"commits":5648,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":347326,"char120":22180,"char150":5733,"commits":6092,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":26,"nounderscore":2031,"commits":695,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32077,"nospace":112440,"commits":4971,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-05","convention":{"asignDefaultValue":{"space":112,"nospace":106,"commits":66,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5663,"use":39,"commits":1210,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":3683,"space":220504,"commits":5039,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":276303,"char120":19443,"char150":5008,"commits":5326,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":32,"nounderscore":2739,"commits":604,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28794,"nospace":79288,"commits":4565,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-04","convention":{"asignDefaultValue":{"space":137,"nospace":57,"commits":84,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7286,"use":54,"commits":1566,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8763,"space":254615,"commits":6801,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":297122,"char120":22840,"char150":5890,"commits":7171,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":6,"nounderscore":2346,"commits":836,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":31678,"nospace":94397,"commits":6220,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-03","convention":{"asignDefaultValue":{"space":161,"nospace":62,"commits":105,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6646,"use":53,"commits":1362,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5712,"space":248023,"commits":6080,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":296289,"char120":21558,"char150":4910,"commits":6470,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":21,"nounderscore":2787,"commits":627,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28519,"nospace":89122,"commits":5565,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-02","convention":{"asignDefaultValue":{"space":200,"nospace":173,"commits":99,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7213,"use":219,"commits":1229,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10275,"space":293331,"commits":4868,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":332120,"char120":21943,"char150":6201,"commits":5119,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":96,"nounderscore":3047,"commits":605,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":40501,"nospace":93790,"commits":4365,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-12-01","convention":{"asignDefaultValue":{"space":192,"nospace":89,"commits":99,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8248,"use":270,"commits":1585,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":15592,"space":287538,"commits":5399,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":352068,"char120":19392,"char150":5116,"commits":5668,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":73,"nounderscore":3221,"commits":795,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34246,"nospace":108171,"commits":4902,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-30","convention":{"asignDefaultValue":{"space":312,"nospace":177,"commits":109,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8480,"use":36,"commits":1583,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8601,"space":300826,"commits":5470,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":362159,"char120":20309,"char150":4214,"commits":5764,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":127,"nounderscore":3809,"commits":858,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":41484,"nospace":101788,"commits":4828,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-29","convention":{"asignDefaultValue":{"space":136,"nospace":96,"commits":72,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6662,"use":48,"commits":1527,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13009,"space":223838,"commits":5653,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":293971,"char120":16832,"char150":3702,"commits":5936,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":12,"nounderscore":3122,"commits":727,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25852,"nospace":86900,"commits":5042,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-28","convention":{"asignDefaultValue":{"space":77,"nospace":81,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5681,"use":32,"commits":1257,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5951,"space":192545,"commits":4541,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":232662,"char120":14737,"char150":4400,"commits":4801,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":12,"nounderscore":2204,"commits":635,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":20165,"nospace":80665,"commits":4077,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-27","convention":{"asignDefaultValue":{"space":267,"nospace":58,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7481,"use":59,"commits":1256,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12273,"space":270603,"commits":5184,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":323914,"char120":20736,"char150":6496,"commits":5492,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":2583,"commits":697,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32702,"nospace":103978,"commits":4725,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-26","convention":{"asignDefaultValue":{"space":140,"nospace":99,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6592,"use":256,"commits":1377,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7531,"space":259449,"commits":5582,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":308232,"char120":18773,"char150":5491,"commits":5834,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":50,"nounderscore":3098,"commits":666,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27566,"nospace":96953,"commits":5025,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-25","convention":{"asignDefaultValue":{"space":171,"nospace":178,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8636,"use":98,"commits":1396,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13427,"space":339501,"commits":5275,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":390107,"char120":24387,"char150":9092,"commits":5546,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":110,"nounderscore":7034,"commits":713,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":46428,"nospace":114177,"commits":4853,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-24","convention":{"asignDefaultValue":{"space":213,"nospace":58,"commits":120,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10290,"use":162,"commits":1848,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":24288,"space":305868,"commits":6303,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":372172,"char120":23493,"char150":5354,"commits":6628,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":21,"nounderscore":2865,"commits":952,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35590,"nospace":114440,"commits":5804,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-23","convention":{"asignDefaultValue":{"space":248,"nospace":271,"commits":95,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10764,"use":112,"commits":1656,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":21743,"space":380711,"commits":5523,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":444226,"char120":25142,"char150":5458,"commits":5859,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":195,"nounderscore":3916,"commits":789,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":58869,"nospace":113901,"commits":5066,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-22","convention":{"asignDefaultValue":{"space":381,"nospace":386,"commits":122,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9808,"use":655,"commits":1397,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":21700,"space":458402,"commits":5655,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":516362,"char120":31857,"char150":8636,"commits":5960,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":225,"nounderscore":5682,"commits":704,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":73192,"nospace":139208,"commits":5083,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-21","convention":{"asignDefaultValue":{"space":179,"nospace":137,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7038,"use":85,"commits":1410,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7115,"space":320126,"commits":5977,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":373719,"char120":23378,"char150":6495,"commits":6337,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":92,"nounderscore":4060,"commits":778,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":41613,"nospace":110063,"commits":5410,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-20","convention":{"asignDefaultValue":{"space":110,"nospace":78,"commits":103,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6355,"use":34,"commits":1460,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7720,"space":262865,"commits":5923,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":307856,"char120":22580,"char150":5553,"commits":6203,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":35,"nounderscore":2446,"commits":661,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29049,"nospace":96017,"commits":5276,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-19","convention":{"asignDefaultValue":{"space":292,"nospace":288,"commits":116,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9219,"use":113,"commits":1449,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8543,"space":403517,"commits":5839,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":457893,"char120":28224,"char150":5768,"commits":6167,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":247,"nounderscore":4012,"commits":745,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":64579,"nospace":120263,"commits":5244,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-18","convention":{"asignDefaultValue":{"space":200,"nospace":105,"commits":84,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6508,"use":91,"commits":1125,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5823,"space":270455,"commits":4782,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":308144,"char120":21345,"char150":4483,"commits":5041,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":95,"nounderscore":3267,"commits":537,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36382,"nospace":86121,"commits":4337,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-17","convention":{"asignDefaultValue":{"space":56,"nospace":59,"commits":69,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5528,"use":104,"commits":1341,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8132,"space":178850,"commits":4968,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":227790,"char120":13733,"char150":6450,"commits":5249,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":14,"nounderscore":1976,"commits":661,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":22209,"nospace":70867,"commits":4516,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-16","convention":{"asignDefaultValue":{"space":117,"nospace":40,"commits":77,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7752,"use":31,"commits":1703,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12372,"space":251118,"commits":5593,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":311390,"char120":18327,"char150":3740,"commits":5863,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":38,"nounderscore":2501,"commits":868,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28805,"nospace":94365,"commits":5029,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-15","convention":{"asignDefaultValue":{"space":211,"nospace":73,"commits":130,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7241,"use":97,"commits":1537,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10789,"space":290746,"commits":5815,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":337219,"char120":24192,"char150":5655,"commits":6113,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":165,"nounderscore":4001,"commits":748,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35042,"nospace":104226,"commits":5293,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-14","convention":{"asignDefaultValue":{"space":172,"nospace":121,"commits":107,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7296,"use":117,"commits":1381,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7178,"space":304585,"commits":5847,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":357003,"char120":23703,"char150":4800,"commits":6189,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":58,"nounderscore":3377,"commits":741,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36192,"nospace":106273,"commits":5301,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-13","convention":{"asignDefaultValue":{"space":223,"nospace":226,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8220,"use":44,"commits":1260,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8725,"space":345598,"commits":5230,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":392976,"char120":23836,"char150":5564,"commits":5498,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":176,"nounderscore":3496,"commits":629,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":50118,"nospace":109179,"commits":4742,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-12","convention":{"asignDefaultValue":{"space":269,"nospace":114,"commits":110,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6588,"use":64,"commits":1159,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13438,"space":234614,"commits":4662,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":276259,"char120":18357,"char150":4158,"commits":4929,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":17,"nounderscore":2649,"commits":555,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27115,"nospace":80188,"commits":4183,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-11","convention":{"asignDefaultValue":{"space":498,"nospace":419,"commits":156,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10822,"use":52,"commits":1513,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6793,"space":548241,"commits":6079,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":612196,"char120":36135,"char150":7763,"commits":6396,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":328,"nounderscore":5376,"commits":682,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":87374,"nospace":151931,"commits":5513,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-10","convention":{"asignDefaultValue":{"space":362,"nospace":58,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11047,"use":37,"commits":1703,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13124,"space":303354,"commits":5833,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":370881,"char120":21395,"char150":4748,"commits":6215,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":64,"nounderscore":4130,"commits":873,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32398,"nospace":114483,"commits":5320,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-09","convention":{"asignDefaultValue":{"space":83,"nospace":60,"commits":73,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5922,"use":77,"commits":1291,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9860,"space":186368,"commits":4295,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":238342,"char120":13066,"char150":2977,"commits":4676,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":37,"nounderscore":2699,"commits":684,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":20259,"nospace":70883,"commits":3892,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-08","convention":{"asignDefaultValue":{"space":276,"nospace":197,"commits":129,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9963,"use":137,"commits":1688,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10701,"space":419163,"commits":6335,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":490651,"char120":30793,"char150":6572,"commits":6652,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":201,"nounderscore":4819,"commits":899,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":55806,"nospace":144566,"commits":5749,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-07","convention":{"asignDefaultValue":{"space":171,"nospace":206,"commits":129,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7791,"use":110,"commits":1550,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":36520,"space":306641,"commits":5883,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":355651,"char120":25742,"char150":6252,"commits":6178,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":52,"nounderscore":3606,"commits":696,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35337,"nospace":109075,"commits":5325,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-06","convention":{"asignDefaultValue":{"space":546,"nospace":603,"commits":145,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11744,"use":86,"commits":1239,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4444,"space":587759,"commits":5091,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":643298,"char120":38363,"char150":7462,"commits":5486,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":489,"nounderscore":6177,"commits":617,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":110308,"nospace":145500,"commits":4558,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-05","convention":{"asignDefaultValue":{"space":151,"nospace":93,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6694,"use":63,"commits":1326,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6372,"space":312054,"commits":5118,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":323640,"char120":25904,"char150":28395,"commits":5429,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":39,"nounderscore":1945,"commits":650,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26841,"nospace":133931,"commits":4589,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-04","convention":{"asignDefaultValue":{"space":33,"nospace":35,"commits":46,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":1918,"use":23,"commits":505,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5513,"space":66466,"commits":1902,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":85387,"char120":5143,"char150":1137,"commits":2005,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":24,"nounderscore":736,"commits":227,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":8886,"nospace":23697,"commits":1713,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-03","convention":{"asignDefaultValue":{"space":2,"nospace":0,"commits":2,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":884,"use":2,"commits":162,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":1261,"space":22704,"commits":433,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":31993,"char120":1306,"char150":270,"commits":471,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":37,"nounderscore":320,"commits":83,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":2718,"nospace":8403,"commits":420,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-02","convention":{"asignDefaultValue":{"space":245,"nospace":128,"commits":81,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8621,"use":90,"commits":1807,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":21529,"space":296720,"commits":5410,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":364406,"char120":20271,"char150":3612,"commits":5673,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":113,"nounderscore":3355,"commits":772,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":40895,"nospace":97646,"commits":4837,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-11-01","convention":{"asignDefaultValue":{"space":288,"nospace":287,"commits":102,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7720,"use":96,"commits":1344,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14260,"space":277187,"commits":5100,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":334373,"char120":21206,"char150":5365,"commits":5336,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":159,"nounderscore":3806,"commits":616,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36758,"nospace":94685,"commits":4544,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-31","convention":{"asignDefaultValue":{"space":260,"nospace":68,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5978,"use":47,"commits":1274,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14569,"space":235407,"commits":4972,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":277897,"char120":19193,"char150":5165,"commits":5234,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":7,"nounderscore":2129,"commits":581,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27647,"nospace":83094,"commits":4586,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-30","convention":{"asignDefaultValue":{"space":361,"nospace":172,"commits":133,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8374,"use":54,"commits":1410,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":29667,"space":331176,"commits":5808,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":380639,"char120":26362,"char150":5701,"commits":6073,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":86,"nounderscore":5533,"commits":610,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":43286,"nospace":104113,"commits":5176,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-29","convention":{"asignDefaultValue":{"space":194,"nospace":254,"commits":95,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7819,"use":181,"commits":1142,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":19528,"space":302814,"commits":4467,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":337051,"char120":20902,"char150":6051,"commits":4779,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":161,"nounderscore":3595,"commits":487,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":49230,"nospace":88244,"commits":4105,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-28","convention":{"asignDefaultValue":{"space":96,"nospace":105,"commits":70,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5092,"use":28,"commits":924,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6819,"space":172018,"commits":3408,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":204889,"char120":11941,"char150":2664,"commits":3607,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":49,"nounderscore":1487,"commits":417,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":22978,"nospace":60069,"commits":3127,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-27","convention":{"asignDefaultValue":{"space":77,"nospace":45,"commits":56,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5747,"use":28,"commits":1253,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9587,"space":200714,"commits":4533,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":253893,"char120":14562,"char150":4136,"commits":4793,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":8,"nounderscore":2923,"commits":613,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":22855,"nospace":79329,"commits":4100,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-26","convention":{"asignDefaultValue":{"space":137,"nospace":76,"commits":90,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7443,"use":50,"commits":1476,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8131,"space":271314,"commits":4821,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":347118,"char120":18171,"char150":3644,"commits":5120,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":2993,"commits":806,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30536,"nospace":102878,"commits":4409,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-25","convention":{"asignDefaultValue":{"space":161,"nospace":121,"commits":51,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5850,"use":209,"commits":972,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4115,"space":240497,"commits":3329,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":283122,"char120":15702,"char150":3412,"commits":3527,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":146,"nounderscore":2427,"commits":480,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34548,"nospace":67918,"commits":3053,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-24","convention":{"asignDefaultValue":{"space":175,"nospace":138,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7874,"use":69,"commits":1077,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5097,"space":343354,"commits":4323,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":397693,"char120":25445,"char150":5442,"commits":4625,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":93,"nounderscore":3117,"commits":604,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44391,"nospace":110925,"commits":3953,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-23","convention":{"asignDefaultValue":{"space":125,"nospace":137,"commits":55,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5100,"use":42,"commits":745,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":2951,"space":205747,"commits":2907,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":237096,"char120":15086,"char150":3506,"commits":3114,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":73,"nounderscore":3197,"commits":370,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29649,"nospace":65351,"commits":2617,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-22","convention":{"asignDefaultValue":{"space":335,"nospace":461,"commits":97,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9544,"use":51,"commits":1211,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7084,"space":487258,"commits":4883,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":529703,"char120":33608,"char150":6846,"commits":5124,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":363,"nounderscore":4611,"commits":556,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":86574,"nospace":128956,"commits":4389,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-21","convention":{"asignDefaultValue":{"space":125,"nospace":138,"commits":78,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5770,"use":60,"commits":1119,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":25235,"space":266648,"commits":4425,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":305880,"char120":22259,"char150":5271,"commits":4688,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":47,"nounderscore":4074,"commits":578,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33309,"nospace":92493,"commits":4077,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-20","convention":{"asignDefaultValue":{"space":157,"nospace":99,"commits":70,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9801,"use":90,"commits":1750,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":28421,"space":315216,"commits":5647,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":388551,"char120":22199,"char150":10112,"commits":5919,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":42,"nounderscore":7893,"commits":893,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":42833,"nospace":113774,"commits":5037,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-19","convention":{"asignDefaultValue":{"space":199,"nospace":82,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11050,"use":106,"commits":1843,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13508,"space":265224,"commits":5506,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":332554,"char120":17890,"char150":4032,"commits":5834,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":2529,"commits":900,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":29945,"nospace":97264,"commits":4977,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-18","convention":{"asignDefaultValue":{"space":206,"nospace":108,"commits":113,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9114,"use":65,"commits":1570,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":16713,"space":313381,"commits":5644,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":375053,"char120":25973,"char150":5326,"commits":5932,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":79,"nounderscore":3470,"commits":695,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36200,"nospace":105706,"commits":5093,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-17","convention":{"asignDefaultValue":{"space":152,"nospace":70,"commits":85,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5564,"use":77,"commits":1044,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":23885,"space":195237,"commits":4161,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":230835,"char120":17457,"char150":4494,"commits":4359,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":10,"nounderscore":2819,"commits":534,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":22780,"nospace":65883,"commits":3752,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-16","convention":{"asignDefaultValue":{"space":103,"nospace":66,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":4521,"use":52,"commits":1010,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13991,"space":198472,"commits":3869,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":228537,"char120":16635,"char150":10318,"commits":4076,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":9,"nounderscore":5328,"commits":480,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":21893,"nospace":80990,"commits":3528,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-15","convention":{"asignDefaultValue":{"space":201,"nospace":31,"commits":62,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":4755,"use":529,"commits":1037,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6491,"space":166744,"commits":3882,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":190378,"char120":14544,"char150":3601,"commits":4118,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":25,"nounderscore":1746,"commits":441,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":19649,"nospace":58043,"commits":3576,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-14","convention":{"asignDefaultValue":{"space":178,"nospace":65,"commits":59,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5317,"use":27,"commits":1017,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":17726,"space":212847,"commits":4057,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":241287,"char120":17593,"char150":10405,"commits":4297,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":25,"nounderscore":3957,"commits":473,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":24716,"nospace":78376,"commits":3735,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-13","convention":{"asignDefaultValue":{"space":90,"nospace":60,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6018,"use":84,"commits":1427,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":24650,"space":220101,"commits":5019,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":273958,"char120":15733,"char150":3072,"commits":5301,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":63,"nounderscore":2988,"commits":718,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27161,"nospace":80222,"commits":4668,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-12","convention":{"asignDefaultValue":{"space":90,"nospace":67,"commits":66,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7524,"use":96,"commits":1611,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":53026,"space":356300,"commits":5280,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":425522,"char120":28270,"char150":10170,"commits":5591,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":4250,"commits":920,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36331,"nospace":130334,"commits":4853,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-11","convention":{"asignDefaultValue":{"space":298,"nospace":250,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10273,"use":95,"commits":1369,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":44057,"space":422412,"commits":5097,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":474064,"char120":30917,"char150":7238,"commits":5398,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":171,"nounderscore":4504,"commits":621,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":62116,"nospace":125033,"commits":4539,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-10","convention":{"asignDefaultValue":{"space":93,"nospace":119,"commits":95,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6220,"use":80,"commits":1189,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":38141,"space":260517,"commits":5040,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":307105,"char120":21711,"char150":5210,"commits":5327,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":41,"nounderscore":3273,"commits":613,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33826,"nospace":90219,"commits":4592,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-09","convention":{"asignDefaultValue":{"space":217,"nospace":51,"commits":117,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7421,"use":246,"commits":1315,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7951,"space":299292,"commits":5408,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":353682,"char120":23243,"char150":6697,"commits":5692,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":101,"nounderscore":3200,"commits":685,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32349,"nospace":109163,"commits":4988,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-08","convention":{"asignDefaultValue":{"space":261,"nospace":85,"commits":127,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6565,"use":96,"commits":1213,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":6646,"space":256915,"commits":4635,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":297453,"char120":21744,"char150":7591,"commits":4914,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":2904,"commits":582,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30555,"nospace":92506,"commits":4217,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-07","convention":{"asignDefaultValue":{"space":221,"nospace":168,"commits":153,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8576,"use":189,"commits":1499,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":11837,"space":374039,"commits":6157,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":427428,"char120":27976,"char150":7298,"commits":6534,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":114,"nounderscore":4340,"commits":710,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":52560,"nospace":124584,"commits":5652,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-06","convention":{"asignDefaultValue":{"space":132,"nospace":98,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6431,"use":82,"commits":1328,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12522,"space":240110,"commits":4772,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":303154,"char120":17486,"char150":3752,"commits":5077,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":43,"nounderscore":3676,"commits":630,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28047,"nospace":85394,"commits":4393,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-05","convention":{"asignDefaultValue":{"space":113,"nospace":99,"commits":101,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6021,"use":70,"commits":1338,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10454,"space":203620,"commits":4745,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":254793,"char120":15022,"char150":3053,"commits":4992,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":7,"nounderscore":4515,"commits":659,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23195,"nospace":72307,"commits":4186,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-04","convention":{"asignDefaultValue":{"space":144,"nospace":102,"commits":88,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5310,"use":256,"commits":1098,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5009,"space":237852,"commits":4290,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":280714,"char120":17069,"char150":3943,"commits":4518,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":48,"nounderscore":3076,"commits":549,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":31957,"nospace":78675,"commits":3905,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-03","convention":{"asignDefaultValue":{"space":194,"nospace":208,"commits":142,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8113,"use":134,"commits":1138,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8873,"space":310416,"commits":4760,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":356659,"char120":25679,"char150":5294,"commits":5019,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":63,"nounderscore":2779,"commits":562,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":34465,"nospace":103327,"commits":4394,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-02","convention":{"asignDefaultValue":{"space":186,"nospace":100,"commits":127,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6756,"use":84,"commits":1333,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":17310,"space":254797,"commits":5362,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":299360,"char120":21703,"char150":5755,"commits":5616,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":95,"nounderscore":2774,"commits":667,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30747,"nospace":92932,"commits":4826,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-10-01","convention":{"asignDefaultValue":{"space":176,"nospace":160,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6820,"use":80,"commits":1349,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5681,"space":282239,"commits":5567,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":335775,"char120":20161,"char150":5897,"commits":5878,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":98,"nounderscore":3377,"commits":725,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32161,"nospace":94465,"commits":5107,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-30","convention":{"asignDefaultValue":{"space":179,"nospace":106,"commits":113,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7700,"use":147,"commits":1357,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9265,"space":286177,"commits":5678,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":336911,"char120":21566,"char150":5846,"commits":6106,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":27,"nounderscore":2302,"commits":754,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":31075,"nospace":95542,"commits":5318,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-29","convention":{"asignDefaultValue":{"space":123,"nospace":53,"commits":89,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7309,"use":128,"commits":1521,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12791,"space":266291,"commits":5229,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":333016,"char120":18092,"char150":4381,"commits":5540,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":33,"nounderscore":2479,"commits":833,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30358,"nospace":92698,"commits":4860,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-28","convention":{"asignDefaultValue":{"space":76,"nospace":46,"commits":75,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7035,"use":198,"commits":1641,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13420,"space":220919,"commits":5352,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":282339,"char120":15693,"char150":4035,"commits":5634,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":2051,"commits":814,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27503,"nospace":80921,"commits":4896,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-27","convention":{"asignDefaultValue":{"space":176,"nospace":442,"commits":178,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10853,"use":118,"commits":1611,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":78218,"space":435990,"commits":5922,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":505540,"char120":37840,"char150":8903,"commits":6235,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":52,"nounderscore":5077,"commits":875,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":53996,"nospace":148468,"commits":5389,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-26","convention":{"asignDefaultValue":{"space":115,"nospace":133,"commits":113,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6335,"use":142,"commits":1395,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9731,"space":254447,"commits":5758,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":301084,"char120":21766,"char150":6651,"commits":6025,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":2463,"commits":724,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27392,"nospace":97745,"commits":5256,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-25","convention":{"asignDefaultValue":{"space":166,"nospace":749,"commits":136,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8071,"use":151,"commits":1645,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12832,"space":329037,"commits":6115,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":383037,"char120":26849,"char150":7339,"commits":6428,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":55,"nounderscore":3570,"commits":789,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":42430,"nospace":113175,"commits":5590,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-24","convention":{"asignDefaultValue":{"space":156,"nospace":179,"commits":107,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8510,"use":298,"commits":1546,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7533,"space":331185,"commits":5930,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":397119,"char120":24827,"char150":8331,"commits":6200,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":72,"nounderscore":3661,"commits":742,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":38586,"nospace":114164,"commits":5426,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-23","convention":{"asignDefaultValue":{"space":159,"nospace":161,"commits":119,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8507,"use":127,"commits":1521,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":23851,"space":358787,"commits":5936,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":428658,"char120":28763,"char150":9596,"commits":6179,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":52,"nounderscore":3503,"commits":768,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44401,"nospace":122058,"commits":5338,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-22","convention":{"asignDefaultValue":{"space":249,"nospace":177,"commits":98,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":15487,"use":254,"commits":1806,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":21526,"space":269383,"commits":6092,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":343337,"char120":19081,"char150":3627,"commits":6389,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":53,"nounderscore":2806,"commits":890,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30969,"nospace":94902,"commits":5548,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-21","convention":{"asignDefaultValue":{"space":312,"nospace":279,"commits":116,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":12496,"use":330,"commits":2024,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":66917,"space":526974,"commits":6653,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":619082,"char120":39679,"char150":7490,"commits":7022,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":213,"nounderscore":5788,"commits":964,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":74597,"nospace":160980,"commits":6110,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-20","convention":{"asignDefaultValue":{"space":159,"nospace":189,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7681,"use":509,"commits":1510,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10116,"space":337719,"commits":5581,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":407164,"char120":24208,"char150":5889,"commits":5845,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":82,"nounderscore":4155,"commits":820,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44056,"nospace":109097,"commits":5058,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-19","convention":{"asignDefaultValue":{"space":297,"nospace":258,"commits":126,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9560,"use":730,"commits":1460,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":61292,"space":381369,"commits":5420,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":460596,"char120":31529,"char150":9023,"commits":5705,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":36,"nounderscore":4169,"commits":759,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":44914,"nospace":125977,"commits":4969,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-18","convention":{"asignDefaultValue":{"space":274,"nospace":97,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7385,"use":445,"commits":1415,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":5885,"space":267173,"commits":5791,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":317697,"char120":22924,"char150":6191,"commits":6130,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":24,"nounderscore":2534,"commits":707,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30122,"nospace":99323,"commits":5262,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-17","convention":{"asignDefaultValue":{"space":146,"nospace":124,"commits":120,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7073,"use":195,"commits":1430,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":30373,"space":287905,"commits":6286,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":368248,"char120":23057,"char150":10733,"commits":6669,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":19,"nounderscore":10641,"commits":788,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33023,"nospace":110185,"commits":5681,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-16","convention":{"asignDefaultValue":{"space":457,"nospace":458,"commits":156,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":13102,"use":357,"commits":1737,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":43244,"space":534741,"commits":6676,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":618724,"char120":35983,"char150":8329,"commits":7022,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":214,"nounderscore":5724,"commits":879,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":79218,"nospace":153360,"commits":6041,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-15","convention":{"asignDefaultValue":{"space":101,"nospace":97,"commits":94,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8874,"use":41,"commits":1904,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":29375,"space":309235,"commits":6246,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":392969,"char120":23012,"char150":5481,"commits":6488,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":4130,"commits":920,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":41721,"nospace":110661,"commits":5481,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-14","convention":{"asignDefaultValue":{"space":125,"nospace":79,"commits":91,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10521,"use":168,"commits":1924,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":20239,"space":311273,"commits":6121,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":394818,"char120":22674,"char150":4517,"commits":6476,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":9,"nounderscore":3423,"commits":919,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35064,"nospace":115321,"commits":5616,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-13","convention":{"asignDefaultValue":{"space":181,"nospace":101,"commits":109,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8531,"use":83,"commits":1476,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":55022,"space":352387,"commits":5694,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":418777,"char120":25049,"char150":5566,"commits":5955,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":71,"nounderscore":4304,"commits":734,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":41315,"nospace":119391,"commits":5128,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-12","convention":{"asignDefaultValue":{"space":370,"nospace":381,"commits":128,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10197,"use":49,"commits":1287,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10957,"space":455460,"commits":5112,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":503882,"char120":30239,"char150":7153,"commits":5397,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":424,"nounderscore":4746,"commits":667,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":79475,"nospace":125820,"commits":4702,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-11","convention":{"asignDefaultValue":{"space":166,"nospace":54,"commits":123,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6159,"use":36,"commits":1341,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7532,"space":214672,"commits":5248,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":246952,"char120":21322,"char150":6616,"commits":5552,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":31,"nounderscore":2292,"commits":719,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23592,"nospace":87354,"commits":4843,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-10","convention":{"asignDefaultValue":{"space":154,"nospace":74,"commits":97,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":3313,"use":4,"commits":676,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4245,"space":137539,"commits":2680,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":160047,"char120":11460,"char150":2849,"commits":2827,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":52,"nounderscore":1633,"commits":350,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":18350,"nospace":51595,"commits":2449,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-09","convention":{"asignDefaultValue":{"space":224,"nospace":185,"commits":108,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7640,"use":97,"commits":1126,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9303,"space":325426,"commits":4065,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":379638,"char120":22330,"char150":5393,"commits":4297,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":72,"nounderscore":6928,"commits":549,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":43691,"nospace":113278,"commits":3726,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-08","convention":{"asignDefaultValue":{"space":111,"nospace":85,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7739,"use":126,"commits":1179,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":20118,"space":273952,"commits":3943,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":343169,"char120":17299,"char150":4058,"commits":4177,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":32,"nounderscore":2273,"commits":532,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":28529,"nospace":96586,"commits":3590,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-07","convention":{"asignDefaultValue":{"space":270,"nospace":170,"commits":89,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9098,"use":68,"commits":1562,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":69332,"space":360861,"commits":4945,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":437555,"char120":25062,"char150":8525,"commits":5249,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":132,"nounderscore":4408,"commits":779,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":47903,"nospace":119173,"commits":4499,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-06","convention":{"asignDefaultValue":{"space":154,"nospace":166,"commits":101,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7747,"use":168,"commits":1022,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":34827,"space":308571,"commits":3721,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":386860,"char120":16741,"char150":3802,"commits":3888,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":22,"nounderscore":7949,"commits":487,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":38520,"nospace":97033,"commits":3412,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-05","convention":{"asignDefaultValue":{"space":44,"nospace":76,"commits":22,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":2712,"use":78,"commits":315,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":37289,"space":125759,"commits":1078,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":149631,"char120":9767,"char150":1666,"commits":1127,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":4,"nounderscore":1497,"commits":155,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":15172,"nospace":38413,"commits":1006,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-04","convention":{"asignDefaultValue":{"space":7,"nospace":5,"commits":8,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":550,"use":9,"commits":134,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":427,"space":22786,"commits":711,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":28034,"char120":1755,"char150":594,"commits":750,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":0,"nounderscore":369,"commits":77,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":2958,"nospace":8703,"commits":663,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-03","convention":{"asignDefaultValue":{"space":224,"nospace":33,"commits":74,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":3095,"use":76,"commits":894,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":4265,"space":137879,"commits":3516,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":162825,"char120":11060,"char150":3102,"commits":3702,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":53,"nounderscore":1207,"commits":487,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":16562,"nospace":50612,"commits":3234,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-02","convention":{"asignDefaultValue":{"space":191,"nospace":89,"commits":112,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9703,"use":77,"commits":1582,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14077,"space":352060,"commits":5858,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":438971,"char120":25831,"char150":5345,"commits":6175,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":3178,"commits":767,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":41665,"nospace":122513,"commits":5391,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-09-01","convention":{"asignDefaultValue":{"space":133,"nospace":38,"commits":71,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7493,"use":56,"commits":1653,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9573,"space":240742,"commits":4867,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":293597,"char120":16726,"char150":3386,"commits":5124,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":20,"nounderscore":2291,"commits":860,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26134,"nospace":88073,"commits":4485,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-31","convention":{"asignDefaultValue":{"space":263,"nospace":35,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9856,"use":85,"commits":1957,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13282,"space":335389,"commits":6146,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":414666,"char120":24352,"char150":4398,"commits":6449,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":47,"nounderscore":3293,"commits":1029,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":39445,"nospace":116553,"commits":5680,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-30","convention":{"asignDefaultValue":{"space":108,"nospace":103,"commits":117,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6769,"use":114,"commits":1644,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":36129,"space":255813,"commits":6254,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":313089,"char120":22173,"char150":4544,"commits":6625,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":3604,"commits":869,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30758,"nospace":88212,"commits":5665,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-29","convention":{"asignDefaultValue":{"space":106,"nospace":82,"commits":118,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6628,"use":69,"commits":1520,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":37571,"space":281607,"commits":5756,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":328500,"char120":25892,"char150":5784,"commits":6075,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":3288,"commits":756,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":30339,"nospace":106233,"commits":5250,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-28","convention":{"asignDefaultValue":{"space":356,"nospace":110,"commits":134,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6926,"use":100,"commits":1652,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":24784,"space":274162,"commits":6589,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":322182,"char120":25456,"char150":6253,"commits":6992,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":57,"nounderscore":2793,"commits":797,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":35032,"nospace":96015,"commits":6014,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-27","convention":{"asignDefaultValue":{"space":175,"nospace":253,"commits":161,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10757,"use":131,"commits":1524,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":11095,"space":403758,"commits":6310,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":476599,"char120":31753,"char150":8132,"commits":6664,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":82,"nounderscore":4650,"commits":808,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":47986,"nospace":140306,"commits":5800,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-26","convention":{"asignDefaultValue":{"space":110,"nospace":131,"commits":113,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8844,"use":68,"commits":1536,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":28994,"space":312741,"commits":5743,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":389393,"char120":24845,"char150":6837,"commits":6058,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":64,"nounderscore":3578,"commits":759,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":37989,"nospace":113736,"commits":5367,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-25","convention":{"asignDefaultValue":{"space":192,"nospace":151,"commits":103,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":11469,"use":98,"commits":1793,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":33858,"space":391400,"commits":5751,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":495126,"char120":28044,"char150":6730,"commits":6092,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":32,"nounderscore":4113,"commits":911,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":47501,"nospace":135219,"commits":5349,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-24","convention":{"asignDefaultValue":{"space":255,"nospace":64,"commits":94,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":10705,"use":52,"commits":1894,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":13848,"space":326770,"commits":5885,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":409863,"char120":24323,"char150":5524,"commits":6259,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":61,"nounderscore":3941,"commits":1009,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":37980,"nospace":119481,"commits":5463,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-23","convention":{"asignDefaultValue":{"space":106,"nospace":87,"commits":88,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":7434,"use":77,"commits":1424,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":9981,"space":242940,"commits":5196,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":300104,"char120":18261,"char150":4482,"commits":5453,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":35,"nounderscore":2321,"commits":705,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":26930,"nospace":89186,"commits":4716,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-22","convention":{"asignDefaultValue":{"space":128,"nospace":112,"commits":83,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6379,"use":32,"commits":1139,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10008,"space":216338,"commits":4635,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":258252,"char120":17054,"char150":3722,"commits":4896,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":28,"nounderscore":1954,"commits":558,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23561,"nospace":79751,"commits":4217,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-21","convention":{"asignDefaultValue":{"space":102,"nospace":64,"commits":80,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5981,"use":50,"commits":1080,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7253,"space":246166,"commits":4162,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":298919,"char120":20685,"char150":4647,"commits":4375,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":10,"nounderscore":2236,"commits":569,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27391,"nospace":85651,"commits":3845,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-20","convention":{"asignDefaultValue":{"space":109,"nospace":131,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6617,"use":79,"commits":1423,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":8875,"space":234886,"commits":5839,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":281062,"char120":21589,"char150":6006,"commits":6197,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":3,"nounderscore":2609,"commits":743,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":27334,"nospace":87668,"commits":5405,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-19","convention":{"asignDefaultValue":{"space":108,"nospace":201,"commits":138,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8635,"use":189,"commits":1466,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10069,"space":322729,"commits":5724,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":375560,"char120":26262,"char150":6988,"commits":5989,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":2559,"commits":713,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":36551,"nospace":112317,"commits":5260,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-18","convention":{"asignDefaultValue":{"space":86,"nospace":68,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9550,"use":148,"commits":1983,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14800,"space":289182,"commits":6621,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":367579,"char120":20027,"char150":4716,"commits":6972,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":26,"nounderscore":2820,"commits":999,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":31747,"nospace":107721,"commits":5962,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-17","convention":{"asignDefaultValue":{"space":96,"nospace":79,"commits":81,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9949,"use":165,"commits":1893,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":19010,"space":276448,"commits":5613,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":352418,"char120":17030,"char150":3225,"commits":5931,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":39,"nounderscore":2501,"commits":889,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":32546,"nospace":100574,"commits":5131,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-16","convention":{"asignDefaultValue":{"space":46,"nospace":101,"commits":87,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5470,"use":74,"commits":1172,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12564,"space":195430,"commits":4222,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":239475,"char120":15695,"char150":3749,"commits":4438,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":9,"nounderscore":1964,"commits":602,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23094,"nospace":71024,"commits":3885,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-15","convention":{"asignDefaultValue":{"space":97,"nospace":87,"commits":97,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5188,"use":130,"commits":1277,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":12292,"space":198940,"commits":4835,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":241180,"char120":19367,"char150":4319,"commits":5086,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":22,"nounderscore":2377,"commits":695,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23195,"nospace":77590,"commits":4428,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-14","convention":{"asignDefaultValue":{"space":188,"nospace":135,"commits":122,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":8114,"use":48,"commits":1540,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10256,"space":292418,"commits":5930,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":342059,"char120":23994,"char150":6043,"commits":6253,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":13,"nounderscore":2464,"commits":755,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":33102,"nospace":108757,"commits":5538,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-13","convention":{"asignDefaultValue":{"space":96,"nospace":134,"commits":115,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6734,"use":82,"commits":1431,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":10127,"space":225474,"commits":5947,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":276392,"char120":17451,"char150":4069,"commits":6235,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":35,"nounderscore":2359,"commits":667,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":25752,"nospace":82413,"commits":5369,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-12","convention":{"asignDefaultValue":{"space":110,"nospace":60,"commits":106,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5282,"use":99,"commits":1343,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14193,"space":200727,"commits":5474,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":242773,"char120":15806,"char150":3826,"commits":5759,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":67,"nounderscore":1411,"commits":626,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":23741,"nospace":69032,"commits":4975,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-11","convention":{"asignDefaultValue":{"space":65,"nospace":37,"commits":68,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":6593,"use":62,"commits":1363,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":7264,"space":177553,"commits":4362,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":228620,"char120":12923,"char150":2625,"commits":4618,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":15,"nounderscore":1854,"commits":671,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":20505,"nospace":69324,"commits":4029,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-10","convention":{"asignDefaultValue":{"space":121,"nospace":191,"commits":102,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":9383,"use":104,"commits":2010,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14503,"space":296965,"commits":6122,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":409484,"char120":19396,"char150":3940,"commits":6453,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":34,"nounderscore":4557,"commits":1061,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":38636,"nospace":110562,"commits":5560,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}},{"lang":"rb","file":"2013-08-09","convention":{"asignDefaultValue":{"space":141,"nospace":46,"commits":73,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"defNoArgs":{"omit":5366,"use":47,"commits":1194,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}]},"indent":{"tab":14919,"space":195615,"commits":4619,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}]},"lang":"rb","linelength":{"char80":239059,"char120":15259,"char150":3524,"commits":4870,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}]},"numericLiteral":{"underscore":18,"nounderscore":2446,"commits":567,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}]},"whitespace":{"spaces":22670,"nospace":69018,"commits":4184,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}]}}}],"scores":{"lang":"rb","indent":{"tab":3702872,"space":79747826,"commits":1483954,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"comment\"># use tab for indentation</span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"comment\"># use tab for indentation</span>\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"},{"key":"space","display":"Space","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">foo</span><span class=\"params\">(test)</span></span>\n  <span class=\"constant\">Thread</span>.new <span class=\"keyword\">do</span> |blockvar|\n    <span class=\"constant\">ABC::DEF</span>.reverse(<span class=\"symbol\">:a_symbol</span>, <span class=\"symbol\">:<span class=\"string\">'a symbol'</span></span>, <span class=\"symbol\">:&lt;=&gt;</span>, <span class=\"string\">'test'</span> + test)\n  <span class=\"keyword\">end</span>.join\n<span class=\"keyword\">end</span>"}],"total":83450698},"linelength":{"char80":94812137,"char120":6061357,"char150":1501944,"commits":1565718,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\"># width is within 80 characters</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\"># width is within 120 characters</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\"># width is within 150 characters</span>"}],"total":102375438},"whitespace":{"spaces":9957234,"nospace":27650565,"commits":1347792,"title":"Whitespace around operators, colons, { and }, after commas, semicolons","column":[{"key":"spaces","display":"Using spaces","code":"sum = <span class=\"number\">1</span> + <span class=\"number\">2</span>\n\na, b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span> &gt; <span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>; puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each { |e| puts e }"},{"key":"nospace","display":"Using no space","code":"sum = <span class=\"number\">1</span> +<span class=\"number\">2</span>\n\na,b = <span class=\"number\">1</span>, <span class=\"number\">2</span>\n\n<span class=\"number\">1</span>&gt;<span class=\"number\">2</span> ? <span class=\"keyword\">true</span> <span class=\"symbol\">:</span> <span class=\"keyword\">false</span>;puts <span class=\"string\">'Hi'</span>\n\n[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].each {|e| puts e}"}],"total":37607799},"asignDefaultValue":{"space":49266,"nospace":32984,"commits":27970,"title":"How to write assigning default values to method parameters","column":[{"key":"space","display":"Use spaces","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1 = <span class=\"symbol\">:default</span>, arg2 = <span class=\"keyword\">nil</span>, arg3 = [])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"nospace","display":"Use spaces before = or after =","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1=<span class=\"symbol\">:default</span>, arg2=<span class=\"keyword\">nil</span>, arg3=[])</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":82250},"numericLiteral":{"underscore":39907,"nounderscore":1057349,"commits":193420,"title":"How to write large numeric literals","column":[{"key":"underscore","display":"Write with underscore","code":"num = <span class=\"number\">1_000_000</span>"},{"key":"nounderscore","display":"Write without underscore","code":"num = <span class=\"number\">1000000</span>"}],"total":1097256},"defNoArgs":{"omit":2131921,"use":28057,"commits":387269,"title":"Omit parentheses when there aren't any arguments","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">()</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":2159978},"defArgs":{"omit":28481,"use":429546,"commits":82455,"title":"Parentheses around arguments in def","column":[{"key":"omit","display":"Omit","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span> </span>arg1, arg2\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"},{"key":"use","display":"Use the parentheses","code":"<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">some_method</span><span class=\"params\">(arg1, arg2)</span></span>\n  <span class=\"comment\"># do something...</span>\n<span class=\"keyword\">end</span>"}],"total":458027}}}}