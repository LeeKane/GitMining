#set($layout="indexlayout.vm")
{"results":{"lang":"cs","period":["2014-07-19","2014-07-18","2014-07-17","2014-07-13","2014-07-12","2014-07-11","2014-07-10","2014-07-09","2014-07-08","2014-07-07","2014-07-06","2014-07-05","2014-07-04","2014-07-03","2014-07-02","2014-07-01","2014-06-30","2014-06-29","2014-06-28","2014-06-27","2014-06-26","2014-06-25","2014-06-24","2014-06-23","2014-06-22","2014-06-21","2014-06-20","2014-06-19","2014-06-18","2014-06-17","2014-06-16","2014-06-15","2014-06-14","2014-06-13","2014-06-12","2014-06-11","2014-06-10","2014-06-09","2014-06-08","2014-06-07","2014-06-04","2014-06-03","2014-06-02","2014-06-01","2014-05-31","2014-05-30","2014-05-29","2014-05-28","2014-05-27","2014-05-26","2014-05-25","2014-05-24","2014-05-23","2014-05-22","2014-05-21","2014-05-20","2014-05-19","2014-05-18","2014-05-17","2014-05-16","2014-05-15","2014-05-14","2014-05-13","2014-05-12","2014-05-11","2014-05-10","2014-05-09","2014-05-08","2014-05-07","2014-05-06","2014-05-05","2014-05-04","2014-05-03","2014-05-02","2014-05-01","2014-04-30","2014-04-29","2014-04-28","2014-04-27","2014-04-26","2014-04-25","2014-04-24","2014-04-23","2014-04-22","2014-04-21","2014-04-20","2014-04-19","2014-04-18","2014-04-17","2014-04-16","2014-04-15","2014-04-14","2014-04-13","2014-04-12","2014-04-11","2014-04-10","2014-04-09","2014-04-08","2014-04-07","2014-04-06","2014-04-05","2014-04-04","2014-04-03","2014-04-02","2014-04-01","2014-03-31","2014-03-30","2014-03-29","2014-03-28","2014-03-27","2014-03-26","2014-03-25","2014-03-24","2014-03-23","2014-03-22","2014-03-21","2014-03-20","2014-03-19","2014-03-18","2014-03-17","2014-03-16","2014-03-15","2014-03-14","2014-03-13","2014-03-12","2014-03-11","2014-03-10","2014-03-09","2014-03-08","2014-03-07","2014-03-06","2014-03-05","2014-03-04","2014-03-03","2014-03-01","2014-02-28","2014-02-26","2014-02-24","2014-02-22","2014-02-21","2014-02-20","2014-02-18","2014-02-17","2014-02-16","2014-02-14","2014-02-13","2014-02-12","2014-02-11","2014-02-10","2014-02-09","2014-02-08","2014-02-07","2014-02-06","2014-02-05","2014-02-04","2014-02-03","2014-02-02","2014-02-01","2014-01-31","2014-01-30","2014-01-29","2014-01-28","2014-01-27","2014-01-26","2014-01-25","2014-01-24","2014-01-23","2014-01-22","2014-01-21","2014-01-20","2014-01-19","2014-01-18","2014-01-17","2014-01-16","2014-01-15","2014-01-14","2014-01-13","2014-01-12","2014-01-11","2014-01-10","2014-01-09","2014-01-08","2014-01-07","2014-01-06","2014-01-05","2014-01-04","2014-01-03","2014-01-02","2014-01-01","2013-12-31","2013-12-30","2013-12-29","2013-12-28","2013-12-27","2013-12-26","2013-12-25","2013-12-24","2013-12-23","2013-12-22","2013-12-21","2013-12-20","2013-12-19","2013-12-18","2013-12-17","2013-12-16","2013-12-15","2013-12-14","2013-12-13","2013-12-12","2013-12-11","2013-12-10","2013-12-09","2013-12-08","2013-12-07","2013-12-06","2013-12-05","2013-12-04","2013-12-03","2013-12-02","2013-12-01","2013-11-30","2013-11-29","2013-11-28","2013-11-27","2013-11-26","2013-11-25","2013-11-24","2013-11-23","2013-11-22","2013-11-21","2013-11-20","2013-11-19","2013-11-18","2013-11-17","2013-11-16","2013-11-15","2013-11-14","2013-11-13","2013-11-12","2013-11-11","2013-11-10","2013-11-09","2013-11-08","2013-11-07","2013-11-06","2013-11-05","2013-11-04","2013-11-03","2013-11-02","2013-11-01","2013-10-31","2013-10-30","2013-10-29","2013-10-28","2013-10-27","2013-10-26","2013-10-25","2013-10-24","2013-10-23","2013-10-22","2013-10-21","2013-10-20","2013-10-19","2013-10-18","2013-10-17","2013-10-16","2013-10-15","2013-10-14","2013-10-13","2013-10-12","2013-10-11","2013-10-10","2013-10-09","2013-10-08","2013-10-07","2013-10-06","2013-10-05","2013-10-04","2013-10-03","2013-10-02","2013-10-01","2013-09-30","2013-09-29","2013-09-28","2013-09-27","2013-09-26","2013-09-25","2013-09-24","2013-09-23","2013-09-22","2013-09-21","2013-09-20","2013-09-19","2013-09-18","2013-09-17"],"raw":[{"lang":"cs","file":"2014-07-19","convention":{"lang":"cs","indent":{"tab":21069550,"space":97110793,"commits":496725,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}],"total":118180343},"blockstatement":{"onespace":709042,"nospace":77760,"newline":4533180,"commits":291726,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}],"total":5319982},"constant":{"pascal":135797,"allcaps":119034,"notallcaps":111765,"commits":48476,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}],"total":366596},"conditionstatement":{"onespace":4251911,"nospace":355760,"commits":285117,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}],"total":4607671},"argumentdef":{"onespace":207913,"nospace":6708729,"commits":336888,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}],"total":6916642},"linelength":{"char80":104549924,"char120":10252796,"char150":2995146,"commits":509605,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}],"total":117797866}}},{"lang":"cs","file":"2014-07-18","convention":{"lang":"cs","indent":{"tab":50362,"space":246197,"commits":1405,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":835,"nospace":124,"newline":12530,"commits":851,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":251,"allcaps":170,"notallcaps":223,"commits":141,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11687,"nospace":451,"commits":817,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":259,"nospace":17699,"commits":916,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":267314,"char120":26805,"char150":6712,"commits":1456,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-17","convention":{"lang":"cs","indent":{"tab":21600,"space":176108,"commits":807,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1101,"nospace":19,"newline":6180,"commits":475,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":206,"allcaps":60,"notallcaps":120,"commits":71,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6352,"nospace":214,"commits":450,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":161,"nospace":10346,"commits":528,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":186110,"char120":16503,"char150":5390,"commits":838,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-13","convention":{"lang":"cs","indent":{"tab":90987,"space":308157,"commits":1844,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2499,"nospace":77,"newline":13592,"commits":1062,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":459,"allcaps":392,"notallcaps":631,"commits":168,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13932,"nospace":629,"commits":1044,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":371,"nospace":21087,"commits":1253,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":333730,"char120":30842,"char150":8111,"commits":1887,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-12","convention":{"lang":"cs","indent":{"tab":59098,"space":388276,"commits":1997,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2127,"nospace":211,"newline":20031,"commits":1160,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":551,"allcaps":6240,"notallcaps":326,"commits":187,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18775,"nospace":784,"commits":1138,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":524,"nospace":28797,"commits":1355,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":420066,"char120":40668,"char150":9947,"commits":2060,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-11","convention":{"lang":"cs","indent":{"tab":20454,"space":303338,"commits":1021,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1453,"nospace":169,"newline":14045,"commits":631,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1112,"allcaps":130,"notallcaps":96,"commits":99,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13276,"nospace":434,"commits":626,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":147,"nospace":18162,"commits":692,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":350387,"char120":29743,"char150":9442,"commits":1042,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-10","convention":{"lang":"cs","indent":{"tab":68807,"space":295711,"commits":1317,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1624,"nospace":147,"newline":11703,"commits":715,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":502,"allcaps":172,"notallcaps":180,"commits":141,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9531,"nospace":1525,"commits":675,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":322,"nospace":17863,"commits":805,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":315074,"char120":31909,"char150":8703,"commits":1348,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-09","convention":{"lang":"cs","indent":{"tab":67919,"space":242728,"commits":1221,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1040,"nospace":462,"newline":11588,"commits":707,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":603,"allcaps":2983,"notallcaps":162,"commits":149,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8677,"nospace":3003,"commits":700,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":3109,"nospace":14301,"commits":825,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":266856,"char120":26126,"char150":6721,"commits":1267,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-08","convention":{"lang":"cs","indent":{"tab":42129,"space":170430,"commits":821,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":452,"nospace":12,"newline":8591,"commits":489,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":469,"allcaps":63,"notallcaps":149,"commits":94,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7194,"nospace":380,"commits":470,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":185,"nospace":11449,"commits":530,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":186523,"char120":21831,"char150":4459,"commits":837,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-07","convention":{"lang":"cs","indent":{"tab":24611,"space":172787,"commits":735,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1394,"nospace":107,"newline":7587,"commits":410,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":306,"allcaps":260,"notallcaps":55,"commits":86,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6985,"nospace":815,"commits":399,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":206,"nospace":11772,"commits":473,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":182568,"char120":21285,"char150":4664,"commits":756,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-06","convention":{"lang":"cs","indent":{"tab":152046,"space":553360,"commits":2318,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2271,"nospace":1569,"newline":24426,"commits":1409,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":840,"allcaps":320,"notallcaps":830,"commits":210,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23339,"nospace":1987,"commits":1358,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":552,"nospace":35834,"commits":1600,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":591304,"char120":55096,"char150":15395,"commits":2374,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-05","convention":{"lang":"cs","indent":{"tab":17362,"space":184794,"commits":1117,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1095,"nospace":126,"newline":8667,"commits":711,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":216,"allcaps":366,"notallcaps":141,"commits":91,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7709,"nospace":425,"commits":701,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":417,"nospace":11870,"commits":797,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":197121,"char120":18855,"char150":5365,"commits":1135,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-04","convention":{"lang":"cs","indent":{"tab":37307,"space":83963,"commits":398,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1710,"nospace":20,"newline":4286,"commits":235,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":67,"allcaps":49,"notallcaps":73,"commits":42,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":4678,"nospace":628,"commits":229,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":26,"nospace":7794,"commits":273,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":91634,"char120":10032,"char150":2452,"commits":408,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-03","convention":{"lang":"cs","indent":{"tab":43358,"space":209230,"commits":1220,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1366,"nospace":270,"newline":9195,"commits":685,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":145,"allcaps":78,"notallcaps":171,"commits":107,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8356,"nospace":563,"commits":681,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":246,"nospace":13588,"commits":811,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":222388,"char120":21873,"char150":8498,"commits":1254,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-02","convention":{"lang":"cs","indent":{"tab":34456,"space":188027,"commits":1031,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1621,"nospace":28,"newline":9580,"commits":611,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":124,"allcaps":286,"notallcaps":94,"commits":94,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9035,"nospace":988,"commits":581,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":656,"nospace":14084,"commits":696,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":203971,"char120":22094,"char150":5785,"commits":1051,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-07-01","convention":{"lang":"cs","indent":{"tab":10252,"space":67026,"commits":658,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":522,"nospace":3,"newline":2915,"commits":344,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":37,"allcaps":85,"notallcaps":42,"commits":48,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":2554,"nospace":448,"commits":330,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":154,"nospace":4508,"commits":390,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":72980,"char120":7522,"char150":2159,"commits":678,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-30","convention":{"lang":"cs","indent":{"tab":24672,"space":272652,"commits":1056,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":677,"nospace":30,"newline":11821,"commits":585,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":614,"allcaps":68,"notallcaps":269,"commits":109,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9807,"nospace":740,"commits":556,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":553,"nospace":17129,"commits":661,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":303877,"char120":33714,"char150":8653,"commits":1087,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-29","convention":{"lang":"cs","indent":{"tab":50227,"space":354583,"commits":2029,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1507,"nospace":242,"newline":16719,"commits":1189,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":217,"allcaps":392,"notallcaps":143,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15071,"nospace":1102,"commits":1185,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":370,"nospace":24232,"commits":1383,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":386744,"char120":37931,"char150":9059,"commits":2077,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-28","convention":{"lang":"cs","indent":{"tab":88293,"space":373392,"commits":2190,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3419,"nospace":311,"newline":17905,"commits":1360,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":549,"allcaps":268,"notallcaps":601,"commits":182,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17787,"nospace":1277,"commits":1331,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":615,"nospace":26202,"commits":1516,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":411270,"char120":37086,"char150":10991,"commits":2247,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-27","convention":{"lang":"cs","indent":{"tab":70165,"space":306814,"commits":1579,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2895,"nospace":107,"newline":14140,"commits":963,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1010,"allcaps":279,"notallcaps":124,"commits":159,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13395,"nospace":1357,"commits":930,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1287,"nospace":20871,"commits":1063,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":336109,"char120":32303,"char150":9765,"commits":1619,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-26","convention":{"lang":"cs","indent":{"tab":27662,"space":154037,"commits":976,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":854,"nospace":990,"newline":8317,"commits":575,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":127,"allcaps":124,"notallcaps":71,"commits":89,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7944,"nospace":864,"commits":566,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":206,"nospace":12695,"commits":656,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":170978,"char120":19263,"char150":5571,"commits":1009,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-25","convention":{"lang":"cs","indent":{"tab":28607,"space":203816,"commits":1206,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":470,"nospace":71,"newline":9603,"commits":702,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":224,"allcaps":61,"notallcaps":51,"commits":102,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8149,"nospace":651,"commits":704,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":212,"nospace":14528,"commits":814,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":221651,"char120":22233,"char150":5884,"commits":1241,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-24","convention":{"lang":"cs","indent":{"tab":26315,"space":206217,"commits":1092,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":899,"nospace":32,"newline":10476,"commits":648,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":241,"allcaps":178,"notallcaps":91,"commits":114,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9030,"nospace":596,"commits":638,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":619,"nospace":13999,"commits":733,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":226629,"char120":23399,"char150":6011,"commits":1132,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-23","convention":{"lang":"cs","indent":{"tab":18094,"space":117378,"commits":870,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":679,"nospace":976,"newline":6132,"commits":502,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":164,"allcaps":35,"notallcaps":115,"commits":75,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6471,"nospace":349,"commits":504,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":162,"nospace":8886,"commits":590,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":126387,"char120":14119,"char150":3169,"commits":889,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-22","convention":{"lang":"cs","indent":{"tab":44219,"space":355566,"commits":2181,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1438,"nospace":188,"newline":17182,"commits":1284,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":473,"allcaps":476,"notallcaps":115,"commits":180,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14694,"nospace":915,"commits":1250,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":227,"nospace":24950,"commits":1516,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":384217,"char120":37718,"char150":10593,"commits":2246,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-21","convention":{"lang":"cs","indent":{"tab":83289,"space":361715,"commits":2121,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2999,"nospace":156,"newline":18008,"commits":1271,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":298,"allcaps":346,"notallcaps":447,"commits":176,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16503,"nospace":1491,"commits":1225,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":345,"nospace":26901,"commits":1435,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":397245,"char120":36265,"char150":9501,"commits":2171,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-20","convention":{"lang":"cs","indent":{"tab":47507,"space":171420,"commits":860,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":910,"nospace":65,"newline":7727,"commits":536,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":166,"allcaps":238,"notallcaps":155,"commits":73,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7070,"nospace":481,"commits":521,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":217,"nospace":12039,"commits":623,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":186450,"char120":17288,"char150":5243,"commits":885,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-19","convention":{"lang":"cs","indent":{"tab":47130,"space":219062,"commits":1408,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2019,"nospace":104,"newline":10451,"commits":810,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":164,"allcaps":64,"notallcaps":891,"commits":137,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10043,"nospace":714,"commits":800,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":340,"nospace":16880,"commits":968,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":233711,"char120":25200,"char150":6689,"commits":1468,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-18","convention":{"lang":"cs","indent":{"tab":47873,"space":318119,"commits":1562,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1553,"nospace":53,"newline":15877,"commits":949,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":253,"allcaps":155,"notallcaps":167,"commits":154,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14642,"nospace":418,"commits":923,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":423,"nospace":23245,"commits":1097,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":356435,"char120":33523,"char150":7995,"commits":1614,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-17","convention":{"lang":"cs","indent":{"tab":37888,"space":113198,"commits":761,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":704,"nospace":15,"newline":5365,"commits":431,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":97,"allcaps":44,"notallcaps":226,"commits":66,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":5081,"nospace":363,"commits":427,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":23,"nospace":9449,"commits":506,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":117344,"char120":13446,"char150":4574,"commits":780,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-16","convention":{"lang":"cs","indent":{"tab":25821,"space":160831,"commits":923,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":826,"nospace":16,"newline":8333,"commits":526,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":492,"allcaps":115,"notallcaps":165,"commits":91,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6987,"nospace":1241,"commits":506,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":910,"nospace":10766,"commits":606,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":175397,"char120":19749,"char150":4859,"commits":955,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-15","convention":{"lang":"cs","indent":{"tab":112873,"space":447777,"commits":2292,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3628,"nospace":376,"newline":19238,"commits":1304,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":417,"allcaps":498,"notallcaps":234,"commits":192,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18135,"nospace":1909,"commits":1302,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":726,"nospace":31739,"commits":1523,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":495091,"char120":44804,"char150":12582,"commits":2374,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-14","convention":{"lang":"cs","indent":{"tab":151633,"space":471401,"commits":2449,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3423,"nospace":256,"newline":21850,"commits":1419,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":734,"allcaps":219,"notallcaps":1512,"commits":215,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18960,"nospace":3250,"commits":1393,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2738,"nospace":29247,"commits":1673,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":506117,"char120":43715,"char150":13658,"commits":2529,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-13","convention":{"lang":"cs","indent":{"tab":14670,"space":159885,"commits":972,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":571,"nospace":62,"newline":6132,"commits":578,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":395,"allcaps":34,"notallcaps":93,"commits":93,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":5548,"nospace":393,"commits":569,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":103,"nospace":9534,"commits":696,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":172520,"char120":16940,"char150":4359,"commits":992,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-12","convention":{"lang":"cs","indent":{"tab":40536,"space":209078,"commits":1183,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1049,"nospace":281,"newline":9955,"commits":644,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":264,"allcaps":128,"notallcaps":109,"commits":103,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8323,"nospace":1052,"commits":640,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":358,"nospace":15093,"commits":793,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":218101,"char120":21225,"char150":8067,"commits":1223,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-11","convention":{"lang":"cs","indent":{"tab":57163,"space":164129,"commits":840,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1012,"nospace":153,"newline":7194,"commits":449,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":266,"allcaps":238,"notallcaps":1946,"commits":76,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6371,"nospace":793,"commits":440,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":376,"nospace":11074,"commits":512,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":182639,"char120":12508,"char150":2799,"commits":859,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-10","convention":{"lang":"cs","indent":{"tab":28831,"space":188036,"commits":1108,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1147,"nospace":335,"newline":8859,"commits":624,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":190,"allcaps":35,"notallcaps":58,"commits":60,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7451,"nospace":1484,"commits":597,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":731,"nospace":11993,"commits":719,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":196364,"char120":19485,"char150":5721,"commits":1138,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-09","convention":{"lang":"cs","indent":{"tab":55428,"space":252738,"commits":1355,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1338,"nospace":68,"newline":13986,"commits":768,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":909,"allcaps":369,"notallcaps":203,"commits":89,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12287,"nospace":1477,"commits":732,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":557,"nospace":19658,"commits":899,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":275951,"char120":24180,"char150":5570,"commits":1392,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-08","convention":{"lang":"cs","indent":{"tab":95607,"space":426198,"commits":2187,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3245,"nospace":225,"newline":17896,"commits":1285,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":895,"allcaps":987,"notallcaps":460,"commits":192,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17162,"nospace":934,"commits":1262,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":590,"nospace":28065,"commits":1487,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":447676,"char120":44106,"char150":13952,"commits":2234,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-07","convention":{"lang":"cs","indent":{"tab":80503,"space":438553,"commits":2214,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3856,"nospace":278,"newline":16867,"commits":1350,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":625,"allcaps":384,"notallcaps":224,"commits":207,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17083,"nospace":923,"commits":1323,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":629,"nospace":27535,"commits":1553,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":485966,"char120":44867,"char150":12549,"commits":2258,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-04","convention":{"lang":"cs","indent":{"tab":31438,"space":60824,"commits":271,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1256,"nospace":303,"newline":1880,"commits":138,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":46,"allcaps":25,"notallcaps":45,"commits":35,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":2910,"nospace":71,"commits":133,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":78,"nospace":2792,"commits":163,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":64852,"char120":9918,"char150":2487,"commits":288,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-03","convention":{"lang":"cs","indent":{"tab":24597,"space":184234,"commits":755,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":809,"nospace":207,"newline":10028,"commits":421,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":180,"allcaps":185,"notallcaps":93,"commits":73,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8964,"nospace":482,"commits":419,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":72,"nospace":12573,"commits":497,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":197507,"char120":17970,"char150":4165,"commits":784,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-02","convention":{"lang":"cs","indent":{"tab":5780,"space":86706,"commits":812,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":664,"nospace":24,"newline":3670,"commits":402,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":185,"allcaps":26,"notallcaps":85,"commits":77,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":3429,"nospace":140,"commits":393,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":106,"nospace":5902,"commits":508,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":94848,"char120":9252,"char150":2764,"commits":840,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-06-01","convention":{"lang":"cs","indent":{"tab":76780,"space":419290,"commits":2557,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1842,"nospace":120,"newline":20633,"commits":1495,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":441,"allcaps":316,"notallcaps":245,"commits":242,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18503,"nospace":1255,"commits":1482,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":537,"nospace":29972,"commits":1774,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":449178,"char120":45147,"char150":12991,"commits":2600,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-31","convention":{"lang":"cs","indent":{"tab":118961,"space":475302,"commits":2722,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3278,"nospace":614,"newline":17915,"commits":1565,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":490,"allcaps":344,"notallcaps":400,"commits":240,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18022,"nospace":1535,"commits":1523,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":853,"nospace":31039,"commits":1809,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":527997,"char120":46432,"char150":12790,"commits":2785,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-30","convention":{"lang":"cs","indent":{"tab":54269,"space":306366,"commits":1368,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2007,"nospace":305,"newline":14908,"commits":785,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":547,"allcaps":453,"notallcaps":109,"commits":120,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14325,"nospace":793,"commits":767,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":213,"nospace":21177,"commits":916,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":326497,"char120":28904,"char150":6961,"commits":1395,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-29","convention":{"lang":"cs","indent":{"tab":28037,"space":180704,"commits":1261,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1080,"nospace":56,"newline":8058,"commits":734,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":368,"allcaps":60,"notallcaps":135,"commits":104,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7543,"nospace":305,"commits":714,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":107,"nospace":12986,"commits":864,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":198658,"char120":19826,"char150":5974,"commits":1288,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-28","convention":{"lang":"cs","indent":{"tab":29180,"space":161809,"commits":1125,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":950,"nospace":46,"newline":7633,"commits":606,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":138,"allcaps":93,"notallcaps":78,"commits":79,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7169,"nospace":223,"commits":601,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":103,"nospace":11197,"commits":732,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":171523,"char120":18237,"char150":6464,"commits":1174,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-27","convention":{"lang":"cs","indent":{"tab":38215,"space":165563,"commits":1076,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1581,"nospace":38,"newline":7419,"commits":531,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":337,"allcaps":602,"notallcaps":159,"commits":108,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7575,"nospace":320,"commits":529,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":206,"nospace":12024,"commits":667,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":175975,"char120":16874,"char150":5338,"commits":1118,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-26","convention":{"lang":"cs","indent":{"tab":36352,"space":220269,"commits":1574,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1513,"nospace":74,"newline":10340,"commits":916,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":292,"allcaps":74,"notallcaps":208,"commits":164,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9276,"nospace":845,"commits":898,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":50,"nospace":15314,"commits":1063,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":236298,"char120":23304,"char150":6377,"commits":1611,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-25","convention":{"lang":"cs","indent":{"tab":96143,"space":449053,"commits":2510,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3149,"nospace":500,"newline":21240,"commits":1518,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1001,"allcaps":205,"notallcaps":435,"commits":227,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20062,"nospace":1974,"commits":1477,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":367,"nospace":31415,"commits":1740,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":492130,"char120":45604,"char150":11060,"commits":2561,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-24","convention":{"lang":"cs","indent":{"tab":63973,"space":334714,"commits":2428,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2419,"nospace":562,"newline":14919,"commits":1381,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":511,"allcaps":195,"notallcaps":243,"commits":201,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13803,"nospace":1332,"commits":1365,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":226,"nospace":24901,"commits":1631,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":368880,"char120":33365,"char150":10968,"commits":2492,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-23","convention":{"lang":"cs","indent":{"tab":39245,"space":201780,"commits":1178,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1210,"nospace":169,"newline":8705,"commits":643,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":956,"allcaps":146,"notallcaps":162,"commits":109,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8343,"nospace":1170,"commits":632,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":47,"nospace":13824,"commits":761,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":217844,"char120":19307,"char150":5493,"commits":1201,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-22","convention":{"lang":"cs","indent":{"tab":39147,"space":215626,"commits":1400,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2295,"nospace":39,"newline":9022,"commits":812,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":233,"allcaps":450,"notallcaps":125,"commits":146,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9332,"nospace":606,"commits":773,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":294,"nospace":14536,"commits":937,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":222729,"char120":24001,"char150":6421,"commits":1444,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-21","convention":{"lang":"cs","indent":{"tab":32085,"space":199105,"commits":1049,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1263,"nospace":102,"newline":10030,"commits":633,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":267,"allcaps":190,"notallcaps":261,"commits":118,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8903,"nospace":535,"commits":620,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":276,"nospace":14084,"commits":687,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":212108,"char120":22745,"char150":6486,"commits":1080,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-20","convention":{"lang":"cs","indent":{"tab":7587,"space":141276,"commits":712,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":349,"nospace":5,"newline":7105,"commits":420,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":287,"allcaps":66,"notallcaps":128,"commits":66,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6518,"nospace":332,"commits":403,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":35,"nospace":9416,"commits":493,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":149192,"char120":13611,"char150":3455,"commits":737,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-19","convention":{"lang":"cs","indent":{"tab":31216,"space":168038,"commits":1344,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1353,"nospace":122,"newline":7831,"commits":740,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":357,"allcaps":144,"notallcaps":309,"commits":134,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7815,"nospace":344,"commits":719,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":166,"nospace":12356,"commits":884,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":185988,"char120":17624,"char150":5022,"commits":1368,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-18","convention":{"lang":"cs","indent":{"tab":64186,"space":412259,"commits":2582,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2839,"nospace":169,"newline":17689,"commits":1490,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":563,"allcaps":250,"notallcaps":426,"commits":259,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17082,"nospace":1346,"commits":1467,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":337,"nospace":28658,"commits":1748,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":446070,"char120":46365,"char150":13784,"commits":2640,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-17","convention":{"lang":"cs","indent":{"tab":91394,"space":402599,"commits":2562,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3537,"nospace":316,"newline":18372,"commits":1510,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":866,"allcaps":596,"notallcaps":685,"commits":221,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18074,"nospace":1180,"commits":1490,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":578,"nospace":28589,"commits":1756,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":433781,"char120":42289,"char150":11896,"commits":2623,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-16","convention":{"lang":"cs","indent":{"tab":44849,"space":255020,"commits":1377,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1683,"nospace":257,"newline":11610,"commits":875,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":416,"allcaps":2585,"notallcaps":625,"commits":124,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9733,"nospace":2287,"commits":864,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":186,"nospace":17128,"commits":986,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":267638,"char120":28427,"char150":6796,"commits":1418,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-15","convention":{"lang":"cs","indent":{"tab":33741,"space":142835,"commits":1051,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1222,"nospace":116,"newline":6059,"commits":575,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":89,"allcaps":173,"notallcaps":596,"commits":78,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":5810,"nospace":395,"commits":554,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":74,"nospace":9719,"commits":670,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":154530,"char120":16079,"char150":4481,"commits":1084,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-14","convention":{"lang":"cs","indent":{"tab":17691,"space":139733,"commits":977,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1014,"nospace":64,"newline":6266,"commits":528,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":154,"allcaps":84,"notallcaps":201,"commits":56,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6424,"nospace":357,"commits":506,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":153,"nospace":9676,"commits":628,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":149865,"char120":14915,"char150":3651,"commits":1008,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-13","convention":{"lang":"cs","indent":{"tab":39939,"space":246330,"commits":1424,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":783,"nospace":95,"newline":14607,"commits":833,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":344,"allcaps":726,"notallcaps":93,"commits":97,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13210,"nospace":561,"commits":798,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":526,"nospace":19103,"commits":947,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":259146,"char120":24676,"char150":8234,"commits":1464,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-12","convention":{"lang":"cs","indent":{"tab":15915,"space":129812,"commits":752,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1234,"nospace":108,"newline":5780,"commits":435,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":294,"allcaps":159,"notallcaps":88,"commits":83,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":5412,"nospace":205,"commits":422,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":83,"nospace":8919,"commits":482,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":139038,"char120":13499,"char150":4552,"commits":768,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-11","convention":{"lang":"cs","indent":{"tab":112319,"space":458100,"commits":2491,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3053,"nospace":392,"newline":21247,"commits":1464,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":423,"allcaps":342,"notallcaps":263,"commits":247,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19873,"nospace":1528,"commits":1436,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":588,"nospace":31954,"commits":1697,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":480450,"char120":50027,"char150":13866,"commits":2550,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-10","convention":{"lang":"cs","indent":{"tab":95889,"space":395590,"commits":2436,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2472,"nospace":592,"newline":20134,"commits":1389,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":428,"allcaps":223,"notallcaps":535,"commits":244,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17355,"nospace":1806,"commits":1357,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":994,"nospace":28136,"commits":1634,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":433013,"char120":40377,"char150":11801,"commits":2509,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-09","convention":{"lang":"cs","indent":{"tab":97231,"space":276351,"commits":1546,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2344,"nospace":797,"newline":13579,"commits":921,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1142,"allcaps":399,"notallcaps":256,"commits":128,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12984,"nospace":1294,"commits":885,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":276,"nospace":19595,"commits":1060,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":297259,"char120":28469,"char150":7321,"commits":1577,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-08","convention":{"lang":"cs","indent":{"tab":182524,"space":399408,"commits":1270,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":6613,"nospace":498,"newline":28540,"commits":728,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":589,"allcaps":229,"notallcaps":425,"commits":140,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":31447,"nospace":1016,"commits":710,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":217,"nospace":42988,"commits":851,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":467833,"char120":45819,"char150":15185,"commits":1298,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-07","convention":{"lang":"cs","indent":{"tab":44659,"space":221210,"commits":1215,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1065,"nospace":133,"newline":9777,"commits":678,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":689,"allcaps":131,"notallcaps":228,"commits":128,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9825,"nospace":343,"commits":673,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":448,"nospace":15042,"commits":816,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":246655,"char120":27484,"char150":7428,"commits":1239,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-06","convention":{"lang":"cs","indent":{"tab":8614,"space":158363,"commits":689,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":568,"nospace":40,"newline":7181,"commits":409,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":488,"allcaps":177,"notallcaps":230,"commits":76,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6366,"nospace":390,"commits":406,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":233,"nospace":10256,"commits":458,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":167616,"char120":21165,"char150":6804,"commits":701,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-05","convention":{"lang":"cs","indent":{"tab":43190,"space":228338,"commits":1284,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1571,"nospace":246,"newline":10010,"commits":742,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":382,"allcaps":273,"notallcaps":220,"commits":111,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9121,"nospace":677,"commits":722,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":714,"nospace":14589,"commits":853,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":237483,"char120":24469,"char150":9044,"commits":1311,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-04","convention":{"lang":"cs","indent":{"tab":105997,"space":486493,"commits":2552,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3375,"nospace":1612,"newline":23022,"commits":1583,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":662,"allcaps":582,"notallcaps":274,"commits":237,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21212,"nospace":2422,"commits":1552,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":475,"nospace":33356,"commits":1780,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":508815,"char120":51817,"char150":16238,"commits":2594,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-03","convention":{"lang":"cs","indent":{"tab":81328,"space":491734,"commits":2619,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3162,"nospace":602,"newline":25377,"commits":1644,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":856,"allcaps":458,"notallcaps":1054,"commits":281,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21995,"nospace":2459,"commits":1622,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":697,"nospace":32621,"commits":1859,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":522939,"char120":54177,"char150":18225,"commits":2669,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-02","convention":{"lang":"cs","indent":{"tab":41078,"space":232846,"commits":1334,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1045,"nospace":130,"newline":10297,"commits":744,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":551,"allcaps":250,"notallcaps":94,"commits":151,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9147,"nospace":525,"commits":731,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":520,"nospace":13963,"commits":861,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":251320,"char120":26886,"char150":8703,"commits":1360,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-05-01","convention":{"lang":"cs","indent":{"tab":75551,"space":333994,"commits":1717,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2369,"nospace":298,"newline":23444,"commits":922,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":586,"allcaps":382,"notallcaps":466,"commits":217,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22742,"nospace":1029,"commits":891,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":426,"nospace":30317,"commits":1064,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":354362,"char120":35812,"char150":13205,"commits":1762,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-30","convention":{"lang":"cs","indent":{"tab":31637,"space":181188,"commits":1076,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1130,"nospace":400,"newline":11755,"commits":616,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":176,"allcaps":46,"notallcaps":403,"commits":71,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10713,"nospace":1035,"commits":597,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":240,"nospace":15277,"commits":719,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":193579,"char120":18365,"char150":6626,"commits":1100,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-29","convention":{"lang":"cs","indent":{"tab":26375,"space":322271,"commits":1433,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1367,"nospace":99,"newline":16755,"commits":821,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":778,"allcaps":63,"notallcaps":129,"commits":123,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14807,"nospace":441,"commits":800,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":925,"nospace":20504,"commits":965,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":328662,"char120":36897,"char150":12454,"commits":1470,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-28","convention":{"lang":"cs","indent":{"tab":63576,"space":318329,"commits":1418,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":955,"nospace":143,"newline":17260,"commits":847,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":476,"allcaps":168,"notallcaps":760,"commits":161,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15938,"nospace":552,"commits":817,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":175,"nospace":24484,"commits":974,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":342249,"char120":36499,"char150":10669,"commits":1463,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-27","convention":{"lang":"cs","indent":{"tab":236552,"space":629254,"commits":2556,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5032,"nospace":993,"newline":34866,"commits":1512,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":453,"allcaps":553,"notallcaps":274,"commits":234,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23566,"nospace":12163,"commits":1496,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":11389,"nospace":37788,"commits":1741,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":705291,"char120":61046,"char150":16009,"commits":2627,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-26","convention":{"lang":"cs","indent":{"tab":152731,"space":582975,"commits":2872,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4608,"nospace":1061,"newline":28562,"commits":1800,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":696,"allcaps":397,"notallcaps":258,"commits":281,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":26996,"nospace":3417,"commits":1791,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1136,"nospace":41882,"commits":2013,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":620667,"char120":60223,"char150":18544,"commits":2926,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-25","convention":{"lang":"cs","indent":{"tab":33404,"space":221523,"commits":1277,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1391,"nospace":165,"newline":19241,"commits":748,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":175,"allcaps":215,"notallcaps":100,"commits":113,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18544,"nospace":666,"commits":726,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":631,"nospace":23799,"commits":886,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":237977,"char120":22630,"char150":8426,"commits":1321,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-24","convention":{"lang":"cs","indent":{"tab":78770,"space":351020,"commits":1437,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2537,"nospace":246,"newline":15616,"commits":850,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":430,"allcaps":176,"notallcaps":188,"commits":166,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14470,"nospace":1308,"commits":819,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":281,"nospace":24553,"commits":951,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":389120,"char120":33900,"char150":8818,"commits":1490,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-23","convention":{"lang":"cs","indent":{"tab":54573,"space":395373,"commits":1004,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2094,"nospace":182,"newline":20648,"commits":625,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":393,"allcaps":266,"notallcaps":142,"commits":107,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20808,"nospace":1208,"commits":602,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":486,"nospace":28624,"commits":697,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":414217,"char120":42621,"char150":9438,"commits":1024,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-22","convention":{"lang":"cs","indent":{"tab":41551,"space":283499,"commits":1326,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1365,"nospace":145,"newline":13480,"commits":780,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":288,"allcaps":63,"notallcaps":108,"commits":121,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12558,"nospace":668,"commits":761,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":180,"nospace":20537,"commits":893,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":308435,"char120":30511,"char150":7804,"commits":1359,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-21","convention":{"lang":"cs","indent":{"tab":53704,"space":320915,"commits":1606,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1711,"nospace":106,"newline":16934,"commits":958,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":357,"allcaps":114,"notallcaps":254,"commits":153,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15796,"nospace":593,"commits":930,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":482,"nospace":24193,"commits":1107,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":347420,"char120":34824,"char150":11158,"commits":1642,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-20","convention":{"lang":"cs","indent":{"tab":193721,"space":541007,"commits":2591,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":8001,"nospace":452,"newline":27374,"commits":1624,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":750,"allcaps":306,"notallcaps":1001,"commits":232,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":28771,"nospace":2735,"commits":1570,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":719,"nospace":44757,"commits":1822,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":606495,"char120":57891,"char150":17597,"commits":2650,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-19","convention":{"lang":"cs","indent":{"tab":79794,"space":475232,"commits":2349,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4078,"nospace":370,"newline":25817,"commits":1430,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":365,"allcaps":439,"notallcaps":598,"commits":227,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24486,"nospace":1862,"commits":1393,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":687,"nospace":35684,"commits":1616,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":513860,"char120":45570,"char150":14962,"commits":2388,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-18","convention":{"lang":"cs","indent":{"tab":64268,"space":303873,"commits":1517,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2933,"nospace":216,"newline":15848,"commits":948,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":423,"allcaps":263,"notallcaps":270,"commits":147,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14752,"nospace":1506,"commits":934,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1086,"nospace":21899,"commits":1045,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":329531,"char120":31771,"char150":10004,"commits":1565,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-17","convention":{"lang":"cs","indent":{"tab":15646,"space":97738,"commits":771,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":638,"nospace":88,"newline":4520,"commits":467,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":157,"allcaps":67,"notallcaps":131,"commits":69,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":4313,"nospace":319,"commits":446,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":135,"nospace":6794,"commits":510,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":101597,"char120":11286,"char150":3613,"commits":791,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-16","convention":{"lang":"cs","indent":{"tab":74426,"space":280174,"commits":973,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1651,"nospace":2045,"newline":14076,"commits":605,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":179,"allcaps":201,"notallcaps":102,"commits":83,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13136,"nospace":1973,"commits":600,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":864,"nospace":20471,"commits":677,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":313002,"char120":25264,"char150":7667,"commits":1003,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-15","convention":{"lang":"cs","indent":{"tab":20364,"space":224473,"commits":1158,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1072,"nospace":205,"newline":9717,"commits":648,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":295,"allcaps":55,"notallcaps":233,"commits":92,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8746,"nospace":426,"commits":631,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":223,"nospace":15095,"commits":759,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":238304,"char120":26588,"char150":7367,"commits":1186,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-14","convention":{"lang":"cs","indent":{"tab":25648,"space":187489,"commits":1131,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1048,"nospace":229,"newline":7887,"commits":625,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":283,"allcaps":117,"notallcaps":195,"commits":142,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7011,"nospace":1011,"commits":593,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":78,"nospace":13009,"commits":731,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":200971,"char120":20404,"char150":5325,"commits":1155,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-13","convention":{"lang":"cs","indent":{"tab":48151,"space":424713,"commits":2087,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2148,"nospace":178,"newline":20113,"commits":1192,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":439,"allcaps":340,"notallcaps":297,"commits":182,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18593,"nospace":1017,"commits":1164,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":368,"nospace":29626,"commits":1404,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":461155,"char120":45280,"char150":12304,"commits":2136,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-12","convention":{"lang":"cs","indent":{"tab":77427,"space":351852,"commits":2244,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2229,"nospace":581,"newline":18526,"commits":1338,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":397,"allcaps":258,"notallcaps":366,"commits":184,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17017,"nospace":1541,"commits":1289,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":752,"nospace":26860,"commits":1518,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":383280,"char120":35449,"char150":11439,"commits":2295,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-11","convention":{"lang":"cs","indent":{"tab":47444,"space":253687,"commits":1222,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4686,"nospace":125,"newline":9765,"commits":730,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":395,"allcaps":114,"notallcaps":137,"commits":126,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11306,"nospace":1275,"commits":710,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":427,"nospace":18533,"commits":841,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":274993,"char120":25910,"char150":7838,"commits":1254,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-10","convention":{"lang":"cs","indent":{"tab":34770,"space":216398,"commits":1408,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1638,"nospace":89,"newline":10087,"commits":804,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":286,"allcaps":94,"notallcaps":247,"commits":149,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9248,"nospace":833,"commits":787,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":498,"nospace":14862,"commits":943,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":233957,"char120":25887,"char150":6280,"commits":1435,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-09","convention":{"lang":"cs","indent":{"tab":37689,"space":180706,"commits":925,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1508,"nospace":165,"newline":8874,"commits":549,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":252,"allcaps":236,"notallcaps":211,"commits":111,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8390,"nospace":676,"commits":544,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":268,"nospace":13814,"commits":627,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":196958,"char120":18568,"char150":5144,"commits":951,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-08","convention":{"lang":"cs","indent":{"tab":23118,"space":230286,"commits":1031,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1601,"nospace":314,"newline":11794,"commits":616,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":408,"allcaps":186,"notallcaps":147,"commits":94,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10689,"nospace":1474,"commits":604,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":445,"nospace":16724,"commits":706,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":256092,"char120":24715,"char150":6317,"commits":1051,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-07","convention":{"lang":"cs","indent":{"tab":36193,"space":184590,"commits":931,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1530,"nospace":483,"newline":6982,"commits":535,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":113,"allcaps":111,"notallcaps":114,"commits":81,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":7445,"nospace":666,"commits":519,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":745,"nospace":11474,"commits":614,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":200508,"char120":17646,"char150":5407,"commits":963,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-06","convention":{"lang":"cs","indent":{"tab":159873,"space":459317,"commits":2344,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2541,"nospace":1253,"newline":22056,"commits":1461,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":291,"allcaps":546,"notallcaps":218,"commits":239,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20288,"nospace":2358,"commits":1425,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":504,"nospace":33006,"commits":1682,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":480243,"char120":49875,"char150":15093,"commits":2383,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-05","convention":{"lang":"cs","indent":{"tab":145650,"space":511451,"commits":2378,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5303,"nospace":678,"newline":19109,"commits":1430,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":443,"allcaps":428,"notallcaps":311,"commits":238,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18261,"nospace":3360,"commits":1410,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":523,"nospace":32391,"commits":1643,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":545069,"char120":46871,"char150":13516,"commits":2431,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-04","convention":{"lang":"cs","indent":{"tab":92156,"space":269787,"commits":1122,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4189,"nospace":71,"newline":11247,"commits":650,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":335,"allcaps":433,"notallcaps":260,"commits":117,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11665,"nospace":1719,"commits":651,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":893,"nospace":18883,"commits":765,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":291848,"char120":24762,"char150":6715,"commits":1143,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-03","convention":{"lang":"cs","indent":{"tab":29031,"space":254768,"commits":1091,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":624,"nospace":168,"newline":13785,"commits":629,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":558,"allcaps":220,"notallcaps":86,"commits":138,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12083,"nospace":776,"commits":619,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":572,"nospace":17038,"commits":721,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":268527,"char120":29415,"char150":8633,"commits":1131,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-02","convention":{"lang":"cs","indent":{"tab":59629,"space":238281,"commits":1109,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2474,"nospace":238,"newline":10381,"commits":626,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":438,"allcaps":111,"notallcaps":732,"commits":142,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10694,"nospace":661,"commits":615,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":187,"nospace":17926,"commits":727,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":255300,"char120":24905,"char150":8139,"commits":1144,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-04-01","convention":{"lang":"cs","indent":{"tab":34060,"space":174537,"commits":952,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":736,"nospace":197,"newline":6911,"commits":538,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":156,"allcaps":60,"notallcaps":120,"commits":67,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6494,"nospace":324,"commits":532,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":251,"nospace":10968,"commits":656,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":191314,"char120":18052,"char150":5590,"commits":976,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-31","convention":{"lang":"cs","indent":{"tab":25412,"space":105995,"commits":799,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":664,"nospace":65,"newline":4733,"commits":425,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":162,"allcaps":54,"notallcaps":96,"commits":86,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":4108,"nospace":515,"commits":419,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":124,"nospace":7230,"commits":527,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":117951,"char120":11078,"char150":2932,"commits":816,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-30","convention":{"lang":"cs","indent":{"tab":115935,"space":473507,"commits":2181,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2338,"nospace":1107,"newline":22538,"commits":1344,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":426,"allcaps":755,"notallcaps":190,"commits":235,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21084,"nospace":2119,"commits":1301,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":583,"nospace":34125,"commits":1543,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":521170,"char120":42715,"char150":11726,"commits":2216,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-29","convention":{"lang":"cs","indent":{"tab":109657,"space":485093,"commits":2356,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1766,"nospace":260,"newline":23973,"commits":1445,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":335,"allcaps":868,"notallcaps":252,"commits":204,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21180,"nospace":1448,"commits":1420,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":409,"nospace":33885,"commits":1643,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":529285,"char120":50970,"char150":13330,"commits":2400,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-28","convention":{"lang":"cs","indent":{"tab":78839,"space":259508,"commits":1266,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1881,"nospace":164,"newline":11547,"commits":744,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":223,"allcaps":286,"notallcaps":196,"commits":130,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8949,"nospace":3099,"commits":740,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2746,"nospace":16012,"commits":891,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":291502,"char120":25889,"char150":6548,"commits":1286,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-27","convention":{"lang":"cs","indent":{"tab":92387,"space":270079,"commits":1061,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3606,"nospace":316,"newline":12053,"commits":651,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":288,"allcaps":327,"notallcaps":166,"commits":87,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13202,"nospace":903,"commits":642,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":503,"nospace":18916,"commits":731,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":288853,"char120":26875,"char150":7878,"commits":1091,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-26","convention":{"lang":"cs","indent":{"tab":64183,"space":348404,"commits":1769,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1184,"nospace":97,"newline":16808,"commits":1058,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":459,"allcaps":533,"notallcaps":117,"commits":180,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15017,"nospace":1200,"commits":1022,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":561,"nospace":23625,"commits":1216,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":369576,"char120":37634,"char150":10240,"commits":1813,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-25","convention":{"lang":"cs","indent":{"tab":100761,"space":412673,"commits":2068,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4865,"nospace":312,"newline":18738,"commits":1213,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":794,"allcaps":522,"notallcaps":640,"commits":238,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18531,"nospace":1452,"commits":1194,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":345,"nospace":32083,"commits":1394,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":446151,"char120":46753,"char150":15222,"commits":2123,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-24","convention":{"lang":"cs","indent":{"tab":42608,"space":284302,"commits":2045,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2319,"nospace":175,"newline":13333,"commits":1134,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":316,"allcaps":105,"notallcaps":129,"commits":181,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13258,"nospace":772,"commits":1124,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":376,"nospace":20387,"commits":1370,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":297325,"char120":33189,"char150":10349,"commits":2094,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-23","convention":{"lang":"cs","indent":{"tab":95665,"space":494149,"commits":2352,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2389,"nospace":96,"newline":25374,"commits":1360,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":414,"allcaps":412,"notallcaps":293,"commits":228,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21473,"nospace":2914,"commits":1323,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2476,"nospace":34578,"commits":1577,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":525693,"char120":50494,"char150":15561,"commits":2401,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-22","convention":{"lang":"cs","indent":{"tab":75705,"space":418560,"commits":2437,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3680,"nospace":260,"newline":19056,"commits":1424,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":453,"allcaps":412,"notallcaps":324,"commits":232,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17767,"nospace":2141,"commits":1385,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":633,"nospace":28906,"commits":1669,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":456516,"char120":42211,"char150":13701,"commits":2492,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-21","convention":{"lang":"cs","indent":{"tab":79359,"space":388150,"commits":2118,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2717,"nospace":131,"newline":19894,"commits":1235,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":619,"allcaps":419,"notallcaps":290,"commits":219,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18710,"nospace":1467,"commits":1218,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1565,"nospace":27847,"commits":1434,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":416688,"char120":40976,"char150":12704,"commits":2172,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-20","convention":{"lang":"cs","indent":{"tab":125689,"space":455668,"commits":2008,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3662,"nospace":171,"newline":20083,"commits":1168,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":767,"allcaps":690,"notallcaps":410,"commits":214,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20146,"nospace":788,"commits":1116,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":746,"nospace":33819,"commits":1332,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":482153,"char120":49171,"char150":12366,"commits":2048,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-19","convention":{"lang":"cs","indent":{"tab":54990,"space":352338,"commits":1799,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2089,"nospace":212,"newline":19132,"commits":1025,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":519,"allcaps":556,"notallcaps":130,"commits":172,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17773,"nospace":1325,"commits":978,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":677,"nospace":25267,"commits":1176,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":364389,"char120":38409,"char150":10985,"commits":1854,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-18","convention":{"lang":"cs","indent":{"tab":93108,"space":525511,"commits":2169,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4621,"nospace":789,"newline":25520,"commits":1260,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":554,"allcaps":440,"notallcaps":1031,"commits":236,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24718,"nospace":3833,"commits":1216,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":577,"nospace":39688,"commits":1463,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":545240,"char120":57293,"char150":16523,"commits":2205,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-17","convention":{"lang":"cs","indent":{"tab":42448,"space":365404,"commits":1810,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1890,"nospace":234,"newline":20439,"commits":1092,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":808,"allcaps":175,"notallcaps":162,"commits":168,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19405,"nospace":610,"commits":1051,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":428,"nospace":27366,"commits":1212,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":383882,"char120":37906,"char150":13607,"commits":1851,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-16","convention":{"lang":"cs","indent":{"tab":163838,"space":590493,"commits":2578,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5434,"nospace":1585,"newline":25693,"commits":1584,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":726,"allcaps":518,"notallcaps":731,"commits":257,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24265,"nospace":4544,"commits":1556,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":3306,"nospace":37778,"commits":1816,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":633427,"char120":57491,"char150":15864,"commits":2644,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-15","convention":{"lang":"cs","indent":{"tab":123859,"space":407568,"commits":2193,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4353,"nospace":469,"newline":19558,"commits":1351,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":441,"allcaps":493,"notallcaps":316,"commits":204,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20614,"nospace":1152,"commits":1320,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":429,"nospace":29155,"commits":1534,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":432571,"char120":44231,"char150":12019,"commits":2238,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-14","convention":{"lang":"cs","indent":{"tab":80672,"space":343384,"commits":1749,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4369,"nospace":571,"newline":16430,"commits":1034,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":453,"allcaps":289,"notallcaps":167,"commits":155,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16348,"nospace":2026,"commits":1023,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":280,"nospace":26507,"commits":1171,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":367201,"char120":34591,"char150":9327,"commits":1773,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-13","convention":{"lang":"cs","indent":{"tab":45070,"space":356709,"commits":2060,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2074,"nospace":96,"newline":18394,"commits":1244,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":749,"allcaps":1033,"notallcaps":333,"commits":209,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16681,"nospace":986,"commits":1214,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":201,"nospace":25389,"commits":1378,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":384839,"char120":38506,"char150":11078,"commits":2129,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-12","convention":{"lang":"cs","indent":{"tab":124017,"space":439104,"commits":1887,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4294,"nospace":526,"newline":26057,"commits":1140,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":636,"allcaps":389,"notallcaps":345,"commits":194,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25752,"nospace":1635,"commits":1123,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":699,"nospace":35723,"commits":1276,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":472606,"char120":50497,"char150":15051,"commits":1931,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-11","convention":{"lang":"cs","indent":{"tab":45023,"space":328601,"commits":2051,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1883,"nospace":116,"newline":15294,"commits":1189,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":488,"allcaps":208,"notallcaps":202,"commits":189,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14513,"nospace":604,"commits":1158,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":631,"nospace":22459,"commits":1373,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":353476,"char120":39851,"char150":11403,"commits":2105,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-10","convention":{"lang":"cs","indent":{"tab":65581,"space":367274,"commits":2079,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1486,"nospace":370,"newline":19012,"commits":1178,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":449,"allcaps":195,"notallcaps":218,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16867,"nospace":776,"commits":1166,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":586,"nospace":25946,"commits":1381,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":397555,"char120":41927,"char150":12920,"commits":2126,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-09","convention":{"lang":"cs","indent":{"tab":100012,"space":478695,"commits":2296,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3627,"nospace":410,"newline":23469,"commits":1390,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":910,"allcaps":267,"notallcaps":250,"commits":224,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23340,"nospace":1255,"commits":1357,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":415,"nospace":35755,"commits":1606,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":511213,"char120":51936,"char150":14477,"commits":2347,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-08","convention":{"lang":"cs","indent":{"tab":58534,"space":461539,"commits":2221,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2233,"nospace":611,"newline":26696,"commits":1362,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":429,"allcaps":338,"notallcaps":232,"commits":206,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22758,"nospace":1986,"commits":1331,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1216,"nospace":31963,"commits":1547,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":497660,"char120":46406,"char150":11110,"commits":2279,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-07","convention":{"lang":"cs","indent":{"tab":86991,"space":406275,"commits":1922,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4078,"nospace":415,"newline":20450,"commits":1066,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":567,"allcaps":524,"notallcaps":285,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18822,"nospace":2160,"commits":1033,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1602,"nospace":27750,"commits":1256,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":436456,"char120":42150,"char150":14320,"commits":1961,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-06","convention":{"lang":"cs","indent":{"tab":39093,"space":307116,"commits":1747,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1910,"nospace":44,"newline":16268,"commits":1034,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":351,"allcaps":244,"notallcaps":443,"commits":168,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15150,"nospace":596,"commits":1000,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":390,"nospace":22291,"commits":1200,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":323342,"char120":35573,"char150":11654,"commits":1811,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-05","convention":{"lang":"cs","indent":{"tab":83972,"space":299348,"commits":1797,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1821,"nospace":184,"newline":17719,"commits":1046,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":315,"allcaps":130,"notallcaps":90,"commits":168,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13367,"nospace":3184,"commits":1026,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":686,"nospace":21851,"commits":1204,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":325173,"char120":31678,"char150":9595,"commits":1857,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-04","convention":{"lang":"cs","indent":{"tab":41015,"space":254408,"commits":1632,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2564,"nospace":169,"newline":10565,"commits":891,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":189,"allcaps":174,"notallcaps":107,"commits":150,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10836,"nospace":477,"commits":845,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":498,"nospace":16953,"commits":1047,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":267422,"char120":29895,"char150":8784,"commits":1671,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-03","convention":{"lang":"cs","indent":{"tab":23664,"space":146382,"commits":893,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1105,"nospace":60,"newline":6222,"commits":481,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":286,"allcaps":100,"notallcaps":85,"commits":83,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":5941,"nospace":389,"commits":465,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":142,"nospace":10190,"commits":585,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":155241,"char120":15119,"char150":4370,"commits":908,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-03-01","convention":{"lang":"cs","indent":{"tab":4238,"space":13684,"commits":121,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":202,"nospace":0,"newline":520,"commits":65,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":196,"allcaps":5,"notallcaps":3,"commits":9,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":551,"nospace":4,"commits":61,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":22,"nospace":894,"commits":75,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":13617,"char120":1584,"char150":509,"commits":123,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-28","convention":{"lang":"cs","indent":{"tab":3490,"space":20968,"commits":140,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":211,"nospace":14,"newline":1074,"commits":76,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1,"allcaps":0,"notallcaps":4,"commits":2,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":914,"nospace":110,"commits":76,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":75,"nospace":1443,"commits":88,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":20365,"char120":2339,"char150":805,"commits":142,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-26","convention":{"lang":"cs","indent":{"tab":1356,"space":25049,"commits":123,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":96,"nospace":52,"newline":1567,"commits":73,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":24,"allcaps":51,"notallcaps":26,"commits":19,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":1344,"nospace":55,"commits":74,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":3,"nospace":2001,"commits":81,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":27345,"char120":2430,"char150":655,"commits":123,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-24","convention":{"lang":"cs","indent":{"tab":385,"space":11226,"commits":62,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":98,"nospace":0,"newline":508,"commits":31,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":4,"allcaps":2,"notallcaps":1,"commits":4,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":463,"nospace":11,"commits":31,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":0,"nospace":699,"commits":40,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":11706,"char120":972,"char150":226,"commits":62,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-22","convention":{"lang":"cs","indent":{"tab":5875,"space":55107,"commits":151,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":238,"nospace":243,"newline":2286,"commits":101,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":276,"allcaps":18,"notallcaps":78,"commits":26,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":1652,"nospace":497,"commits":99,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":43,"nospace":3339,"commits":109,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":61683,"char120":6890,"char150":2070,"commits":155,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-21","convention":{"lang":"cs","indent":{"tab":5109,"space":15604,"commits":69,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":236,"nospace":76,"newline":659,"commits":37,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":14,"allcaps":2,"notallcaps":1,"commits":6,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":673,"nospace":150,"commits":41,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":71,"nospace":1013,"commits":49,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":16685,"char120":1689,"char150":472,"commits":69,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-20","convention":{"lang":"cs","indent":{"tab":3789,"space":6957,"commits":89,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":257,"nospace":11,"newline":395,"commits":58,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":15,"allcaps":1,"notallcaps":0,"commits":4,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":513,"nospace":47,"commits":56,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":15,"nospace":713,"commits":69,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":7576,"char120":751,"char150":220,"commits":94,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-18","convention":{"lang":"cs","indent":{"tab":720,"space":6754,"commits":114,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":27,"nospace":0,"newline":373,"commits":54,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":14,"allcaps":1,"notallcaps":10,"commits":4,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":301,"nospace":7,"commits":50,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":14,"nospace":515,"commits":66,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":6987,"char120":797,"char150":214,"commits":115,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-17","convention":{"lang":"cs","indent":{"tab":6236,"space":13165,"commits":103,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":36,"nospace":6,"newline":438,"commits":56,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":21,"allcaps":12,"notallcaps":31,"commits":12,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":440,"nospace":4,"commits":53,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":5,"nospace":872,"commits":75,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":13307,"char120":1597,"char150":517,"commits":105,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-16","convention":{"lang":"cs","indent":{"tab":1020,"space":6631,"commits":71,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":77,"nospace":7,"newline":338,"commits":43,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":11,"allcaps":0,"notallcaps":2,"commits":3,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":342,"nospace":27,"commits":42,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":5,"nospace":548,"commits":48,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":7106,"char120":674,"char150":179,"commits":76,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-14","convention":{"lang":"cs","indent":{"tab":2683,"space":25642,"commits":107,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":89,"nospace":15,"newline":828,"commits":72,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":22,"allcaps":24,"notallcaps":9,"commits":21,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":523,"nospace":200,"commits":72,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":134,"nospace":1075,"commits":82,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":27629,"char120":2547,"char150":488,"commits":109,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-13","convention":{"lang":"cs","indent":{"tab":26803,"space":139859,"commits":956,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":858,"nospace":17,"newline":6567,"commits":516,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":353,"allcaps":130,"notallcaps":216,"commits":103,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6132,"nospace":132,"commits":507,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":333,"nospace":9583,"commits":622,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":145638,"char120":16426,"char150":5413,"commits":972,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-12","convention":{"lang":"cs","indent":{"tab":65114,"space":320529,"commits":1933,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1893,"nospace":159,"newline":13427,"commits":1079,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":448,"allcaps":293,"notallcaps":1822,"commits":218,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12233,"nospace":546,"commits":1054,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":198,"nospace":20937,"commits":1272,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":362046,"char120":38896,"char150":11070,"commits":1988,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-11","convention":{"lang":"cs","indent":{"tab":72144,"space":356880,"commits":1933,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2804,"nospace":165,"newline":18105,"commits":1077,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":431,"allcaps":975,"notallcaps":384,"commits":209,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17588,"nospace":1054,"commits":1053,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":320,"nospace":26874,"commits":1257,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":386557,"char120":40222,"char150":10398,"commits":1968,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-10","convention":{"lang":"cs","indent":{"tab":46683,"space":303787,"commits":1683,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3250,"nospace":196,"newline":13769,"commits":981,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":415,"allcaps":208,"notallcaps":485,"commits":150,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12862,"nospace":2554,"commits":948,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":319,"nospace":22312,"commits":1110,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":332305,"char120":32992,"char150":9569,"commits":1724,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-09","convention":{"lang":"cs","indent":{"tab":162061,"space":507339,"commits":2081,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3437,"nospace":675,"newline":24353,"commits":1254,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":538,"allcaps":288,"notallcaps":1025,"commits":214,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22192,"nospace":3283,"commits":1207,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1025,"nospace":36430,"commits":1393,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":577994,"char120":47762,"char150":12364,"commits":2130,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-08","convention":{"lang":"cs","indent":{"tab":118376,"space":423962,"commits":2243,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4550,"nospace":427,"newline":18599,"commits":1349,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":399,"allcaps":616,"notallcaps":427,"commits":214,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15661,"nospace":4286,"commits":1316,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2927,"nospace":27265,"commits":1542,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":465266,"char120":42782,"char150":11545,"commits":2303,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-07","convention":{"lang":"cs","indent":{"tab":114773,"space":309815,"commits":1638,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4227,"nospace":283,"newline":13085,"commits":971,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":392,"allcaps":338,"notallcaps":432,"commits":184,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14442,"nospace":921,"commits":961,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":376,"nospace":23071,"commits":1137,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":347650,"char120":36641,"char150":10214,"commits":1675,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-06","convention":{"lang":"cs","indent":{"tab":73750,"space":350699,"commits":1886,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1601,"nospace":212,"newline":16963,"commits":1067,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":472,"allcaps":346,"notallcaps":257,"commits":192,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15278,"nospace":601,"commits":1030,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":537,"nospace":25039,"commits":1254,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":368573,"char120":38697,"char150":11045,"commits":1944,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-05","convention":{"lang":"cs","indent":{"tab":102875,"space":387140,"commits":1807,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3718,"nospace":58,"newline":13538,"commits":1026,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":473,"allcaps":673,"notallcaps":174,"commits":155,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14345,"nospace":567,"commits":1003,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1570,"nospace":25513,"commits":1263,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":405839,"char120":42710,"char150":14708,"commits":1859,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-04","convention":{"lang":"cs","indent":{"tab":107053,"space":498932,"commits":1869,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3269,"nospace":99,"newline":22527,"commits":1131,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1914,"allcaps":388,"notallcaps":599,"commits":235,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20376,"nospace":1578,"commits":1100,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":444,"nospace":34437,"commits":1321,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":556881,"char120":57067,"char150":15876,"commits":1919,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-03","convention":{"lang":"cs","indent":{"tab":200276,"space":606557,"commits":2006,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":6202,"nospace":237,"newline":27074,"commits":1274,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1253,"allcaps":208,"notallcaps":601,"commits":263,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":26758,"nospace":1799,"commits":1255,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":816,"nospace":42882,"commits":1445,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":678684,"char120":62963,"char150":20053,"commits":2059,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-02","convention":{"lang":"cs","indent":{"tab":106224,"space":381565,"commits":2065,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4281,"nospace":244,"newline":17322,"commits":1231,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":730,"allcaps":242,"notallcaps":399,"commits":220,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17979,"nospace":783,"commits":1195,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":557,"nospace":28000,"commits":1405,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":416463,"char120":38635,"char150":10877,"commits":2134,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-02-01","convention":{"lang":"cs","indent":{"tab":108186,"space":481620,"commits":2401,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4540,"nospace":247,"newline":23508,"commits":1473,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":662,"allcaps":410,"notallcaps":257,"commits":235,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23433,"nospace":998,"commits":1447,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1328,"nospace":34531,"commits":1638,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":527172,"char120":47551,"char150":14189,"commits":2459,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-31","convention":{"lang":"cs","indent":{"tab":55790,"space":262760,"commits":1382,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1421,"nospace":196,"newline":11896,"commits":819,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":423,"allcaps":404,"notallcaps":406,"commits":149,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":9900,"nospace":1385,"commits":802,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":925,"nospace":16565,"commits":930,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":282749,"char120":28588,"char150":9574,"commits":1427,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-30","convention":{"lang":"cs","indent":{"tab":111161,"space":434491,"commits":1749,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2518,"nospace":156,"newline":21962,"commits":1035,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":774,"allcaps":419,"notallcaps":589,"commits":216,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19440,"nospace":1692,"commits":1011,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":406,"nospace":31544,"commits":1194,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":480159,"char120":54355,"char150":13124,"commits":1806,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-29","convention":{"lang":"cs","indent":{"tab":46783,"space":254979,"commits":1595,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2249,"nospace":119,"newline":12798,"commits":923,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":296,"allcaps":113,"notallcaps":835,"commits":164,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12223,"nospace":1099,"commits":896,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":266,"nospace":18876,"commits":1059,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":274213,"char120":29959,"char150":9120,"commits":1646,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-28","convention":{"lang":"cs","indent":{"tab":42277,"space":254094,"commits":1368,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3662,"nospace":76,"newline":12636,"commits":795,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":306,"allcaps":145,"notallcaps":854,"commits":137,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12810,"nospace":847,"commits":766,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":930,"nospace":19436,"commits":919,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":256273,"char120":33295,"char150":10869,"commits":1418,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-27","convention":{"lang":"cs","indent":{"tab":97028,"space":320106,"commits":1708,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4305,"nospace":396,"newline":12403,"commits":1026,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":450,"allcaps":643,"notallcaps":118,"commits":160,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13729,"nospace":952,"commits":1011,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1091,"nospace":22133,"commits":1175,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":337783,"char120":36514,"char150":10408,"commits":1759,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-26","convention":{"lang":"cs","indent":{"tab":120924,"space":510761,"commits":2376,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4582,"nospace":217,"newline":24212,"commits":1421,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":576,"allcaps":552,"notallcaps":491,"commits":236,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23385,"nospace":1358,"commits":1385,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":897,"nospace":35989,"commits":1642,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":565129,"char120":54412,"char150":14666,"commits":2454,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-25","convention":{"lang":"cs","indent":{"tab":60115,"space":436363,"commits":2430,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3227,"nospace":208,"newline":20578,"commits":1441,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":470,"allcaps":861,"notallcaps":586,"commits":217,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18716,"nospace":1455,"commits":1411,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":588,"nospace":30294,"commits":1682,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":475008,"char120":41217,"char150":9167,"commits":2488,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-24","convention":{"lang":"cs","indent":{"tab":67554,"space":290359,"commits":1655,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2403,"nospace":314,"newline":12328,"commits":967,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":449,"allcaps":187,"notallcaps":146,"commits":167,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12021,"nospace":1036,"commits":957,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":143,"nospace":19799,"commits":1117,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":314270,"char120":29305,"char150":8784,"commits":1695,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-23","convention":{"lang":"cs","indent":{"tab":58535,"space":367336,"commits":1608,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1652,"nospace":149,"newline":21311,"commits":960,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":401,"allcaps":301,"notallcaps":200,"commits":165,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18943,"nospace":900,"commits":954,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":792,"nospace":26831,"commits":1105,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":389139,"char120":37414,"char150":13118,"commits":1667,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-22","convention":{"lang":"cs","indent":{"tab":78453,"space":317952,"commits":1891,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1355,"nospace":45,"newline":15973,"commits":1067,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":411,"allcaps":303,"notallcaps":374,"commits":174,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13953,"nospace":637,"commits":1045,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":875,"nospace":21974,"commits":1296,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":346609,"char120":36314,"char150":11336,"commits":1936,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-21","convention":{"lang":"cs","indent":{"tab":70268,"space":346125,"commits":1877,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1555,"nospace":296,"newline":18452,"commits":1118,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":370,"allcaps":396,"notallcaps":170,"commits":189,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16152,"nospace":1642,"commits":1098,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":660,"nospace":25835,"commits":1315,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":376142,"char120":38355,"char150":10696,"commits":1935,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-20","convention":{"lang":"cs","indent":{"tab":64865,"space":338128,"commits":1780,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2809,"nospace":179,"newline":14185,"commits":977,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":449,"allcaps":322,"notallcaps":112,"commits":180,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13401,"nospace":1478,"commits":939,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1056,"nospace":23058,"commits":1234,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":365455,"char120":33214,"char150":10390,"commits":1825,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-19","convention":{"lang":"cs","indent":{"tab":42865,"space":378546,"commits":2342,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2528,"nospace":97,"newline":16322,"commits":1317,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":451,"allcaps":154,"notallcaps":274,"commits":197,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15394,"nospace":698,"commits":1283,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":360,"nospace":24705,"commits":1580,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":407833,"char120":40035,"char150":12068,"commits":2412,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-18","convention":{"lang":"cs","indent":{"tab":132307,"space":365001,"commits":2459,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3586,"nospace":256,"newline":15429,"commits":1396,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":619,"allcaps":1611,"notallcaps":249,"commits":204,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13752,"nospace":2988,"commits":1361,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2133,"nospace":23035,"commits":1674,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":393909,"char120":36293,"char150":9327,"commits":2526,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-17","convention":{"lang":"cs","indent":{"tab":36316,"space":216654,"commits":1579,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":841,"nospace":179,"newline":9314,"commits":896,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":331,"allcaps":534,"notallcaps":133,"commits":139,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8127,"nospace":914,"commits":865,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1136,"nospace":12710,"commits":1031,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":242710,"char120":25185,"char150":6619,"commits":1630,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-16","convention":{"lang":"cs","indent":{"tab":76654,"space":251042,"commits":1724,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2812,"nospace":78,"newline":10836,"commits":946,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":151,"allcaps":619,"notallcaps":178,"commits":131,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12550,"nospace":353,"commits":922,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":227,"nospace":17904,"commits":1139,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":263071,"char120":27561,"char150":9104,"commits":1755,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-15","convention":{"lang":"cs","indent":{"tab":61933,"space":281025,"commits":1679,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2625,"nospace":166,"newline":10767,"commits":952,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":568,"allcaps":244,"notallcaps":941,"commits":183,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10631,"nospace":761,"commits":904,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":913,"nospace":18429,"commits":1138,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":306524,"char120":32731,"char150":11066,"commits":1728,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-14","convention":{"lang":"cs","indent":{"tab":109951,"space":390084,"commits":1889,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1519,"nospace":147,"newline":17732,"commits":1095,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":595,"allcaps":654,"notallcaps":254,"commits":177,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15934,"nospace":1117,"commits":1067,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":306,"nospace":27173,"commits":1275,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":410195,"char120":41047,"char150":9396,"commits":1945,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-13","convention":{"lang":"cs","indent":{"tab":28764,"space":271569,"commits":1738,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1235,"nospace":67,"newline":11343,"commits":953,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":463,"allcaps":163,"notallcaps":308,"commits":166,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10114,"nospace":463,"commits":938,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":933,"nospace":16991,"commits":1135,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":292191,"char120":31419,"char150":9444,"commits":1781,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-12","convention":{"lang":"cs","indent":{"tab":80957,"space":511449,"commits":2376,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4473,"nospace":296,"newline":23095,"commits":1402,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":687,"allcaps":364,"notallcaps":489,"commits":258,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22238,"nospace":1833,"commits":1392,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":694,"nospace":36284,"commits":1664,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":550338,"char120":49733,"char150":13923,"commits":2434,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-11","convention":{"lang":"cs","indent":{"tab":77626,"space":319629,"commits":1926,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1845,"nospace":178,"newline":14450,"commits":1189,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1273,"allcaps":423,"notallcaps":1032,"commits":241,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13939,"nospace":1129,"commits":1173,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":949,"nospace":21482,"commits":1355,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":361826,"char120":32167,"char150":8481,"commits":1988,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-10","convention":{"lang":"cs","indent":{"tab":43287,"space":334233,"commits":1632,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3985,"nospace":231,"newline":14465,"commits":954,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":376,"allcaps":115,"notallcaps":420,"commits":180,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14855,"nospace":929,"commits":939,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":217,"nospace":23428,"commits":1104,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":353611,"char120":38448,"char150":13135,"commits":1697,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-09","convention":{"lang":"cs","indent":{"tab":42690,"space":287611,"commits":1779,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2574,"nospace":48,"newline":12528,"commits":963,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":323,"allcaps":314,"notallcaps":210,"commits":182,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12095,"nospace":1018,"commits":957,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":513,"nospace":19015,"commits":1141,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":300198,"char120":30151,"char150":11371,"commits":1840,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-08","convention":{"lang":"cs","indent":{"tab":71621,"space":276725,"commits":1927,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2575,"nospace":62,"newline":11913,"commits":1070,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":384,"allcaps":151,"notallcaps":691,"commits":210,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11832,"nospace":530,"commits":1030,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":702,"nospace":19418,"commits":1300,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":297028,"char120":31566,"char150":9352,"commits":1970,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-07","convention":{"lang":"cs","indent":{"tab":94778,"space":357513,"commits":1684,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4574,"nospace":267,"newline":14265,"commits":907,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":787,"allcaps":345,"notallcaps":216,"commits":166,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16057,"nospace":1122,"commits":902,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1203,"nospace":24301,"commits":1095,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":372210,"char120":40899,"char150":12111,"commits":1743,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-06","convention":{"lang":"cs","indent":{"tab":35754,"space":292947,"commits":1567,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1201,"nospace":80,"newline":13272,"commits":875,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":585,"allcaps":400,"notallcaps":610,"commits":167,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12011,"nospace":721,"commits":848,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":219,"nospace":20022,"commits":1034,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":320401,"char120":32113,"char150":8580,"commits":1621,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-05","convention":{"lang":"cs","indent":{"tab":75012,"space":424556,"commits":2363,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1954,"nospace":137,"newline":18534,"commits":1366,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":582,"allcaps":890,"notallcaps":160,"commits":248,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17061,"nospace":1353,"commits":1341,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":595,"nospace":27722,"commits":1630,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":454397,"char120":45290,"char150":13000,"commits":2431,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-04","convention":{"lang":"cs","indent":{"tab":69025,"space":404500,"commits":2465,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4390,"nospace":231,"newline":18078,"commits":1433,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":530,"allcaps":510,"notallcaps":553,"commits":260,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18284,"nospace":1275,"commits":1398,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":967,"nospace":28013,"commits":1752,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":430365,"char120":44208,"char150":12817,"commits":2514,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-03","convention":{"lang":"cs","indent":{"tab":104249,"space":330937,"commits":2043,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1634,"nospace":121,"newline":15990,"commits":1106,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":731,"allcaps":174,"notallcaps":864,"commits":164,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12715,"nospace":2897,"commits":1077,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2667,"nospace":21692,"commits":1343,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":360220,"char120":34234,"char150":10355,"commits":2110,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-02","convention":{"lang":"cs","indent":{"tab":168272,"space":482003,"commits":2043,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3566,"nospace":271,"newline":17424,"commits":1122,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":680,"allcaps":721,"notallcaps":221,"commits":212,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17180,"nospace":1476,"commits":1098,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":644,"nospace":28078,"commits":1343,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":521187,"char120":48055,"char150":12767,"commits":2113,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2014-01-01","convention":{"lang":"cs","indent":{"tab":64709,"space":347708,"commits":2456,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2355,"nospace":192,"newline":15343,"commits":1386,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":439,"allcaps":287,"notallcaps":210,"commits":239,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14506,"nospace":942,"commits":1350,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":245,"nospace":23472,"commits":1659,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":376849,"char120":35129,"char150":9558,"commits":2509,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-31","convention":{"lang":"cs","indent":{"tab":112887,"space":422056,"commits":1868,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5006,"nospace":704,"newline":20956,"commits":1064,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":554,"allcaps":908,"notallcaps":239,"commits":175,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19016,"nospace":2153,"commits":1027,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1066,"nospace":29188,"commits":1280,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":468259,"char120":43640,"char150":9906,"commits":1911,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-30","convention":{"lang":"cs","indent":{"tab":132854,"space":550378,"commits":2376,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1954,"nospace":112,"newline":24761,"commits":1402,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":779,"allcaps":1701,"notallcaps":760,"commits":246,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22310,"nospace":1478,"commits":1372,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1473,"nospace":36957,"commits":1676,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":607107,"char120":58871,"char150":16007,"commits":2434,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-29","convention":{"lang":"cs","indent":{"tab":84161,"space":509295,"commits":2515,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2372,"nospace":443,"newline":21421,"commits":1471,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":493,"allcaps":1493,"notallcaps":185,"commits":261,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19759,"nospace":1471,"commits":1447,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":884,"nospace":33250,"commits":1731,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":550127,"char120":48803,"char150":17422,"commits":2580,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-28","convention":{"lang":"cs","indent":{"tab":73985,"space":411721,"commits":2331,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2145,"nospace":503,"newline":17182,"commits":1373,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":405,"allcaps":469,"notallcaps":269,"commits":222,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15114,"nospace":1300,"commits":1331,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1151,"nospace":25481,"commits":1611,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":454821,"char120":39062,"char150":11640,"commits":2379,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-27","convention":{"lang":"cs","indent":{"tab":78515,"space":370378,"commits":2106,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2802,"nospace":97,"newline":16225,"commits":1131,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":440,"allcaps":572,"notallcaps":257,"commits":175,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15073,"nospace":814,"commits":1103,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":307,"nospace":23729,"commits":1373,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":412602,"char120":37635,"char150":12027,"commits":2154,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-26","convention":{"lang":"cs","indent":{"tab":66425,"space":470281,"commits":2363,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2404,"nospace":447,"newline":19589,"commits":1373,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":409,"allcaps":293,"notallcaps":163,"commits":229,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17579,"nospace":1879,"commits":1325,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":947,"nospace":28993,"commits":1582,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":521519,"char120":44352,"char150":13821,"commits":2405,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-25","convention":{"lang":"cs","indent":{"tab":125340,"space":798783,"commits":2741,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5249,"nospace":264,"newline":34721,"commits":1552,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":510,"allcaps":440,"notallcaps":480,"commits":283,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":32910,"nospace":1275,"commits":1525,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1344,"nospace":49517,"commits":1847,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":870122,"char120":77652,"char150":20116,"commits":2798,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-24","convention":{"lang":"cs","indent":{"tab":103736,"space":586304,"commits":2462,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5385,"nospace":444,"newline":26839,"commits":1421,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":608,"allcaps":872,"notallcaps":287,"commits":249,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25822,"nospace":1695,"commits":1366,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1656,"nospace":37423,"commits":1687,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":632640,"char120":58861,"char150":17445,"commits":2526,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-23","convention":{"lang":"cs","indent":{"tab":67146,"space":359300,"commits":2245,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1818,"nospace":210,"newline":14720,"commits":1331,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":405,"allcaps":184,"notallcaps":301,"commits":211,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13631,"nospace":878,"commits":1303,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":536,"nospace":22258,"commits":1548,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":390206,"char120":38975,"char150":10972,"commits":2282,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-22","convention":{"lang":"cs","indent":{"tab":168097,"space":619208,"commits":2803,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4997,"nospace":177,"newline":26266,"commits":1617,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":778,"allcaps":1905,"notallcaps":503,"commits":244,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25280,"nospace":1705,"commits":1589,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":471,"nospace":40387,"commits":1876,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":669968,"char120":55527,"char150":19011,"commits":2863,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-21","convention":{"lang":"cs","indent":{"tab":84192,"space":401350,"commits":2160,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5464,"nospace":446,"newline":14310,"commits":1353,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":598,"allcaps":293,"notallcaps":313,"commits":217,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16328,"nospace":1003,"commits":1323,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":330,"nospace":25944,"commits":1517,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":431757,"char120":36588,"char150":10120,"commits":2213,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-20","convention":{"lang":"cs","indent":{"tab":96405,"space":403236,"commits":2013,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2449,"nospace":72,"newline":17107,"commits":1162,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":623,"allcaps":1524,"notallcaps":708,"commits":214,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15722,"nospace":1409,"commits":1134,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":843,"nospace":26298,"commits":1374,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":433331,"char120":43040,"char150":17633,"commits":2071,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-19","convention":{"lang":"cs","indent":{"tab":102383,"space":363571,"commits":1994,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1890,"nospace":300,"newline":18378,"commits":1204,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":531,"allcaps":200,"notallcaps":1081,"commits":205,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16120,"nospace":1881,"commits":1177,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1686,"nospace":25998,"commits":1340,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":387548,"char120":40315,"char150":11271,"commits":2049,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-18","convention":{"lang":"cs","indent":{"tab":65410,"space":302638,"commits":1449,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1673,"nospace":456,"newline":12622,"commits":854,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":381,"allcaps":788,"notallcaps":328,"commits":137,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11962,"nospace":545,"commits":818,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":489,"nospace":18137,"commits":942,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":307774,"char120":36496,"char150":16000,"commits":1481,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-17","convention":{"lang":"cs","indent":{"tab":78449,"space":316914,"commits":1803,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2669,"nospace":82,"newline":15881,"commits":1010,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":942,"allcaps":198,"notallcaps":156,"commits":186,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15244,"nospace":1477,"commits":977,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":608,"nospace":22555,"commits":1173,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":337070,"char120":35710,"char150":13283,"commits":1866,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-16","convention":{"lang":"cs","indent":{"tab":60269,"space":454182,"commits":1988,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1301,"nospace":122,"newline":20905,"commits":1181,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":462,"allcaps":326,"notallcaps":503,"commits":215,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17712,"nospace":1396,"commits":1158,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1010,"nospace":27926,"commits":1341,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":482940,"char120":53643,"char150":15300,"commits":2068,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-15","convention":{"lang":"cs","indent":{"tab":126694,"space":625747,"commits":2610,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":8697,"nospace":198,"newline":27660,"commits":1639,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":546,"allcaps":1419,"notallcaps":767,"commits":254,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":30911,"nospace":2287,"commits":1631,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1805,"nospace":44008,"commits":1851,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":686996,"char120":60368,"char150":18225,"commits":2688,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-14","convention":{"lang":"cs","indent":{"tab":146171,"space":531641,"commits":2427,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5715,"nospace":865,"newline":20226,"commits":1451,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":495,"allcaps":608,"notallcaps":182,"commits":189,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22610,"nospace":1259,"commits":1434,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":750,"nospace":33998,"commits":1670,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":559500,"char120":48939,"char150":15317,"commits":2473,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-13","convention":{"lang":"cs","indent":{"tab":66106,"space":309835,"commits":1488,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1613,"nospace":141,"newline":15145,"commits":858,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":355,"allcaps":122,"notallcaps":131,"commits":144,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14055,"nospace":766,"commits":837,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":283,"nospace":20121,"commits":990,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":346478,"char120":29037,"char150":8842,"commits":1536,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-12","convention":{"lang":"cs","indent":{"tab":75115,"space":416520,"commits":1874,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2536,"nospace":194,"newline":16988,"commits":1090,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":896,"allcaps":126,"notallcaps":250,"commits":179,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16104,"nospace":828,"commits":1044,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":897,"nospace":31606,"commits":1256,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":445890,"char120":47402,"char150":17715,"commits":1935,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-11","convention":{"lang":"cs","indent":{"tab":110659,"space":432441,"commits":2003,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2116,"nospace":320,"newline":23645,"commits":1172,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":466,"allcaps":639,"notallcaps":504,"commits":197,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21470,"nospace":1557,"commits":1138,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":835,"nospace":33262,"commits":1378,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":464808,"char120":47734,"char150":13471,"commits":2075,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-10","convention":{"lang":"cs","indent":{"tab":42235,"space":311529,"commits":1732,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1162,"nospace":153,"newline":15602,"commits":1020,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":396,"allcaps":539,"notallcaps":501,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13688,"nospace":1267,"commits":996,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":860,"nospace":20993,"commits":1186,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":327446,"char120":33406,"char150":10155,"commits":1777,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-09","convention":{"lang":"cs","indent":{"tab":46548,"space":362851,"commits":2087,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2237,"nospace":289,"newline":17415,"commits":1207,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":443,"allcaps":266,"notallcaps":287,"commits":195,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15412,"nospace":1187,"commits":1177,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2909,"nospace":21965,"commits":1425,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":388279,"char120":40652,"char150":11546,"commits":2154,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-08","convention":{"lang":"cs","indent":{"tab":131137,"space":518666,"commits":2899,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3688,"nospace":499,"newline":24956,"commits":1728,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":935,"allcaps":472,"notallcaps":354,"commits":245,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23183,"nospace":2210,"commits":1705,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":508,"nospace":36229,"commits":1962,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":555293,"char120":48648,"char150":15301,"commits":2947,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-07","convention":{"lang":"cs","indent":{"tab":69590,"space":419625,"commits":2181,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4652,"nospace":295,"newline":18218,"commits":1316,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":502,"allcaps":307,"notallcaps":206,"commits":205,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19339,"nospace":1241,"commits":1295,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":352,"nospace":29028,"commits":1505,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":451034,"char120":39792,"char150":13333,"commits":2224,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-06","convention":{"lang":"cs","indent":{"tab":40926,"space":257278,"commits":1616,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1931,"nospace":87,"newline":11014,"commits":932,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":233,"allcaps":133,"notallcaps":105,"commits":153,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10797,"nospace":454,"commits":905,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":264,"nospace":17172,"commits":1063,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":275938,"char120":29267,"char150":8511,"commits":1671,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-05","convention":{"lang":"cs","indent":{"tab":23537,"space":261267,"commits":1597,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1580,"nospace":261,"newline":11860,"commits":896,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":369,"allcaps":106,"notallcaps":279,"commits":149,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10867,"nospace":600,"commits":861,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1408,"nospace":16233,"commits":1023,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":288003,"char120":29388,"char150":7822,"commits":1654,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-04","convention":{"lang":"cs","indent":{"tab":43208,"space":290298,"commits":1849,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3667,"nospace":43,"newline":13085,"commits":1121,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":288,"allcaps":188,"notallcaps":431,"commits":160,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12992,"nospace":1267,"commits":1103,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1324,"nospace":20914,"commits":1291,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":311838,"char120":31691,"char150":7857,"commits":1895,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-03","convention":{"lang":"cs","indent":{"tab":98164,"space":343578,"commits":1846,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3144,"nospace":150,"newline":17674,"commits":1148,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":491,"allcaps":251,"notallcaps":292,"commits":174,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16345,"nospace":1516,"commits":1118,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1026,"nospace":24339,"commits":1299,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":365340,"char120":39115,"char150":13591,"commits":1887,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-02","convention":{"lang":"cs","indent":{"tab":62156,"space":246015,"commits":1574,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2507,"nospace":114,"newline":10388,"commits":900,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":333,"allcaps":80,"notallcaps":1137,"commits":148,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10278,"nospace":715,"commits":887,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":572,"nospace":15853,"commits":1048,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":259943,"char120":26470,"char150":8872,"commits":1614,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-12-01","convention":{"lang":"cs","indent":{"tab":166554,"space":563735,"commits":2692,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5634,"nospace":477,"newline":25435,"commits":1713,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":483,"allcaps":2038,"notallcaps":864,"commits":279,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25531,"nospace":2457,"commits":1671,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1012,"nospace":39280,"commits":1928,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":604429,"char120":55820,"char150":17988,"commits":2751,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-30","convention":{"lang":"cs","indent":{"tab":84800,"space":491536,"commits":2808,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3279,"nospace":569,"newline":21388,"commits":1724,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":550,"allcaps":3553,"notallcaps":517,"commits":245,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21051,"nospace":1949,"commits":1705,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1136,"nospace":34053,"commits":1925,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":535938,"char120":56158,"char150":12285,"commits":2864,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-29","convention":{"lang":"cs","indent":{"tab":130208,"space":390585,"commits":1882,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5595,"nospace":320,"newline":16443,"commits":1193,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":412,"allcaps":246,"notallcaps":812,"commits":162,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18183,"nospace":1059,"commits":1170,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":279,"nospace":27920,"commits":1323,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":414044,"char120":38432,"char150":9897,"commits":1918,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-28","convention":{"lang":"cs","indent":{"tab":70453,"space":347816,"commits":2061,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1939,"nospace":225,"newline":16811,"commits":1211,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":228,"allcaps":150,"notallcaps":170,"commits":167,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14546,"nospace":1459,"commits":1201,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":992,"nospace":23174,"commits":1386,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":368121,"char120":35388,"char150":11649,"commits":2127,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-27","convention":{"lang":"cs","indent":{"tab":91885,"space":326631,"commits":2093,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3330,"nospace":443,"newline":14981,"commits":1237,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":440,"allcaps":271,"notallcaps":165,"commits":214,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14139,"nospace":1704,"commits":1220,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":629,"nospace":23528,"commits":1428,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":338801,"char120":32400,"char150":9978,"commits":2145,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-26","convention":{"lang":"cs","indent":{"tab":44348,"space":297303,"commits":1748,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1529,"nospace":263,"newline":14451,"commits":1058,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":291,"allcaps":175,"notallcaps":220,"commits":187,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12797,"nospace":1067,"commits":1064,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1365,"nospace":20676,"commits":1239,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":305140,"char120":33980,"char150":11450,"commits":1786,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-25","convention":{"lang":"cs","indent":{"tab":199541,"space":642973,"commits":2073,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2832,"nospace":1154,"newline":29119,"commits":1265,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":779,"allcaps":360,"notallcaps":1144,"commits":198,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25149,"nospace":2060,"commits":1247,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2000,"nospace":42069,"commits":1435,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":680559,"char120":61307,"char150":18789,"commits":2112,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-24","convention":{"lang":"cs","indent":{"tab":104385,"space":480598,"commits":3021,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2407,"nospace":289,"newline":26624,"commits":1794,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":536,"allcaps":381,"notallcaps":553,"commits":248,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24289,"nospace":1709,"commits":1749,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":158,"nospace":33937,"commits":2038,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":516290,"char120":50546,"char150":13069,"commits":3097,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-23","convention":{"lang":"cs","indent":{"tab":66220,"space":462334,"commits":2511,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2725,"nospace":404,"newline":22767,"commits":1509,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":555,"allcaps":607,"notallcaps":378,"commits":247,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21120,"nospace":1774,"commits":1481,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":665,"nospace":30937,"commits":1740,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":502281,"char120":53055,"char150":14740,"commits":2548,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-22","convention":{"lang":"cs","indent":{"tab":106740,"space":440892,"commits":1946,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2931,"nospace":381,"newline":20217,"commits":1141,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":479,"allcaps":239,"notallcaps":616,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19448,"nospace":1332,"commits":1102,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":406,"nospace":30595,"commits":1295,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":468988,"char120":50362,"char150":15386,"commits":2007,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-21","convention":{"lang":"cs","indent":{"tab":106418,"space":460061,"commits":1952,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1872,"nospace":139,"newline":21983,"commits":1154,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":604,"allcaps":777,"notallcaps":333,"commits":174,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19770,"nospace":871,"commits":1116,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2777,"nospace":26933,"commits":1302,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":481872,"char120":47759,"char150":16012,"commits":2055,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-20","convention":{"lang":"cs","indent":{"tab":88461,"space":425773,"commits":2130,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2073,"nospace":233,"newline":18618,"commits":1315,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":511,"allcaps":299,"notallcaps":1520,"commits":242,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16713,"nospace":1490,"commits":1297,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1350,"nospace":25430,"commits":1476,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":453560,"char120":46381,"char150":12714,"commits":2186,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-19","convention":{"lang":"cs","indent":{"tab":121035,"space":453726,"commits":1858,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2838,"nospace":95,"newline":21783,"commits":1102,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":730,"allcaps":1337,"notallcaps":5023,"commits":247,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19552,"nospace":1004,"commits":1065,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1147,"nospace":30128,"commits":1270,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":475621,"char120":50365,"char150":14931,"commits":1918,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-18","convention":{"lang":"cs","indent":{"tab":43355,"space":327787,"commits":1726,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1752,"nospace":69,"newline":15499,"commits":1038,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":703,"allcaps":432,"notallcaps":403,"commits":166,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13293,"nospace":1129,"commits":1006,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1302,"nospace":21502,"commits":1188,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":349286,"char120":35620,"char150":10189,"commits":1760,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-17","convention":{"lang":"cs","indent":{"tab":105636,"space":534593,"commits":2760,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3607,"nospace":318,"newline":25722,"commits":1643,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":501,"allcaps":612,"notallcaps":508,"commits":282,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22887,"nospace":2433,"commits":1608,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1423,"nospace":35724,"commits":1848,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":565157,"char120":58185,"char150":16578,"commits":2825,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-16","convention":{"lang":"cs","indent":{"tab":102547,"space":421183,"commits":2666,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3426,"nospace":251,"newline":18513,"commits":1558,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":530,"allcaps":915,"notallcaps":378,"commits":253,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17018,"nospace":1849,"commits":1556,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":501,"nospace":29275,"commits":1836,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":451381,"char120":44501,"char150":11112,"commits":2736,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-15","convention":{"lang":"cs","indent":{"tab":103396,"space":362532,"commits":1984,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3572,"nospace":207,"newline":18400,"commits":1109,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":672,"allcaps":254,"notallcaps":231,"commits":189,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":18417,"nospace":1097,"commits":1071,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1343,"nospace":26740,"commits":1295,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":384354,"char120":39445,"char150":11778,"commits":2058,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-14","convention":{"lang":"cs","indent":{"tab":82430,"space":397857,"commits":1934,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1555,"nospace":127,"newline":16737,"commits":1041,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":273,"allcaps":778,"notallcaps":164,"commits":215,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14496,"nospace":966,"commits":1004,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":882,"nospace":24453,"commits":1228,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":416889,"char120":42644,"char150":12413,"commits":1990,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-13","convention":{"lang":"cs","indent":{"tab":36327,"space":267752,"commits":1616,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1748,"nospace":180,"newline":12131,"commits":973,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":236,"allcaps":325,"notallcaps":101,"commits":144,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11290,"nospace":726,"commits":947,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":875,"nospace":16466,"commits":1112,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":288266,"char120":32637,"char150":11482,"commits":1658,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-12","convention":{"lang":"cs","indent":{"tab":68059,"space":324072,"commits":1587,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5262,"nospace":1500,"newline":12762,"commits":957,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1314,"allcaps":430,"notallcaps":457,"commits":190,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13301,"nospace":1149,"commits":937,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1733,"nospace":22451,"commits":1122,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":341676,"char120":37988,"char150":12746,"commits":1647,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-11","convention":{"lang":"cs","indent":{"tab":82993,"space":538381,"commits":2348,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2813,"nospace":146,"newline":26822,"commits":1378,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":599,"allcaps":1394,"notallcaps":289,"commits":291,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":23159,"nospace":2066,"commits":1333,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":576,"nospace":36195,"commits":1581,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":572736,"char120":61394,"char150":14741,"commits":2397,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-10","convention":{"lang":"cs","indent":{"tab":100590,"space":496864,"commits":2711,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":6212,"nospace":635,"newline":19572,"commits":1677,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":506,"allcaps":658,"notallcaps":899,"commits":252,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21619,"nospace":1845,"commits":1649,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":634,"nospace":35051,"commits":1907,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":528293,"char120":51281,"char150":14608,"commits":2773,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-09","convention":{"lang":"cs","indent":{"tab":80206,"space":313265,"commits":1844,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3430,"nospace":504,"newline":15769,"commits":1103,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":350,"allcaps":283,"notallcaps":155,"commits":182,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15478,"nospace":1285,"commits":1104,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":493,"nospace":23261,"commits":1283,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":337138,"char120":29003,"char150":9255,"commits":1872,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-08","convention":{"lang":"cs","indent":{"tab":77055,"space":398565,"commits":2112,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3321,"nospace":177,"newline":16738,"commits":1261,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":443,"allcaps":215,"notallcaps":2792,"commits":237,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16093,"nospace":1290,"commits":1262,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":357,"nospace":26845,"commits":1441,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":435260,"char120":38409,"char150":11646,"commits":2170,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-07","convention":{"lang":"cs","indent":{"tab":75567,"space":463416,"commits":2116,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3067,"nospace":146,"newline":20170,"commits":1195,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":493,"allcaps":392,"notallcaps":828,"commits":220,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19040,"nospace":1008,"commits":1173,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":684,"nospace":29142,"commits":1412,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":485227,"char120":52461,"char150":15204,"commits":2154,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-06","convention":{"lang":"cs","indent":{"tab":117488,"space":430832,"commits":1742,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3005,"nospace":100,"newline":21153,"commits":1065,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":304,"allcaps":1109,"notallcaps":451,"commits":192,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20558,"nospace":1115,"commits":1056,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":761,"nospace":29375,"commits":1205,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":464648,"char120":43369,"char150":12126,"commits":1776,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-05","convention":{"lang":"cs","indent":{"tab":69108,"space":336027,"commits":1765,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2208,"nospace":76,"newline":14214,"commits":997,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":412,"allcaps":601,"notallcaps":137,"commits":175,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13077,"nospace":776,"commits":982,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":209,"nospace":21777,"commits":1181,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":351508,"char120":37392,"char150":10697,"commits":1820,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-04","convention":{"lang":"cs","indent":{"tab":34341,"space":173683,"commits":759,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1090,"nospace":63,"newline":8627,"commits":421,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":136,"allcaps":258,"notallcaps":239,"commits":72,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":8642,"nospace":247,"commits":410,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":75,"nospace":11615,"commits":501,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":185138,"char120":20760,"char150":5256,"commits":775,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-03","convention":{"lang":"cs","indent":{"tab":7569,"space":58158,"commits":229,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":250,"nospace":2,"newline":2691,"commits":138,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":75,"allcaps":76,"notallcaps":62,"commits":29,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":2436,"nospace":64,"commits":136,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":329,"nospace":3495,"commits":168,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":66280,"char120":7690,"char150":1066,"commits":232,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-02","convention":{"lang":"cs","indent":{"tab":81543,"space":458995,"commits":2636,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3993,"nospace":454,"newline":22167,"commits":1578,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":904,"allcaps":3072,"notallcaps":183,"commits":229,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22499,"nospace":1514,"commits":1526,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":614,"nospace":33208,"commits":1811,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":488698,"char120":45481,"char150":12381,"commits":2692,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-11-01","convention":{"lang":"cs","indent":{"tab":90130,"space":452246,"commits":1979,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2814,"nospace":134,"newline":19371,"commits":1192,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":588,"allcaps":931,"notallcaps":909,"commits":230,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":17561,"nospace":1015,"commits":1158,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":156,"nospace":29371,"commits":1363,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":482592,"char120":45120,"char150":12086,"commits":2031,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-31","convention":{"lang":"cs","indent":{"tab":103443,"space":482061,"commits":2179,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":5881,"nospace":205,"newline":23430,"commits":1299,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":208,"allcaps":605,"notallcaps":400,"commits":212,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24630,"nospace":931,"commits":1265,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":573,"nospace":36548,"commits":1441,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":494811,"char120":50791,"char150":17969,"commits":2225,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-30","convention":{"lang":"cs","indent":{"tab":89427,"space":513807,"commits":1979,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1943,"nospace":495,"newline":24195,"commits":1219,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":580,"allcaps":305,"notallcaps":793,"commits":220,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21799,"nospace":1439,"commits":1171,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2573,"nospace":33556,"commits":1325,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":539773,"char120":54154,"char150":19602,"commits":2038,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-29","convention":{"lang":"cs","indent":{"tab":48743,"space":305668,"commits":1494,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1832,"nospace":117,"newline":14465,"commits":902,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":610,"allcaps":289,"notallcaps":376,"commits":118,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12302,"nospace":1322,"commits":882,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":545,"nospace":20006,"commits":1016,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":328689,"char120":30198,"char150":8942,"commits":1529,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-28","convention":{"lang":"cs","indent":{"tab":88343,"space":366209,"commits":1372,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2001,"nospace":126,"newline":17826,"commits":831,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":355,"allcaps":175,"notallcaps":549,"commits":145,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16266,"nospace":1352,"commits":820,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1022,"nospace":24485,"commits":935,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":390584,"char120":33389,"char150":11590,"commits":1401,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-27","convention":{"lang":"cs","indent":{"tab":59958,"space":381155,"commits":1856,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1738,"nospace":225,"newline":18427,"commits":1127,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":424,"allcaps":297,"notallcaps":386,"commits":188,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16109,"nospace":1253,"commits":1112,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":396,"nospace":26691,"commits":1284,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":408416,"char120":38818,"char150":11349,"commits":1892,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-26","convention":{"lang":"cs","indent":{"tab":62919,"space":365381,"commits":2094,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2280,"nospace":157,"newline":15206,"commits":1231,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":538,"allcaps":254,"notallcaps":523,"commits":201,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14330,"nospace":956,"commits":1191,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":296,"nospace":22743,"commits":1384,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":404069,"char120":39486,"char150":13213,"commits":2150,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-25","convention":{"lang":"cs","indent":{"tab":47224,"space":240261,"commits":1226,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1362,"nospace":166,"newline":12620,"commits":710,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":190,"allcaps":119,"notallcaps":375,"commits":136,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10614,"nospace":1499,"commits":684,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":326,"nospace":16207,"commits":805,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":255705,"char120":24725,"char150":7366,"commits":1274,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-24","convention":{"lang":"cs","indent":{"tab":63156,"space":301419,"commits":1489,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3246,"nospace":147,"newline":12118,"commits":874,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":565,"allcaps":218,"notallcaps":499,"commits":148,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11120,"nospace":1531,"commits":847,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1186,"nospace":18879,"commits":972,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":327133,"char120":36226,"char150":9720,"commits":1545,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-23","convention":{"lang":"cs","indent":{"tab":65055,"space":243666,"commits":982,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1042,"nospace":99,"newline":12028,"commits":594,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":257,"allcaps":131,"notallcaps":137,"commits":93,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":10035,"nospace":537,"commits":579,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":580,"nospace":16306,"commits":667,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":264098,"char120":25563,"char150":7011,"commits":1011,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-22","convention":{"lang":"cs","indent":{"tab":37218,"space":297466,"commits":1295,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1479,"nospace":111,"newline":15025,"commits":760,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":764,"allcaps":297,"notallcaps":432,"commits":139,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12225,"nospace":1093,"commits":738,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":433,"nospace":20818,"commits":871,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":319659,"char120":33746,"char150":9775,"commits":1339,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-21","convention":{"lang":"cs","indent":{"tab":64909,"space":294087,"commits":1378,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2439,"nospace":80,"newline":13600,"commits":841,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":158,"allcaps":84,"notallcaps":487,"commits":105,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13127,"nospace":472,"commits":808,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":259,"nospace":19745,"commits":911,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":314418,"char120":26462,"char150":7547,"commits":1431,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-20","convention":{"lang":"cs","indent":{"tab":166144,"space":510426,"commits":2199,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4582,"nospace":747,"newline":21210,"commits":1358,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":874,"allcaps":513,"notallcaps":287,"commits":249,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21157,"nospace":1320,"commits":1338,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":576,"nospace":32690,"commits":1561,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":540257,"char120":48117,"char150":13298,"commits":2245,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-19","convention":{"lang":"cs","indent":{"tab":141626,"space":548981,"commits":2211,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2311,"nospace":186,"newline":24434,"commits":1339,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":862,"allcaps":340,"notallcaps":179,"commits":199,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21406,"nospace":2393,"commits":1319,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":709,"nospace":36838,"commits":1558,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":602968,"char120":49510,"char150":12203,"commits":2273,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-18","convention":{"lang":"cs","indent":{"tab":74870,"space":334520,"commits":1463,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2022,"nospace":96,"newline":17033,"commits":895,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":338,"allcaps":104,"notallcaps":644,"commits":169,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15459,"nospace":1364,"commits":873,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":740,"nospace":22860,"commits":1041,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":365601,"char120":34055,"char150":9723,"commits":1513,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-17","convention":{"lang":"cs","indent":{"tab":65462,"space":292928,"commits":1307,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1151,"nospace":71,"newline":14634,"commits":773,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":321,"allcaps":108,"notallcaps":730,"commits":126,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13337,"nospace":783,"commits":754,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":473,"nospace":21066,"commits":889,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":300615,"char120":31094,"char150":8073,"commits":1344,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-16","convention":{"lang":"cs","indent":{"tab":94467,"space":239133,"commits":1293,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1475,"nospace":124,"newline":12247,"commits":781,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":190,"allcaps":147,"notallcaps":1260,"commits":114,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11613,"nospace":919,"commits":754,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":308,"nospace":17914,"commits":879,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":257008,"char120":26777,"char150":6205,"commits":1322,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-15","convention":{"lang":"cs","indent":{"tab":71956,"space":305055,"commits":1378,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3278,"nospace":216,"newline":13137,"commits":804,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":219,"allcaps":187,"notallcaps":466,"commits":127,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13147,"nospace":677,"commits":781,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1671,"nospace":19244,"commits":912,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":322442,"char120":35172,"char150":11241,"commits":1399,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-14","convention":{"lang":"cs","indent":{"tab":44234,"space":292691,"commits":1386,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1190,"nospace":53,"newline":13948,"commits":818,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":362,"allcaps":172,"notallcaps":144,"commits":142,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11708,"nospace":1275,"commits":795,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1024,"nospace":18337,"commits":914,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":306749,"char120":31363,"char150":12396,"commits":1410,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-13","convention":{"lang":"cs","indent":{"tab":114268,"space":418646,"commits":2327,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2198,"nospace":318,"newline":20748,"commits":1373,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":323,"allcaps":341,"notallcaps":295,"commits":192,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16819,"nospace":3878,"commits":1352,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":3480,"nospace":27684,"commits":1563,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":458539,"char120":41750,"char150":11527,"commits":2386,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-12","convention":{"lang":"cs","indent":{"tab":185243,"space":507787,"commits":2280,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4268,"nospace":302,"newline":24021,"commits":1366,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":416,"allcaps":690,"notallcaps":520,"commits":218,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22957,"nospace":1657,"commits":1344,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":399,"nospace":39391,"commits":1565,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":549606,"char120":51503,"char150":15438,"commits":2328,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-11","convention":{"lang":"cs","indent":{"tab":138393,"space":482892,"commits":1632,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4546,"nospace":296,"newline":21132,"commits":950,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":518,"allcaps":309,"notallcaps":691,"commits":186,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":21339,"nospace":1308,"commits":933,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":448,"nospace":32582,"commits":1085,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":513267,"char120":49376,"char150":15554,"commits":1682,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-10","convention":{"lang":"cs","indent":{"tab":50244,"space":237486,"commits":1494,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2153,"nospace":83,"newline":11783,"commits":897,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":293,"allcaps":311,"notallcaps":283,"commits":131,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11053,"nospace":486,"commits":889,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":507,"nospace":17159,"commits":1017,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":251585,"char120":28548,"char150":6864,"commits":1533,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-09","convention":{"lang":"cs","indent":{"tab":42660,"space":292752,"commits":1384,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2696,"nospace":111,"newline":11840,"commits":800,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":251,"allcaps":126,"notallcaps":246,"commits":133,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":11286,"nospace":669,"commits":782,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":280,"nospace":18895,"commits":905,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":305344,"char120":29802,"char150":9071,"commits":1431,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-08","convention":{"lang":"cs","indent":{"tab":59718,"space":328005,"commits":1664,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1771,"nospace":104,"newline":13949,"commits":987,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":545,"allcaps":222,"notallcaps":427,"commits":184,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12769,"nospace":853,"commits":946,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":555,"nospace":22819,"commits":1135,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":345472,"char120":36791,"char150":9678,"commits":1696,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-07","convention":{"lang":"cs","indent":{"tab":183962,"space":561152,"commits":2190,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3369,"nospace":604,"newline":26701,"commits":1295,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":651,"allcaps":648,"notallcaps":264,"commits":242,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":24576,"nospace":1741,"commits":1263,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1231,"nospace":39347,"commits":1502,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":581282,"char120":60239,"char150":16596,"commits":2290,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-06","convention":{"lang":"cs","indent":{"tab":148535,"space":542005,"commits":2347,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2347,"nospace":201,"newline":27115,"commits":1374,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":457,"allcaps":276,"notallcaps":475,"commits":225,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":25166,"nospace":983,"commits":1354,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1360,"nospace":37674,"commits":1623,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":576992,"char120":57511,"char150":17713,"commits":2394,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-05","convention":{"lang":"cs","indent":{"tab":55730,"space":327215,"commits":1911,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2906,"nospace":197,"newline":13670,"commits":1092,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":376,"allcaps":196,"notallcaps":180,"commits":182,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13693,"nospace":717,"commits":1083,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1290,"nospace":21654,"commits":1262,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":350506,"char120":34375,"char150":8858,"commits":1939,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-04","convention":{"lang":"cs","indent":{"tab":89116,"space":270041,"commits":1381,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2718,"nospace":45,"newline":12748,"commits":812,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":320,"allcaps":302,"notallcaps":341,"commits":147,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12608,"nospace":971,"commits":795,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":495,"nospace":20855,"commits":898,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":294886,"char120":27745,"char150":8399,"commits":1436,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-03","convention":{"lang":"cs","indent":{"tab":75864,"space":341989,"commits":1761,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1871,"nospace":221,"newline":16683,"commits":991,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":814,"allcaps":304,"notallcaps":484,"commits":169,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15827,"nospace":849,"commits":964,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1323,"nospace":23688,"commits":1111,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":359551,"char120":38183,"char150":13845,"commits":1814,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-02","convention":{"lang":"cs","indent":{"tab":96839,"space":327417,"commits":1655,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2370,"nospace":164,"newline":15374,"commits":1000,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":322,"allcaps":119,"notallcaps":398,"commits":137,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15137,"nospace":752,"commits":989,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":1100,"nospace":22598,"commits":1153,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":339157,"char120":35493,"char150":11260,"commits":1706,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-10-01","convention":{"lang":"cs","indent":{"tab":106155,"space":330361,"commits":1755,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3446,"nospace":208,"newline":12331,"commits":1017,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":460,"allcaps":730,"notallcaps":150,"commits":170,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12313,"nospace":1692,"commits":975,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":476,"nospace":20950,"commits":1112,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":346255,"char120":36608,"char150":10926,"commits":1791,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-30","convention":{"lang":"cs","indent":{"tab":85691,"space":328018,"commits":1957,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2901,"nospace":305,"newline":13374,"commits":1143,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":714,"allcaps":206,"notallcaps":308,"commits":227,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13174,"nospace":722,"commits":1107,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":858,"nospace":21322,"commits":1301,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":353442,"char120":37558,"char150":10623,"commits":2019,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-29","convention":{"lang":"cs","indent":{"tab":90310,"space":477471,"commits":2389,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2727,"nospace":174,"newline":21284,"commits":1400,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":519,"allcaps":384,"notallcaps":304,"commits":244,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":19338,"nospace":1313,"commits":1374,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":200,"nospace":34106,"commits":1682,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":515707,"char120":47998,"char150":13569,"commits":2452,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-28","convention":{"lang":"cs","indent":{"tab":66046,"space":273925,"commits":1944,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2095,"nospace":328,"newline":13173,"commits":1160,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":255,"allcaps":264,"notallcaps":210,"commits":174,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":13135,"nospace":841,"commits":1135,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":366,"nospace":19981,"commits":1323,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":292599,"char120":29861,"char150":9351,"commits":1990,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-27","convention":{"lang":"cs","indent":{"tab":85874,"space":322213,"commits":1707,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2079,"nospace":594,"newline":13646,"commits":1004,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":785,"allcaps":277,"notallcaps":620,"commits":154,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12253,"nospace":1562,"commits":991,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":256,"nospace":21108,"commits":1143,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":355368,"char120":32954,"char150":8450,"commits":1739,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-26","convention":{"lang":"cs","indent":{"tab":61357,"space":292092,"commits":1572,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3569,"nospace":171,"newline":11366,"commits":911,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":593,"allcaps":289,"notallcaps":489,"commits":178,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12007,"nospace":655,"commits":905,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":951,"nospace":19375,"commits":1052,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":312072,"char120":33361,"char150":8408,"commits":1619,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-25","convention":{"lang":"cs","indent":{"tab":59058,"space":404877,"commits":1811,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":3078,"nospace":91,"newline":16546,"commits":1052,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":679,"allcaps":201,"notallcaps":863,"commits":191,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15734,"nospace":1320,"commits":1042,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":2080,"nospace":24253,"commits":1200,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":430641,"char120":44666,"char150":11531,"commits":1857,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-24","convention":{"lang":"cs","indent":{"tab":58305,"space":368480,"commits":1706,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2276,"nospace":617,"newline":18121,"commits":1018,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":345,"allcaps":143,"notallcaps":495,"commits":143,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":16680,"nospace":1120,"commits":988,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":951,"nospace":26136,"commits":1159,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":396982,"char120":41253,"char150":10896,"commits":1773,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-23","convention":{"lang":"cs","indent":{"tab":74166,"space":353278,"commits":1541,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1409,"nospace":144,"newline":16367,"commits":922,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1033,"allcaps":343,"notallcaps":248,"commits":163,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14228,"nospace":1028,"commits":906,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":763,"nospace":23647,"commits":1058,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":385791,"char120":36224,"char150":10019,"commits":1601,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-22","convention":{"lang":"cs","indent":{"tab":112218,"space":500843,"commits":2439,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":4083,"nospace":464,"newline":21269,"commits":1543,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":548,"allcaps":360,"notallcaps":661,"commits":272,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":20742,"nospace":1794,"commits":1509,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":338,"nospace":34272,"commits":1762,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":534408,"char120":51860,"char150":14567,"commits":2478,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-21","convention":{"lang":"cs","indent":{"tab":106148,"space":416492,"commits":2167,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":2598,"nospace":332,"newline":21857,"commits":1300,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":691,"allcaps":235,"notallcaps":872,"commits":211,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":22124,"nospace":845,"commits":1289,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":439,"nospace":31997,"commits":1531,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":458441,"char120":45172,"char150":11798,"commits":2201,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-20","convention":{"lang":"cs","indent":{"tab":56972,"space":315561,"commits":1585,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1633,"nospace":242,"newline":15303,"commits":878,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":661,"allcaps":381,"notallcaps":321,"commits":153,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":14246,"nospace":789,"commits":853,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":360,"nospace":22288,"commits":1036,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":342490,"char120":33072,"char150":9937,"commits":1629,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-19","convention":{"lang":"cs","indent":{"tab":62074,"space":333439,"commits":1452,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1932,"nospace":57,"newline":15309,"commits":861,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":1127,"allcaps":319,"notallcaps":300,"commits":181,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":12343,"nospace":1739,"commits":813,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":606,"nospace":25126,"commits":967,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":368262,"char120":34031,"char150":10873,"commits":1502,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-18","convention":{"lang":"cs","indent":{"tab":73653,"space":369266,"commits":1667,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":1936,"nospace":216,"newline":16493,"commits":953,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":527,"allcaps":292,"notallcaps":464,"commits":178,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":15010,"nospace":697,"commits":925,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":141,"nospace":26837,"commits":1129,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":415199,"char120":36626,"char150":9559,"commits":1728,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}},{"lang":"cs","file":"2013-09-17","convention":{"lang":"cs","indent":{"tab":42286,"space":186206,"commits":1078,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}]},"blockstatement":{"onespace":712,"nospace":95,"newline":7908,"commits":592,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}]},"constant":{"pascal":264,"allcaps":184,"notallcaps":198,"commits":101,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}]},"conditionstatement":{"onespace":6983,"nospace":298,"commits":581,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}]},"argumentdef":{"onespace":136,"nospace":13827,"commits":713,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}]},"linelength":{"char80":202601,"char120":19616,"char150":5233,"commits":1108,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}]}}}],"scores":{"lang":"cs","indent":{"tab":21069550,"space":97110793,"commits":496725,"title":"Space vs. Tab","column":[{"key":"tab","display":"Tab","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n    <span class=\"comment\">// use tab for indentation</span>\n    <span class=\"keyword\">return</span> something;\n}"},{"key":"space","display":"Space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GetSomething()\n{\n  <span class=\"keyword\">return</span> something;\n}"}],"total":118180343},"blockstatement":{"onespace":709042,"nospace":77760,"newline":4533180,"commits":291726,"title":"How to write block statements","column":[{"key":"onespace","display":"Curlybrace with one space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue) {\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo) {\n  <span class=\"comment\">//..</span>\n}"},{"key":"nospace","display":"Curlybrace with no space","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue){\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo){\n  <span class=\"comment\">//..</span>\n}"},{"key":"newline","display":"Curlybrace at new line","code":"<span class=\"keyword\">if</span> (height &lt; MIN_HEIGHT)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">while</span> (isTrue)\n{\n  <span class=\"comment\">//..</span>\n}\n\n<span class=\"keyword\">switch</span> (foo)\n{\n  <span class=\"comment\">//..</span>\n}"}],"total":5319982},"constant":{"pascal":135797,"allcaps":119034,"notallcaps":111765,"commits":48476,"title":"Constant name","column":[{"key":"pascal","display":"Constant is Pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FooBar = <span class=\"string\">\"baz\"</span>;"},{"key":"allcaps","display":"Constant name is all caps with underscore(_)","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> FOO_BAR = <span class=\"string\">\"baz\"</span>;"},{"key":"notallcaps","display":"Constant name is neither all caps and pascal cased","code":"<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> foo_bar = <span class=\"string\">\"baz\"</span>;\n\n<span class=\"keyword\">const</span> <span class=\"keyword\">string</span> fooBar = <span class=\"string\">\"baz\"</span>;"}],"total":366596},"conditionstatement":{"onespace":4251911,"nospace":355760,"commits":285117,"title":"How to write conditional statement","column":[{"key":"onespace","display":"Condition with one space","code":"<span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span> (v) {\n  <span class=\"comment\">//...</span>\n}"},{"key":"nospace","display":"Condition with no space","code":"<span class=\"keyword\">if</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) {\n  <span class=\"comment\">//...</span>\n}\n\n<span class=\"keyword\">switch</span>(v) {\n  <span class=\"comment\">//...</span>\n}"}],"total":4607671},"argumentdef":{"onespace":207913,"nospace":6708729,"commits":336888,"title":"Arguments definition with one space vs. no space","column":[{"key":"onespace","display":"One space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName( String name ) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>( isTrue ) {}\n\n<span class=\"keyword\">while</span>( isTrue ) {}"},{"key":"nospace","display":"No space","code":"<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> SetName(String name) {\n  <span class=\"comment\">// ...</span>\n}\n\n<span class=\"keyword\">if</span>(isTrue) {}\n\n<span class=\"keyword\">while</span>(isTrue) {}"}],"total":6916642},"linelength":{"char80":104549924,"char120":10252796,"char150":2995146,"commits":509605,"title":"Line length is over 80 characters?","column":[{"key":"char80","display":"Line length is within 80 characters.","code":"<span class=\"comment\">/* width is within 80 characters */</span>"},{"key":"char120","display":"Line length is within 120 characters","code":"<span class=\"comment\">/* width is within 120 characters */</span>"},{"key":"char150","display":"Line length is within 150 characters","code":"<span class=\"comment\">/* width is within 150 characters */</span>"}],"total":117797866}}}}